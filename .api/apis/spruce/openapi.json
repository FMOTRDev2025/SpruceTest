{
  "components": {
    "headers": {
      "s-ratelimit-limit": {
        "description": "Request limit per minute",
        "example": 100,
        "schema": {
          "type": "integer"
        }
      },
      "s-ratelimit-remaining": {
        "description": "Requests remaining this minute",
        "example": 94,
        "schema": {
          "type": "integer"
        }
      },
      "s-request-id": {
        "description": "The ID of the request",
        "example": "0E5QDGJC030000E5QDGJC03000",
        "schema": {
          "type": "string"
        }
      }
    },
    "parameters": {
      "s-idempotency-key": {
        "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
        "example": "S7uiKYMMRzAcuG8S",
        "in": "header",
        "name": "s-idempotency-key",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "answeredBy": {
        "properties": {
          "externalNumber": {
            "description": "the telephone number external to Spruce this call was answered by",
            "type": "string"
          },
          "lineId": {
            "description": "the ID of the phone line on the Spruce system this call was answered by",
            "type": "string"
          }
        },
        "type": "object"
      },
      "asyncRequest_id": {
        "description": "The id of an asynchronous request",
        "example": "asyncRequest_0D4QABCC06000",
        "type": "string"
      },
      "contact": {
        "properties": {
          "apiURL": {
            "description": "An absolute URL for fetching this contact from the API",
            "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
            "format": "url",
            "type": "string"
          },
          "appURL": {
            "description": "An absolute URL to view the contact in the Spruce app",
            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
            "format": "url",
            "type": "string"
          },
          "canDelete": {
            "description": "Whether the contact may be deleted.",
            "example": true,
            "type": "boolean"
          },
          "canEdit": {
            "description": "Whether the contact may be edited.",
            "example": true,
            "type": "boolean"
          },
          "category": {
            "enum": [
              "patient",
              "professional",
              "clinic",
              "unknown"
            ],
            "example": "patient",
            "type": "string"
          },
          "companyName": {
            "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
            "example": "Walgreens",
            "type": "string"
          },
          "created": {
            "description": "The date this contact was added to Spruce",
            "example": "2021-01-30T08:30:00Z",
            "format": "date-time",
            "type": "string"
          },
          "customContactFields": {
            "description": "Fields on a contact that are custom",
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's contact contact custom field ID",
                  "example": "entityCustomField_0E5QDGJC03000",
                  "type": "string"
                },
                "name": {
                  "description": "A name for the field",
                  "example": "Preferred Pharmacy",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the field",
                  "example": "CVS",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "dateOfBirth": {
            "description": "The contact's date of birth in the format YYYY-MM-DD.",
            "example": "2000-01-30",
            "format": "date",
            "type": "string"
          },
          "displayName": {
            "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
            "example": "Joe William Smith",
            "type": "string"
          },
          "emailAddresses": {
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's phone number ID",
                  "example": "entityContact_26RRC7PQ6JG00",
                  "format": "string",
                  "type": "string"
                },
                "label": {
                  "description": "A label for the email address such as 'Work', 'Home', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "example": "contact@example.com",
                  "format": "email",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "familyName": {
            "description": "The contact's family name (typically last name in US)",
            "example": "Smith",
            "type": "string"
          },
          "faxNumbers": {
            "items": {
              "properties": {
                "displayValue": {
                  "description": "The contact phone number in an easily readable format.",
                  "example": "(222) 555-0000",
                  "type": "string"
                },
                "id": {
                  "description": "Spruce's phone number ID",
                  "example": "entityContact_26RRC7PQ6JG00",
                  "format": "string",
                  "type": "string"
                },
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value",
                "displayValue"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "gender": {
            "enum": [
              "unknown",
              "male",
              "female",
              "other"
            ],
            "example": "unknown",
            "type": "string"
          },
          "genderDetail": {
            "description": "Optional free-text details for gender",
            "example": "Non-binary",
            "type": "string"
          },
          "givenName": {
            "description": "The contact's given name (typically first name in US)",
            "example": "Joe",
            "type": "string"
          },
          "hasAccount": {
            "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
            "example": true,
            "type": "boolean"
          },
          "hasPendingInvite": {
            "description": "Whether the contact has a pending Spruce account invitation",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Spruce's contact ID",
            "example": "entity_0E5QDGJC03000",
            "type": "string"
          },
          "integrationLinks": {
            "description": "Links between a contact and an integrated external system.",
            "items": {
              "properties": {
                "contactId": {
                  "description": "Spruce's contact ID",
                  "example": "entity_0E5QDGJC03000",
                  "type": "string"
                },
                "externalId": {
                  "description": "The id of a contact in an external system.",
                  "example": "elation_140797386655555",
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "elation",
                    "hint",
                    "athena",
                    "custom"
                  ],
                  "example": "elation",
                  "type": "string"
                },
                "url": {
                  "description": "The url of a contact in an integrated external system.",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "externalId",
                "contactId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "internalMemberIds": {
            "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "middleName": {
            "description": "The contact's middle name",
            "example": "William",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "organizationContactFields": {
            "description": "Fields on a contact that are custom",
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's contact organization contact custom field ID",
                  "example": "managedCustomField_0E5QDGJC03000",
                  "type": "string"
                },
                "name": {
                  "description": "A name for the field",
                  "example": "Preferred Pharmacy",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the field",
                  "example": "CVS",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "phoneNumbers": {
            "items": {
              "properties": {
                "displayValue": {
                  "description": "The contact phone number in an easily readable format.",
                  "example": "(222) 555-0000",
                  "type": "string"
                },
                "id": {
                  "description": "Spruce's phone number ID",
                  "example": "entityContact_26RRC7PQ6JG00",
                  "format": "string",
                  "type": "string"
                },
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value",
                "displayValue"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "pronouns": {
            "description": "The contact's pronouns",
            "example": "he/him",
            "type": "string"
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's contact tag ID",
                  "example": "tag_0E5QDGJC03000",
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type",
                  "type": "string"
                },
                "value": {
                  "description": "The text value of a contact tag",
                  "example": "Smith",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value",
                "object"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "displayName",
          "tags",
          "gender",
          "category",
          "created",
          "phoneNumbers",
          "emailAddresses",
          "customFields",
          "appURL",
          "apiURL",
          "hasAccount",
          "hasPendingInvite",
          "customContactFields",
          "organizationContactFields",
          "canDelete",
          "canEdit",
          "integrationLinks",
          "object",
          "internalMemberIds"
        ],
        "type": "object"
      },
      "contact_array": {
        "items": {
          "properties": {
            "apiURL": {
              "description": "An absolute URL for fetching this contact from the API",
              "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
              "format": "url",
              "type": "string"
            },
            "appURL": {
              "description": "An absolute URL to view the contact in the Spruce app",
              "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
              "format": "url",
              "type": "string"
            },
            "canDelete": {
              "description": "Whether the contact may be deleted.",
              "example": true,
              "type": "boolean"
            },
            "canEdit": {
              "description": "Whether the contact may be edited.",
              "example": true,
              "type": "boolean"
            },
            "category": {
              "enum": [
                "patient",
                "professional",
                "clinic",
                "unknown"
              ],
              "example": "patient",
              "type": "string"
            },
            "companyName": {
              "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
              "example": "Walgreens",
              "type": "string"
            },
            "created": {
              "description": "The date this contact was added to Spruce",
              "example": "2021-01-30T08:30:00Z",
              "format": "date-time",
              "type": "string"
            },
            "customContactFields": {
              "description": "Fields on a contact that are custom",
              "items": {
                "properties": {
                  "id": {
                    "description": "Spruce's contact contact custom field ID",
                    "example": "entityCustomField_0E5QDGJC03000",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name for the field",
                    "example": "Preferred Pharmacy",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field",
                    "example": "CVS",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "dateOfBirth": {
              "description": "The contact's date of birth in the format YYYY-MM-DD.",
              "example": "2000-01-30",
              "format": "date",
              "type": "string"
            },
            "displayName": {
              "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
              "example": "Joe William Smith",
              "type": "string"
            },
            "emailAddresses": {
              "items": {
                "properties": {
                  "id": {
                    "description": "Spruce's phone number ID",
                    "example": "entityContact_26RRC7PQ6JG00",
                    "format": "string",
                    "type": "string"
                  },
                  "label": {
                    "description": "A label for the email address such as 'Work', 'Home', etc.",
                    "example": "Work",
                    "type": "string"
                  },
                  "value": {
                    "example": "contact@example.com",
                    "format": "email",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "familyName": {
              "description": "The contact's family name (typically last name in US)",
              "example": "Smith",
              "type": "string"
            },
            "faxNumbers": {
              "items": {
                "properties": {
                  "displayValue": {
                    "description": "The contact phone number in an easily readable format.",
                    "example": "(222) 555-0000",
                    "type": "string"
                  },
                  "id": {
                    "description": "Spruce's phone number ID",
                    "example": "entityContact_26RRC7PQ6JG00",
                    "format": "string",
                    "type": "string"
                  },
                  "label": {
                    "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                    "example": "Work",
                    "type": "string"
                  },
                  "value": {
                    "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                    "example": 12225550000,
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "value",
                  "displayValue"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "gender": {
              "enum": [
                "unknown",
                "male",
                "female",
                "other"
              ],
              "example": "unknown",
              "type": "string"
            },
            "genderDetail": {
              "description": "Optional free-text details for gender",
              "example": "Non-binary",
              "type": "string"
            },
            "givenName": {
              "description": "The contact's given name (typically first name in US)",
              "example": "Joe",
              "type": "string"
            },
            "hasAccount": {
              "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
              "example": true,
              "type": "boolean"
            },
            "hasPendingInvite": {
              "description": "Whether the contact has a pending Spruce account invitation",
              "example": true,
              "type": "boolean"
            },
            "id": {
              "description": "Spruce's contact ID",
              "example": "entity_0E5QDGJC03000",
              "type": "string"
            },
            "integrationLinks": {
              "description": "Links between a contact and an integrated external system.",
              "items": {
                "properties": {
                  "contactId": {
                    "description": "Spruce's contact ID",
                    "example": "entity_0E5QDGJC03000",
                    "type": "string"
                  },
                  "externalId": {
                    "description": "The id of a contact in an external system.",
                    "example": "elation_140797386655555",
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "elation",
                      "hint",
                      "athena",
                      "custom"
                    ],
                    "example": "elation",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url of a contact in an integrated external system.",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "externalId",
                  "contactId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "internalMemberIds": {
              "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "middleName": {
              "description": "The contact's middle name",
              "example": "William",
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type",
              "type": "string"
            },
            "organizationContactFields": {
              "description": "Fields on a contact that are custom",
              "items": {
                "properties": {
                  "id": {
                    "description": "Spruce's contact organization contact custom field ID",
                    "example": "managedCustomField_0E5QDGJC03000",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name for the field",
                    "example": "Preferred Pharmacy",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field",
                    "example": "CVS",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "phoneNumbers": {
              "items": {
                "properties": {
                  "displayValue": {
                    "description": "The contact phone number in an easily readable format.",
                    "example": "(222) 555-0000",
                    "type": "string"
                  },
                  "id": {
                    "description": "Spruce's phone number ID",
                    "example": "entityContact_26RRC7PQ6JG00",
                    "format": "string",
                    "type": "string"
                  },
                  "label": {
                    "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                    "example": "Work",
                    "type": "string"
                  },
                  "value": {
                    "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                    "example": 12225550000,
                    "format": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "value",
                  "displayValue"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "pronouns": {
              "description": "The contact's pronouns",
              "example": "he/him",
              "type": "string"
            },
            "tags": {
              "items": {
                "properties": {
                  "id": {
                    "description": "Spruce's contact tag ID",
                    "example": "tag_0E5QDGJC03000",
                    "type": "string"
                  },
                  "object": {
                    "description": "String representing the object's type",
                    "type": "string"
                  },
                  "value": {
                    "description": "The text value of a contact tag",
                    "example": "Smith",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "value",
                  "object"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "id",
            "displayName",
            "tags",
            "gender",
            "category",
            "created",
            "phoneNumbers",
            "emailAddresses",
            "customFields",
            "appURL",
            "apiURL",
            "hasAccount",
            "hasPendingInvite",
            "customContactFields",
            "organizationContactFields",
            "canDelete",
            "canEdit",
            "integrationLinks",
            "object",
            "internalMemberIds"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_category": {
        "enum": [
          "patient",
          "professional",
          "clinic",
          "unknown"
        ],
        "example": "patient",
        "type": "string"
      },
      "contact_categoryInput": {
        "enum": [
          "patient",
          "professional"
        ],
        "example": "patient",
        "type": "string"
      },
      "contact_companyName": {
        "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
        "example": "Walgreens",
        "type": "string"
      },
      "contact_createContactIntegrationLink": {
        "properties": {
          "externalId": {
            "description": "The id of the contact in the external integrated system.",
            "example": "elation_140797386655555",
            "type": "string"
          },
          "type": {
            "enum": [
              "elation",
              "hint",
              "athena",
              "custom"
            ],
            "example": "elation",
            "type": "string",
            "description": "The integration type of the integration link."
          },
          "url": {
            "description": "The URL to the contact in the external system (only for custom integration links).",
            "example": "https://example.com/contacts/123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "contact_customContactField": {
        "properties": {
          "id": {
            "description": "Spruce's contact contact custom field ID",
            "example": "entityCustomField_0E5QDGJC03000",
            "type": "string"
          },
          "name": {
            "description": "A name for the field",
            "example": "Preferred Pharmacy",
            "type": "string"
          },
          "value": {
            "description": "The value of the field",
            "example": "CVS",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "value"
        ],
        "type": "object"
      },
      "contact_customContactFieldId": {
        "description": "Spruce's contact contact custom field ID",
        "example": "entityCustomField_0E5QDGJC03000",
        "type": "string"
      },
      "contact_customContactFields": {
        "description": "Fields on a contact that are custom",
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's contact contact custom field ID",
              "example": "entityCustomField_0E5QDGJC03000",
              "type": "string"
            },
            "name": {
              "description": "A name for the field",
              "example": "Preferred Pharmacy",
              "type": "string"
            },
            "value": {
              "description": "The value of the field",
              "example": "CVS",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_customFieldName": {
        "description": "A name for the field",
        "example": "Preferred Pharmacy",
        "type": "string"
      },
      "contact_customFieldNameContent": {
        "properties": {
          "name": {
            "description": "A name for the field",
            "example": "Preferred Pharmacy",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "contact_customFieldValue": {
        "description": "The value of the field",
        "example": "CVS",
        "type": "string"
      },
      "contact_dateOfBirth": {
        "description": "The contact's date of birth in the format YYYY-MM-DD.",
        "example": "2000-01-30",
        "format": "date",
        "type": "string"
      },
      "contact_deleteContactIntegrationLink": {
        "properties": {
          "externalId": {
            "description": "The id of the contact in the external integrated system.",
            "example": "elation_140797386655555",
            "type": "string"
          },
          "type": {
            "enum": [
              "elation",
              "hint",
              "athena",
              "custom"
            ],
            "example": "elation",
            "type": "string",
            "description": "The identifier of the integration type the existing integration link is for."
          }
        },
        "type": "object"
      },
      "contact_displayName": {
        "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
        "example": "Joe William Smith",
        "type": "string"
      },
      "contact_emailAddressInputs": {
        "items": {
          "properties": {
            "label": {
              "description": "A label for the email address such as 'Work', 'Home', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "example": "contact@example.com",
              "format": "email",
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_emailAddresses": {
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's phone number ID",
              "example": "entityContact_26RRC7PQ6JG00",
              "format": "string",
              "type": "string"
            },
            "label": {
              "description": "A label for the email address such as 'Work', 'Home', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "example": "contact@example.com",
              "format": "email",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_externalId": {
        "description": "The id of a contact in an external system.",
        "example": "elation_140797386655555",
        "type": "string"
      },
      "contact_familyName": {
        "description": "The contact's family name (typically last name in US)",
        "example": "Smith",
        "type": "string"
      },
      "contact_faxNumberInputs": {
        "items": {
          "properties": {
            "label": {
              "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_faxNumbers": {
        "items": {
          "properties": {
            "displayValue": {
              "description": "The contact phone number in an easily readable format.",
              "example": "(222) 555-0000",
              "type": "string"
            },
            "id": {
              "description": "Spruce's phone number ID",
              "example": "entityContact_26RRC7PQ6JG00",
              "format": "string",
              "type": "string"
            },
            "label": {
              "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value",
            "displayValue"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_gender": {
        "enum": [
          "unknown",
          "male",
          "female",
          "other"
        ],
        "example": "unknown",
        "type": "string"
      },
      "contact_genderDetail": {
        "description": "Optional free-text details for gender",
        "example": "Non-binary",
        "type": "string"
      },
      "contact_givenName": {
        "description": "The contact's given name (typically first name in US)",
        "example": "Joe",
        "type": "string"
      },
      "contact_id": {
        "description": "Spruce's contact ID",
        "example": "entity_0E5QDGJC03000",
        "type": "string"
      },
      "contact_integrationLink": {
        "properties": {
          "contactId": {
            "description": "Spruce's contact ID",
            "example": "entity_0E5QDGJC03000",
            "type": "string"
          },
          "externalId": {
            "description": "The id of a contact in an external system.",
            "example": "elation_140797386655555",
            "type": "string"
          },
          "type": {
            "enum": [
              "elation",
              "hint",
              "athena",
              "custom"
            ],
            "example": "elation",
            "type": "string"
          },
          "url": {
            "description": "The url of a contact in an integrated external system.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "externalId",
          "contactId"
        ],
        "type": "object"
      },
      "contact_integrationLinkType": {
        "enum": [
          "elation",
          "hint",
          "athena",
          "custom"
        ],
        "example": "elation",
        "type": "string"
      },
      "contact_integrationLinks": {
        "description": "Links between a contact and an integrated external system.",
        "items": {
          "properties": {
            "contactId": {
              "description": "Spruce's contact ID",
              "example": "entity_0E5QDGJC03000",
              "type": "string"
            },
            "externalId": {
              "description": "The id of a contact in an external system.",
              "example": "elation_140797386655555",
              "type": "string"
            },
            "type": {
              "enum": [
                "elation",
                "hint",
                "athena",
                "custom"
              ],
              "example": "elation",
              "type": "string"
            },
            "url": {
              "description": "The url of a contact in an integrated external system.",
              "type": "string"
            }
          },
          "required": [
            "type",
            "externalId",
            "contactId"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_internalMemberIds": {
        "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "contact_middleName": {
        "description": "The contact's middle name",
        "example": "William",
        "type": "string"
      },
      "contact_organizationContactField": {
        "properties": {
          "id": {
            "description": "Spruce's contact organization contact custom field ID",
            "example": "managedCustomField_0E5QDGJC03000",
            "type": "string"
          },
          "name": {
            "description": "A name for the field",
            "example": "Preferred Pharmacy",
            "type": "string"
          },
          "value": {
            "description": "The value of the field",
            "example": "CVS",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "value"
        ],
        "type": "object"
      },
      "contact_organizationContactFieldId": {
        "description": "Spruce's contact organization contact custom field ID",
        "example": "managedCustomField_0E5QDGJC03000",
        "type": "string"
      },
      "contact_organizationContactFieldInput": {
        "properties": {
          "id": {
            "description": "Spruce's contact organization contact custom field ID",
            "example": "managedCustomField_0E5QDGJC03000",
            "type": "string"
          },
          "value": {
            "description": "The value of the field",
            "example": "CVS",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value"
        ],
        "type": "object"
      },
      "contact_organizationContactFieldInputs": {
        "description": "Fields on a contact that are custom to your organization",
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's contact organization contact custom field ID",
              "example": "managedCustomField_0E5QDGJC03000",
              "type": "string"
            },
            "value": {
              "description": "The value of the field",
              "example": "CVS",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_organizationContactFieldName": {
        "properties": {
          "id": {
            "description": "Spruce's contact organization contact custom field ID",
            "example": "managedCustomField_0E5QDGJC03000",
            "type": "string"
          },
          "name": {
            "description": "A name for the field",
            "example": "Preferred Pharmacy",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "type": "object"
      },
      "contact_organizationContactFieldNames": {
        "description": "Field names declared by the organization that can be applied to a contact",
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's contact organization contact custom field ID",
              "example": "managedCustomField_0E5QDGJC03000",
              "type": "string"
            },
            "name": {
              "description": "A name for the field",
              "example": "Preferred Pharmacy",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_organizationContactFields": {
        "description": "Fields on a contact that are custom",
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's contact organization contact custom field ID",
              "example": "managedCustomField_0E5QDGJC03000",
              "type": "string"
            },
            "name": {
              "description": "A name for the field",
              "example": "Preferred Pharmacy",
              "type": "string"
            },
            "value": {
              "description": "The value of the field",
              "example": "CVS",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_phoneNumberInputs": {
        "items": {
          "properties": {
            "label": {
              "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_phoneNumbers": {
        "items": {
          "properties": {
            "displayValue": {
              "description": "The contact phone number in an easily readable format.",
              "example": "(222) 555-0000",
              "type": "string"
            },
            "id": {
              "description": "Spruce's phone number ID",
              "example": "entityContact_26RRC7PQ6JG00",
              "format": "string",
              "type": "string"
            },
            "label": {
              "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
              "example": "Work",
              "type": "string"
            },
            "value": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value",
            "displayValue"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_pronouns": {
        "description": "The contact's pronouns",
        "example": "he/him",
        "type": "string"
      },
      "contact_searchAgeFilter": {
        "properties": {
          "ages": {
            "items": {
              "properties": {
                "age": {
                  "format": "int32",
                  "type": "integer"
                },
                "comparison": {
                  "enum": [
                    "equal",
                    "less_than",
                    "less_than_or_equal_to",
                    "greater_than",
                    "greater_than_or_equal_to"
                  ],
                  "example": "equal",
                  "type": "string"
                }
              },
              "required": [
                "age",
                "comparison"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "ages",
          "match"
        ],
        "type": "object"
      },
      "contact_searchAgeFilters": {
        "items": {
          "properties": {
            "ages": {
              "items": {
                "properties": {
                  "age": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "comparison": {
                    "enum": [
                      "equal",
                      "less_than",
                      "less_than_or_equal_to",
                      "greater_than",
                      "greater_than_or_equal_to"
                    ],
                    "example": "equal",
                    "type": "string"
                  }
                },
                "required": [
                  "age",
                  "comparison"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "ages",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchCategoryFilter": {
        "properties": {
          "categories": {
            "items": {
              "enum": [
                "patient",
                "professional",
                "clinic",
                "unknown"
              ],
              "example": "patient",
              "type": "string"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "categories",
          "match"
        ],
        "type": "object"
      },
      "contact_searchCategoryFilters": {
        "items": {
          "properties": {
            "categories": {
              "items": {
                "enum": [
                  "patient",
                  "professional",
                  "clinic",
                  "unknown"
                ],
                "example": "patient",
                "type": "string"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "categories",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchCreatedTimeFilter": {
        "properties": {
          "createdTimes": {
            "items": {
              "properties": {
                "comparison": {
                  "enum": [
                    "equal",
                    "less_than",
                    "less_than_or_equal_to",
                    "greater_than",
                    "greater_than_or_equal_to"
                  ],
                  "example": "equal",
                  "type": "string"
                },
                "time": {
                  "description": "The date this contact was added to Spruce",
                  "example": "2021-01-30T08:30:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "time",
                "comparison"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "createdTimes",
          "match"
        ],
        "type": "object"
      },
      "contact_searchCreatedTimeFilters": {
        "items": {
          "properties": {
            "createdTimes": {
              "items": {
                "properties": {
                  "comparison": {
                    "enum": [
                      "equal",
                      "less_than",
                      "less_than_or_equal_to",
                      "greater_than",
                      "greater_than_or_equal_to"
                    ],
                    "example": "equal",
                    "type": "string"
                  },
                  "time": {
                    "description": "The date this contact was added to Spruce",
                    "example": "2021-01-30T08:30:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "time",
                  "comparison"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "createdTimes",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchEmailAddressFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "values": {
            "items": {
              "example": "contact@example.com",
              "format": "email",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "values",
          "match"
        ],
        "type": "object"
      },
      "contact_searchEmailAddressFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "values": {
              "items": {
                "example": "contact@example.com",
                "format": "email",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "values",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchFaxNumberFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "values": {
            "items": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "values",
          "match"
        ],
        "type": "object"
      },
      "contact_searchFaxNumberFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "values": {
              "items": {
                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                "example": 12225550000,
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "values",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchGenderFilter": {
        "properties": {
          "genders": {
            "items": {
              "enum": [
                "unknown",
                "male",
                "female",
                "other"
              ],
              "example": "unknown",
              "type": "string"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "genders",
          "match"
        ],
        "type": "object"
      },
      "contact_searchGenderFilters": {
        "items": {
          "properties": {
            "genders": {
              "items": {
                "enum": [
                  "unknown",
                  "male",
                  "female",
                  "other"
                ],
                "example": "unknown",
                "type": "string"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "genders",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchIntegrationIDFilter": {
        "properties": {
          "integrationIDs": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "integrationLinkType": {
                  "enum": [
                    "elation",
                    "hint",
                    "athena",
                    "custom"
                  ],
                  "example": "elation",
                  "type": "string"
                }
              },
              "required": [
                "integrationLinkType",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "integrationIDs",
          "match"
        ],
        "type": "object"
      },
      "contact_searchIntegrationIDFilters": {
        "items": {
          "properties": {
            "integrationIDs": {
              "items": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "integrationLinkType": {
                    "enum": [
                      "elation",
                      "hint",
                      "athena",
                      "custom"
                    ],
                    "example": "elation",
                    "type": "string"
                  }
                },
                "required": [
                  "integrationLinkType",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "integrationIDs",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchInviteFilter": {
        "properties": {
          "inviteStates": {
            "items": {
              "enum": [
                "has_account",
                "invited",
                "not_invited"
              ],
              "example": "has_account",
              "type": "string"
            },
            "type": "array"
          },
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          }
        },
        "required": [
          "inviteStates",
          "match"
        ],
        "type": "object"
      },
      "contact_searchInviteFilters": {
        "items": {
          "properties": {
            "inviteStates": {
              "items": {
                "enum": [
                  "has_account",
                  "invited",
                  "not_invited"
                ],
                "example": "has_account",
                "type": "string"
              },
              "type": "array"
            },
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            }
          },
          "required": [
            "inviteStates",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchInviteStateFilter": {
        "enum": [
          "has_account",
          "invited",
          "not_invited"
        ],
        "example": "has_account",
        "type": "string"
      },
      "contact_searchNameFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "names": {
            "items": {
              "properties": {
                "familyName": {
                  "type": "string"
                },
                "givenName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "names",
          "match"
        ],
        "type": "object"
      },
      "contact_searchNameFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "names": {
              "items": {
                "properties": {
                  "familyName": {
                    "type": "string"
                  },
                  "givenName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "names",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchOrganizationContactFieldFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "organizationContactFields": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "organizationContactFields",
          "match"
        ],
        "type": "object"
      },
      "contact_searchOrganizationContactFieldFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "organizationContactFields": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "organizationContactFields",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchPhoneNumberFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "values": {
            "items": {
              "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
              "example": 12225550000,
              "format": "string",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "values",
          "match"
        ],
        "type": "object"
      },
      "contact_searchPhoneNumberFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "values": {
              "items": {
                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                "example": 12225550000,
                "format": "string",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "values",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_searchStructuredFilter": {
        "properties": {
          "ageFilter": {
            "items": {
              "properties": {
                "ages": {
                  "items": {
                    "properties": {
                      "age": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "comparison": {
                        "enum": [
                          "equal",
                          "less_than",
                          "less_than_or_equal_to",
                          "greater_than",
                          "greater_than_or_equal_to"
                        ],
                        "example": "equal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "age",
                      "comparison"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "ages",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "categoryFilter": {
            "items": {
              "properties": {
                "categories": {
                  "items": {
                    "enum": [
                      "patient",
                      "professional",
                      "clinic",
                      "unknown"
                    ],
                    "example": "patient",
                    "type": "string"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "categories",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "createdTimeFilter": {
            "items": {
              "properties": {
                "createdTimes": {
                  "items": {
                    "properties": {
                      "comparison": {
                        "enum": [
                          "equal",
                          "less_than",
                          "less_than_or_equal_to",
                          "greater_than",
                          "greater_than_or_equal_to"
                        ],
                        "example": "equal",
                        "type": "string"
                      },
                      "time": {
                        "description": "The date this contact was added to Spruce",
                        "example": "2021-01-30T08:30:00Z",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "time",
                      "comparison"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "createdTimes",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "emailAddressFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "values": {
                  "items": {
                    "example": "contact@example.com",
                    "format": "email",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "values",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "faxNumberFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "values": {
                  "items": {
                    "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                    "example": 12225550000,
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "values",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "genderFilter": {
            "items": {
              "properties": {
                "genders": {
                  "items": {
                    "enum": [
                      "unknown",
                      "male",
                      "female",
                      "other"
                    ],
                    "example": "unknown",
                    "type": "string"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "genders",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "integrationIDFilter": {
            "items": {
              "properties": {
                "integrationIDs": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "integrationLinkType": {
                        "enum": [
                          "elation",
                          "hint",
                          "athena",
                          "custom"
                        ],
                        "example": "elation",
                        "type": "string"
                      }
                    },
                    "required": [
                      "integrationLinkType",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "integrationIDs",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "inviteFilter": {
            "items": {
              "properties": {
                "inviteStates": {
                  "items": {
                    "enum": [
                      "has_account",
                      "invited",
                      "not_invited"
                    ],
                    "example": "has_account",
                    "type": "string"
                  },
                  "type": "array"
                },
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                }
              },
              "required": [
                "inviteStates",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nameFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "names": {
                  "items": {
                    "properties": {
                      "familyName": {
                        "type": "string"
                      },
                      "givenName": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "names",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "organizationContactFieldFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "organizationContactFields": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "organizationContactFields",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "phoneNumberFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "values": {
                  "items": {
                    "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                    "example": 12225550000,
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "values",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "tagFilter": {
            "items": {
              "properties": {
                "match": {
                  "enum": [
                    "all",
                    "any",
                    "none"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "tags",
                "match"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "contact_searchTagFilter": {
        "properties": {
          "match": {
            "enum": [
              "all",
              "any",
              "none"
            ],
            "example": "all",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "tags",
          "match"
        ],
        "type": "object"
      },
      "contact_searchTagFilters": {
        "items": {
          "properties": {
            "match": {
              "enum": [
                "all",
                "any",
                "none"
              ],
              "example": "all",
              "type": "string"
            },
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "tags",
            "match"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contact_tag": {
        "properties": {
          "id": {
            "description": "Spruce's contact tag ID",
            "example": "tag_0E5QDGJC03000",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "value": {
            "description": "The text value of a contact tag",
            "example": "Smith",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "object"
        ],
        "type": "object"
      },
      "contact_tagId": {
        "description": "Spruce's contact tag ID",
        "example": "tag_0E5QDGJC03000",
        "type": "string"
      },
      "contact_tagIds": {
        "description": "An array of Spruce contact tag ids",
        "items": {
          "description": "Spruce's contact tag ID",
          "example": "tag_0E5QDGJC03000",
          "type": "string"
        },
        "type": "array"
      },
      "contact_tagValue": {
        "description": "The text value of a contact tag",
        "example": "Smith",
        "type": "string"
      },
      "contact_tagValueContent": {
        "properties": {
          "value": {
            "description": "The text value of a contact tag",
            "example": "Smith",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "contact_tags": {
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's contact tag ID",
              "example": "tag_0E5QDGJC03000",
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type",
              "type": "string"
            },
            "value": {
              "description": "The text value of a contact tag",
              "example": "Smith",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value",
            "object"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "contactSearch": {
        "properties": {
          "freeText": {
            "type": "string"
          },
          "structured": {
            "properties": {
              "ageFilter": {
                "items": {
                  "properties": {
                    "ages": {
                      "items": {
                        "properties": {
                          "age": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "comparison": {
                            "enum": [
                              "equal",
                              "less_than",
                              "less_than_or_equal_to",
                              "greater_than",
                              "greater_than_or_equal_to"
                            ],
                            "example": "equal",
                            "type": "string"
                          }
                        },
                        "required": [
                          "age",
                          "comparison"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ages",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "categoryFilter": {
                "items": {
                  "properties": {
                    "categories": {
                      "items": {
                        "enum": [
                          "patient",
                          "professional",
                          "clinic",
                          "unknown"
                        ],
                        "example": "patient",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "categories",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "createdTimeFilter": {
                "items": {
                  "properties": {
                    "createdTimes": {
                      "items": {
                        "properties": {
                          "comparison": {
                            "enum": [
                              "equal",
                              "less_than",
                              "less_than_or_equal_to",
                              "greater_than",
                              "greater_than_or_equal_to"
                            ],
                            "example": "equal",
                            "type": "string"
                          },
                          "time": {
                            "description": "The date this contact was added to Spruce",
                            "example": "2021-01-30T08:30:00Z",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "time",
                          "comparison"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "createdTimes",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "emailAddressFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "example": "contact@example.com",
                        "format": "email",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "values",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "faxNumberFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                        "example": 12225550000,
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "values",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "genderFilter": {
                "items": {
                  "properties": {
                    "genders": {
                      "items": {
                        "enum": [
                          "unknown",
                          "male",
                          "female",
                          "other"
                        ],
                        "example": "unknown",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "genders",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "integrationIDFilter": {
                "items": {
                  "properties": {
                    "integrationIDs": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "integrationLinkType": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          }
                        },
                        "required": [
                          "integrationLinkType",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "integrationIDs",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "inviteFilter": {
                "items": {
                  "properties": {
                    "inviteStates": {
                      "items": {
                        "enum": [
                          "has_account",
                          "invited",
                          "not_invited"
                        ],
                        "example": "has_account",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    }
                  },
                  "required": [
                    "inviteStates",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "nameFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "names": {
                      "items": {
                        "properties": {
                          "familyName": {
                            "type": "string"
                          },
                          "givenName": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "names",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "organizationContactFieldFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "organizationContactFields": {
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "organizationContactFields",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "phoneNumberFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                        "example": 12225550000,
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "values",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "tagFilter": {
                "items": {
                  "properties": {
                    "match": {
                      "enum": [
                        "all",
                        "any",
                        "none"
                      ],
                      "example": "all",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "tags",
                    "match"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "conversation": {
        "properties": {
          "apiURL": {
            "description": "An absolute URL for fetching this conversation from the API",
            "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
            "format": "url",
            "type": "string"
          },
          "appURL": {
            "description": "An absolute URL to view the conversation in the Spruce app",
            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
            "format": "url",
            "type": "string"
          },
          "archived": {
            "description": "Whether or not the conversation is archived",
            "example": false,
            "type": "boolean"
          },
          "assignedToMemberId": {
            "description": "The id of the teammate the conversation is assigned to",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "associatedContactIds": {
            "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
            "example": [
              "entity_0D4QABCC06000"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "The date the conversation was created",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "externalParticipants": {
            "description": "The external participants in the conversation.",
            "items": {
              "properties": {
                "contact": {
                  "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                  "example": "entity_0D4QABCC06000",
                  "type": "string"
                },
                "displayName": {
                  "description": "The display name of the participant",
                  "example": [
                    "555-555-5555",
                    "John Doe",
                    "patient@example.com"
                  ],
                  "type": "string"
                },
                "endpoint": {
                  "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                  "properties": {
                    "channel": {
                      "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                      "enum": [
                        "email",
                        "phone",
                        "fax",
                        "secure"
                      ],
                      "type": "string"
                    },
                    "displayValue": {
                      "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                      "example": {
                        "email": {
                          "value": "patient@example.com"
                        },
                        "phone": {
                          "value": "(555) 555-5555"
                        },
                        "secure": {
                          "value": "spruce.care/123456"
                        }
                      },
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the endpoint",
                      "example": 15555555555,
                      "type": "string"
                    },
                    "isInternal": {
                      "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                      "example": false,
                      "type": "boolean"
                    },
                    "label": {
                      "description": "The optional label of the endpoint",
                      "example": [
                        "Home",
                        "Work"
                      ],
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "rawValue": {
                      "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                      "example": {
                        "email": {
                          "value": "patient@example.com"
                        },
                        "phone": {
                          "value": 15555555555
                        },
                        "secure": {
                          "value": "https://spruce.care/123456"
                        }
                      },
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "channel",
                    "displayValue",
                    "rawValue",
                    "isInternal",
                    "object"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "displayName"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "Spruce's conversation ID",
            "example": "t_0E5QDGJC03000",
            "type": "string"
          },
          "internalEndpoint": {
            "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
            "properties": {
              "channel": {
                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                "enum": [
                  "email",
                  "phone",
                  "fax",
                  "secure"
                ],
                "type": "string"
              },
              "displayValue": {
                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                "example": {
                  "email": {
                    "value": "patient@example.com"
                  },
                  "phone": {
                    "value": "(555) 555-5555"
                  },
                  "secure": {
                    "value": "spruce.care/123456"
                  }
                },
                "type": "string"
              },
              "id": {
                "description": "The id of the endpoint",
                "example": 15555555555,
                "type": "string"
              },
              "isInternal": {
                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                "example": false,
                "type": "boolean"
              },
              "label": {
                "description": "The optional label of the endpoint",
                "example": [
                  "Home",
                  "Work"
                ],
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type",
                "type": "string"
              },
              "rawValue": {
                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                "example": {
                  "email": {
                    "value": "patient@example.com"
                  },
                  "phone": {
                    "value": 15555555555
                  },
                  "secure": {
                    "value": "https://spruce.care/123456"
                  }
                },
                "type": "string"
              }
            },
            "required": [
              "id",
              "channel",
              "displayValue",
              "rawValue",
              "isInternal",
              "object"
            ],
            "type": "object"
          },
          "internalMemberIds": {
            "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
            "example": [
              "entity_0D4QABCC06000"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isReadOnly": {
            "description": "If the conversation is read-only, messages cannot be sent to it.",
            "example": false,
            "type": "boolean"
          },
          "lastMessageAt": {
            "description": "The time of the conversations latest message",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "subtitle": {
            "description": "The subtitle of the conversation",
            "example": "Billing",
            "type": "string"
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's conversation tag ID",
                  "example": "tag_0E5QDGJC03000",
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type",
                  "type": "string"
                },
                "value": {
                  "description": "The text value of a conversation tag",
                  "example": "Smith",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value",
                "object"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "title": {
            "description": "The title of the conversation",
            "example": "John Doe",
            "type": "string"
          },
          "type": {
            "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
            "enum": [
              "email",
              "phone",
              "secure",
              "fax",
              "team",
              "note",
              "other"
            ],
            "type": "string"
          }
        },
        "required": [
          "appURL",
          "apiURL",
          "archived",
          "createdAt",
          "id",
          "isReadOnly",
          "tags",
          "type",
          "title",
          "object"
        ],
        "type": "object"
      },
      "conversation_id": {
        "description": "Spruce's conversation ID",
        "example": "t_0E5QDGJC03000",
        "type": "string"
      },
      "conversation_messageBodyElement": {
        "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
        "properties": {
          "type": {
            "enum": [
              "text",
              "page"
            ],
            "example": "text",
            "type": "string"
          },
          "value": {
            "description": "The value of the message body element",
            "example": "Hello, how are you?",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      },
      "conversation_messagePost": {
        "properties": {
          "attachments": {
            "items": {
              "properties": {
                "attachmentId": {
                  "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                  "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                  "type": "string"
                },
                "title": {
                  "description": "The title of the attachment",
                  "example": "My Image",
                  "type": "string"
                }
              },
              "required": [
                "attachmentId",
                "title"
              ],
              "type": "object"
            },
            "maxItems": 5,
            "type": "array"
          },
          "author": {
            "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "body": {
            "items": {
              "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
              "properties": {
                "type": {
                  "enum": [
                    "text",
                    "page"
                  ],
                  "example": "text",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the message body element",
                  "example": "Hello, how are you?",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "internal": {
            "description": "Whether the message is internal or not",
            "example": false,
            "type": "boolean"
          },
          "stayArchived": {
            "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "body"
        ],
        "type": "object"
      },
      "conversation_messagePost_attachment": {
        "properties": {
          "attachmentId": {
            "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
            "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
            "type": "string"
          },
          "title": {
            "description": "The title of the attachment",
            "example": "My Image",
            "type": "string"
          }
        },
        "required": [
          "attachmentId",
          "title"
        ],
        "type": "object"
      },
      "conversation_messagePost_secureConversationSelection": {
        "description": " `any_available_secure_conversation`: The system will first try to deliver messages using conversations from the specified internal endpoint. Then it will try to deliver to any existing secure conversation with the recipient. Then, if no conversation exists, a new secure conversation will be created.\n`only_conversations_matching_internal_endpoint`: The system will deliver messages in conversations from the specified internal endpoint. If such a conversation doesn't yet exist, a new one will be created.\n`new_conversation`: This option will create a new conversation, separate from any existing conversation. ",
        "enum": [
          "any_available_secure_conversation",
          "only_conversations_matching_internal_endpoint",
          "new_conversation"
        ],
        "example": "only_conversations_matching_internal_endpoint",
        "type": "string"
      },
      "conversation_tag": {
        "properties": {
          "id": {
            "description": "Spruce's conversation tag ID",
            "example": "tag_0E5QDGJC03000",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "value": {
            "description": "The text value of a conversation tag",
            "example": "Smith",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "object"
        ],
        "type": "object"
      },
      "conversation_tagId": {
        "description": "Spruce's conversation tag ID",
        "example": "tag_0E5QDGJC03000",
        "type": "string"
      },
      "conversation_tagIds": {
        "description": "An array of Spruce conversation tag ids",
        "items": {
          "description": "Spruce's conversation tag ID",
          "example": "tag_0E5QDGJC03000",
          "type": "string"
        },
        "type": "array"
      },
      "conversation_tagValue": {
        "description": "The text value of a conversation tag",
        "example": "Smith",
        "type": "string"
      },
      "conversation_tagValueContent": {
        "properties": {
          "value": {
            "description": "The text value of a conversation tag",
            "example": "Smith",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "conversation_tags": {
        "items": {
          "properties": {
            "id": {
              "description": "Spruce's conversation tag ID",
              "example": "tag_0E5QDGJC03000",
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type",
              "type": "string"
            },
            "value": {
              "description": "The text value of a conversation tag",
              "example": "Smith",
              "type": "string"
            }
          },
          "required": [
            "id",
            "value",
            "object"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "conversationItem": {
        "properties": {
          "apiURL": {
            "description": "An absolute URL for fetching this conversation item from the API",
            "example": "https://api.sprucehealth.com/conversationItems/ti_0E5QDJJC03000",
            "format": "url",
            "type": "string"
          },
          "appURL": {
            "description": "An absolute URL to view the conversation item in the Spruce app.",
            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000/message/ti_23170B3D36G00",
            "format": "url",
            "type": "string"
          },
          "attachments": {
            "description": "Attachments for the conversation item.",
            "items": {
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the audio attachment.",
                          "example": "audio/mpeg",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the audio attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the document attachment.",
                          "example": "application/pdf",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name associated with the attached document.",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the document attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "name",
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "title": {
                          "description": "The title associated with the attached entity profile.",
                          "example": "John Smith",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL of the entity profile.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "url"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the image attachment.",
                          "example": "image/png",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the image attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the video attachment.",
                          "example": "video/mp4",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the video attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    }
                  ]
                },
                "title": {
                  "description": "The title of the attachment.",
                  "example": "example.pdf",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the attachment.",
                  "enum": [
                    "audio",
                    "carePlan",
                    "document",
                    "entityProfile",
                    "genericUrl",
                    "image",
                    "paymentRequest",
                    "video",
                    "visit"
                  ]
                }
              },
              "required": [
                "title",
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "author": {
            "description": "The author of the conversation item.",
            "properties": {
              "deviceInformation": {
                "properties": {
                  "accessID": {
                    "description": "The access ID of API credentials used to make the request.",
                    "type": "string"
                  },
                  "appVersion": {
                    "description": "The version of the app.",
                    "type": "string"
                  },
                  "device": {
                    "description": "The type of the device.",
                    "type": "string"
                  },
                  "deviceId": {
                    "description": "The id of the device.",
                    "type": "string"
                  },
                  "deviceModel": {
                    "description": "The model of the device.",
                    "type": "string"
                  },
                  "platform": {
                    "description": "The platform of the device.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "displayName": {
                "type": "string"
              }
            },
            "required": [
              "displayName"
            ],
            "type": "object"
          },
          "buttons": {
            "description": "The buttons associated with the conversation item.",
            "items": {
              "properties": {
                "id": {
                  "description": "The id of the button.",
                  "type": "string"
                },
                "state": {
                  "description": "The state of the button.",
                  "enum": [
                    "disabled",
                    "normal",
                    "selected"
                  ],
                  "type": "string"
                },
                "text": {
                  "description": "The text of the button.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "text",
                "state"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "canDelete": {
            "description": "If the conversation item can be deleted.",
            "example": true,
            "type": "boolean"
          },
          "conversationId": {
            "description": "Spruce's conversation ID",
            "example": "t_0E5QDGJC03000",
            "type": "string"
          },
          "createdAt": {
            "description": "The date time the conversation item was created.",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "direction": {
            "description": "The direction of the item relative to this organization. Possible values are `inbound`, `outbound` and `none`. `inbound` indicates a message received by the organization, `outbound` indicates a message sent to an external contact by a teammate in the organization. `none` indicates a message that is likely internal to the organization or one for which the direction cannot be determined.",
            "enum": [
              "inbound",
              "outbound",
              "none"
            ]
          },
          "event": {
            "description": "Any event data associate with the conversation item.",
            "properties": {
              "data": {
                "anyOf": [
                  {
                    "properties": {
                      "answered": {
                        "description": "If the call was answered.",
                        "type": "boolean"
                      },
                      "answeredBy": {
                        "description": "If an inbound call was answered, which desk phone or external phone number answered it.",
                        "properties": {
                          "externalNumber": {
                            "description": "the telephone number external to Spruce this call was answered by",
                            "type": "string"
                          },
                          "lineId": {
                            "description": "the ID of the phone line on the Spruce system this call was answered by",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "duration": {
                        "description": "The duration of the call in seconds.",
                        "type": "integer"
                      },
                      "failed": {
                        "description": "If the call failed.",
                        "type": "boolean"
                      },
                      "initiatedBy": {
                        "description": "For outbound calls, which desk phone or teammate initiated it.",
                        "properties": {
                          "lineId": {
                            "description": "the ID of the phone line on the Spruce system this call was initiated by",
                            "type": "string"
                          },
                          "teammateID": {
                            "description": "The id of the teammate",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "recordings": {
                        "description": "The recordings of the call if any exist.",
                        "items": {
                          "properties": {
                            "mimetype": {
                              "description": "The mimetype of the audio attachment.",
                              "example": "audio/mpeg",
                              "type": "string"
                            },
                            "signedUrl": {
                              "description": "The URL used to fetch the audio attachment.",
                              "properties": {
                                "expiresAt": {
                                  "description": "The date the signed URL expires.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The signed URL.",
                                  "format": "url",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "expiresAt"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mimetype",
                            "signedUrl"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "spam": {
                        "description": "If the call was marked as spam.",
                        "type": "boolean"
                      },
                      "voicemail": {
                        "properties": {
                          "mimetype": {
                            "description": "The mimetype of the audio attachment.",
                            "example": "audio/mpeg",
                            "type": "string"
                          },
                          "signedUrl": {
                            "description": "The URL used to fetch the audio attachment.",
                            "properties": {
                              "expiresAt": {
                                "description": "The date the signed URL expires.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "url": {
                                "description": "The signed URL.",
                                "format": "url",
                                "type": "string"
                              }
                            },
                            "required": [
                              "url",
                              "expiresAt"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "mimetype",
                          "signedUrl"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "answered",
                      "duration",
                      "failed",
                      "inbound",
                      "spam"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "answered": {
                        "description": "If the call was answered.",
                        "type": "boolean"
                      },
                      "duration": {
                        "description": "The duration of the call in seconds.",
                        "type": "integer"
                      },
                      "initiatedBy": {
                        "description": "The Spruce is of the teammate that initiated it..",
                        "example": "entity_0E5QDGJC03000",
                        "type": "string"
                      }
                    },
                    "required": [
                      "answered",
                      "duration",
                      "initiatedBy"
                    ],
                    "type": "object"
                  }
                ]
              },
              "type": {
                "description": "The type of the event. Additional events will be added in the future, so any parsing of this field should gracefully handle unexpected values.",
                "enum": [
                  "inboundCall",
                  "inboundVideoCall",
                  "outboundCall",
                  "outboundVideoCall"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          "id": {
            "description": "The id of a conversation item.",
            "example": "ti_0D4QABCC06000",
            "type": "string"
          },
          "isInternalNote": {
            "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
            "example": false,
            "type": "boolean"
          },
          "modifiedAt": {
            "description": "The date time the conversation item was last modified.",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "pages": {
            "description": "The pages associated with the conversation item.",
            "items": {
              "properties": {
                "id": {
                  "description": "The id of the page.",
                  "type": "string"
                },
                "memberId": {
                  "description": "The id of the teammate being paged.",
                  "example": "entity_0D4QABCC06000",
                  "type": "string"
                },
                "resolved": {
                  "description": "If the page has been resolved.",
                  "type": "boolean"
                },
                "resolvedAt": {
                  "description": "The date time the page was resolved at.",
                  "example": "2020-04-01T00:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "resolvedByMemberId": {
                  "description": "The id of the teammate that resolved the page.",
                  "example": "entity_0D4QABCC06000",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "memberId",
                "resolved"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "requestId": {
            "description": "The id of an asynchronous request",
            "example": "asyncRequest_0D4QABCC06000",
            "type": "string"
          },
          "text": {
            "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
            "example": "Can you look at this @Dr. Smith?",
            "type": "string"
          }
        },
        "required": [
          "id",
          "conversationId",
          "attachments",
          "author",
          "direction",
          "isInternalNote",
          "appURL",
          "apiURL",
          "text",
          "pages",
          "buttons",
          "modifiedAt",
          "createdAt",
          "object",
          "requestId",
          "canDelete"
        ],
        "type": "object"
      },
      "conversationItem_Attachment": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "properties": {
                  "mimetype": {
                    "description": "The mimetype of the audio attachment.",
                    "example": "audio/mpeg",
                    "type": "string"
                  },
                  "signedUrl": {
                    "description": "The URL used to fetch the audio attachment.",
                    "properties": {
                      "expiresAt": {
                        "description": "The date the signed URL expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "description": "The signed URL.",
                        "format": "url",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "expiresAt"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mimetype",
                  "signedUrl"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "mimetype": {
                    "description": "The mimetype of the document attachment.",
                    "example": "application/pdf",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name associated with the attached document.",
                    "type": "string"
                  },
                  "signedUrl": {
                    "description": "The URL used to fetch the document attachment.",
                    "properties": {
                      "expiresAt": {
                        "description": "The date the signed URL expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "description": "The signed URL.",
                        "format": "url",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "expiresAt"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "mimetype",
                  "signedUrl"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "title": {
                    "description": "The title associated with the attached entity profile.",
                    "example": "John Smith",
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL of the entity profile.",
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "url"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "mimetype": {
                    "description": "The mimetype of the image attachment.",
                    "example": "image/png",
                    "type": "string"
                  },
                  "signedUrl": {
                    "description": "The URL used to fetch the image attachment.",
                    "properties": {
                      "expiresAt": {
                        "description": "The date the signed URL expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "description": "The signed URL.",
                        "format": "url",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "expiresAt"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mimetype",
                  "signedUrl"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "mimetype": {
                    "description": "The mimetype of the video attachment.",
                    "example": "video/mp4",
                    "type": "string"
                  },
                  "signedUrl": {
                    "description": "The URL used to fetch the video attachment.",
                    "properties": {
                      "expiresAt": {
                        "description": "The date the signed URL expires.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "description": "The signed URL.",
                        "format": "url",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "expiresAt"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mimetype",
                  "signedUrl"
                ],
                "type": "object"
              }
            ]
          },
          "title": {
            "description": "The title of the attachment.",
            "example": "example.pdf",
            "type": "string"
          },
          "type": {
            "description": "The type of the attachment.",
            "enum": [
              "audio",
              "carePlan",
              "document",
              "entityProfile",
              "genericUrl",
              "image",
              "paymentRequest",
              "video",
              "visit"
            ]
          }
        },
        "required": [
          "title",
          "type"
        ],
        "type": "object"
      },
      "conversationItem_AudioAttachment": {
        "properties": {
          "mimetype": {
            "description": "The mimetype of the audio attachment.",
            "example": "audio/mpeg",
            "type": "string"
          },
          "signedUrl": {
            "description": "The URL used to fetch the audio attachment.",
            "properties": {
              "expiresAt": {
                "description": "The date the signed URL expires.",
                "format": "date-time",
                "type": "string"
              },
              "url": {
                "description": "The signed URL.",
                "format": "url",
                "type": "string"
              }
            },
            "required": [
              "url",
              "expiresAt"
            ],
            "type": "object"
          }
        },
        "required": [
          "mimetype",
          "signedUrl"
        ],
        "type": "object"
      },
      "conversationItem_Author": {
        "properties": {
          "deviceInformation": {
            "properties": {
              "accessID": {
                "description": "The access ID of API credentials used to make the request.",
                "type": "string"
              },
              "appVersion": {
                "description": "The version of the app.",
                "type": "string"
              },
              "device": {
                "description": "The type of the device.",
                "type": "string"
              },
              "deviceId": {
                "description": "The id of the device.",
                "type": "string"
              },
              "deviceModel": {
                "description": "The model of the device.",
                "type": "string"
              },
              "platform": {
                "description": "The platform of the device.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "displayName"
        ],
        "type": "object"
      },
      "conversationItem_Button": {
        "properties": {
          "id": {
            "description": "The id of the button.",
            "type": "string"
          },
          "state": {
            "description": "The state of the button.",
            "enum": [
              "disabled",
              "normal",
              "selected"
            ],
            "type": "string"
          },
          "text": {
            "description": "The text of the button.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "text",
          "state"
        ],
        "type": "object"
      },
      "conversationItem_DocumentAttachment": {
        "properties": {
          "mimetype": {
            "description": "The mimetype of the document attachment.",
            "example": "application/pdf",
            "type": "string"
          },
          "name": {
            "description": "The name associated with the attached document.",
            "type": "string"
          },
          "signedUrl": {
            "description": "The URL used to fetch the document attachment.",
            "properties": {
              "expiresAt": {
                "description": "The date the signed URL expires.",
                "format": "date-time",
                "type": "string"
              },
              "url": {
                "description": "The signed URL.",
                "format": "url",
                "type": "string"
              }
            },
            "required": [
              "url",
              "expiresAt"
            ],
            "type": "object"
          }
        },
        "required": [
          "name",
          "mimetype",
          "signedUrl"
        ],
        "type": "object"
      },
      "conversationItem_EntityProfileAttachment": {
        "properties": {
          "title": {
            "description": "The title associated with the attached entity profile.",
            "example": "John Smith",
            "type": "string"
          },
          "url": {
            "description": "The URL of the entity profile.",
            "type": "string"
          }
        },
        "required": [
          "title",
          "url"
        ],
        "type": "object"
      },
      "conversationItem_Event": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "properties": {
                  "answered": {
                    "description": "If the call was answered.",
                    "type": "boolean"
                  },
                  "answeredBy": {
                    "description": "If an inbound call was answered, which desk phone or external phone number answered it.",
                    "properties": {
                      "externalNumber": {
                        "description": "the telephone number external to Spruce this call was answered by",
                        "type": "string"
                      },
                      "lineId": {
                        "description": "the ID of the phone line on the Spruce system this call was answered by",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "duration": {
                    "description": "The duration of the call in seconds.",
                    "type": "integer"
                  },
                  "failed": {
                    "description": "If the call failed.",
                    "type": "boolean"
                  },
                  "initiatedBy": {
                    "description": "For outbound calls, which desk phone or teammate initiated it.",
                    "properties": {
                      "lineId": {
                        "description": "the ID of the phone line on the Spruce system this call was initiated by",
                        "type": "string"
                      },
                      "teammateID": {
                        "description": "The id of the teammate",
                        "example": "entity_0E5QDGJC03000",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "recordings": {
                    "description": "The recordings of the call if any exist.",
                    "items": {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the audio attachment.",
                          "example": "audio/mpeg",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the audio attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "spam": {
                    "description": "If the call was marked as spam.",
                    "type": "boolean"
                  },
                  "voicemail": {
                    "properties": {
                      "mimetype": {
                        "description": "The mimetype of the audio attachment.",
                        "example": "audio/mpeg",
                        "type": "string"
                      },
                      "signedUrl": {
                        "description": "The URL used to fetch the audio attachment.",
                        "properties": {
                          "expiresAt": {
                            "description": "The date the signed URL expires.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "description": "The signed URL.",
                            "format": "url",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url",
                          "expiresAt"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "mimetype",
                      "signedUrl"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "answered",
                  "duration",
                  "failed",
                  "inbound",
                  "spam"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "answered": {
                    "description": "If the call was answered.",
                    "type": "boolean"
                  },
                  "duration": {
                    "description": "The duration of the call in seconds.",
                    "type": "integer"
                  },
                  "initiatedBy": {
                    "description": "The Spruce is of the teammate that initiated it..",
                    "example": "entity_0E5QDGJC03000",
                    "type": "string"
                  }
                },
                "required": [
                  "answered",
                  "duration",
                  "initiatedBy"
                ],
                "type": "object"
              }
            ]
          },
          "type": {
            "description": "The type of the event. Additional events will be added in the future, so any parsing of this field should gracefully handle unexpected values.",
            "enum": [
              "inboundCall",
              "inboundVideoCall",
              "outboundCall",
              "outboundVideoCall"
            ]
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "conversationItem_ImageAttachment": {
        "properties": {
          "mimetype": {
            "description": "The mimetype of the image attachment.",
            "example": "image/png",
            "type": "string"
          },
          "signedUrl": {
            "description": "The URL used to fetch the image attachment.",
            "properties": {
              "expiresAt": {
                "description": "The date the signed URL expires.",
                "format": "date-time",
                "type": "string"
              },
              "url": {
                "description": "The signed URL.",
                "format": "url",
                "type": "string"
              }
            },
            "required": [
              "url",
              "expiresAt"
            ],
            "type": "object"
          }
        },
        "required": [
          "mimetype",
          "signedUrl"
        ],
        "type": "object"
      },
      "conversationItem_Page": {
        "properties": {
          "id": {
            "description": "The id of the page.",
            "type": "string"
          },
          "memberId": {
            "description": "The id of the teammate being paged.",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "resolved": {
            "description": "If the page has been resolved.",
            "type": "boolean"
          },
          "resolvedAt": {
            "description": "The date time the page was resolved at.",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "resolvedByMemberId": {
            "description": "The id of the teammate that resolved the page.",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          }
        },
        "required": [
          "id",
          "memberId",
          "resolved"
        ],
        "type": "object"
      },
      "conversationItem_PhoneCallEvent": {
        "properties": {
          "answered": {
            "description": "If the call was answered.",
            "type": "boolean"
          },
          "answeredBy": {
            "description": "If an inbound call was answered, which desk phone or external phone number answered it.",
            "properties": {
              "externalNumber": {
                "description": "the telephone number external to Spruce this call was answered by",
                "type": "string"
              },
              "lineId": {
                "description": "the ID of the phone line on the Spruce system this call was answered by",
                "type": "string"
              }
            },
            "type": "object"
          },
          "duration": {
            "description": "The duration of the call in seconds.",
            "type": "integer"
          },
          "failed": {
            "description": "If the call failed.",
            "type": "boolean"
          },
          "initiatedBy": {
            "description": "For outbound calls, which desk phone or teammate initiated it.",
            "properties": {
              "lineId": {
                "description": "the ID of the phone line on the Spruce system this call was initiated by",
                "type": "string"
              },
              "teammateID": {
                "description": "The id of the teammate",
                "example": "entity_0E5QDGJC03000",
                "type": "string"
              }
            },
            "type": "object"
          },
          "recordings": {
            "description": "The recordings of the call if any exist.",
            "items": {
              "properties": {
                "mimetype": {
                  "description": "The mimetype of the audio attachment.",
                  "example": "audio/mpeg",
                  "type": "string"
                },
                "signedUrl": {
                  "description": "The URL used to fetch the audio attachment.",
                  "properties": {
                    "expiresAt": {
                      "description": "The date the signed URL expires.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "url": {
                      "description": "The signed URL.",
                      "format": "url",
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "expiresAt"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "mimetype",
                "signedUrl"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "spam": {
            "description": "If the call was marked as spam.",
            "type": "boolean"
          },
          "voicemail": {
            "properties": {
              "mimetype": {
                "description": "The mimetype of the audio attachment.",
                "example": "audio/mpeg",
                "type": "string"
              },
              "signedUrl": {
                "description": "The URL used to fetch the audio attachment.",
                "properties": {
                  "expiresAt": {
                    "description": "The date the signed URL expires.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "url": {
                    "description": "The signed URL.",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "url",
                  "expiresAt"
                ],
                "type": "object"
              }
            },
            "required": [
              "mimetype",
              "signedUrl"
            ],
            "type": "object"
          }
        },
        "required": [
          "answered",
          "duration",
          "failed",
          "inbound",
          "spam"
        ],
        "type": "object"
      },
      "conversationItem_VideoAttachment": {
        "properties": {
          "mimetype": {
            "description": "The mimetype of the video attachment.",
            "example": "video/mp4",
            "type": "string"
          },
          "signedUrl": {
            "description": "The URL used to fetch the video attachment.",
            "properties": {
              "expiresAt": {
                "description": "The date the signed URL expires.",
                "format": "date-time",
                "type": "string"
              },
              "url": {
                "description": "The signed URL.",
                "format": "url",
                "type": "string"
              }
            },
            "required": [
              "url",
              "expiresAt"
            ],
            "type": "object"
          }
        },
        "required": [
          "mimetype",
          "signedUrl"
        ],
        "type": "object"
      },
      "conversationItem_VideoCallEvent": {
        "properties": {
          "answered": {
            "description": "If the call was answered.",
            "type": "boolean"
          },
          "duration": {
            "description": "The duration of the call in seconds.",
            "type": "integer"
          },
          "initiatedBy": {
            "description": "The Spruce is of the teammate that initiated it..",
            "example": "entity_0E5QDGJC03000",
            "type": "string"
          }
        },
        "required": [
          "answered",
          "duration",
          "initiatedBy"
        ],
        "type": "object"
      },
      "conversationItem_id": {
        "description": "The id of a conversation item.",
        "example": "ti_0D4QABCC06000",
        "type": "string"
      },
      "conversationItems_Order": {
        "description": "The order of the conversation items returned",
        "enum": [
          "newest_first",
          "oldest_first"
        ],
        "example": "newest_first",
        "type": "string"
      },
      "conversations_orderBy": {
        "description": "The order of the conversations returned",
        "enum": [
          "created",
          "last_message"
        ],
        "example": "created",
        "type": "string"
      },
      "create_conversation_secure": {
        "properties": {
          "destinationContactIds": {
            "description": "The ids of the destination contacts.",
            "example": [
              "entity_0D4QABCC06000"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "internalEndpointId": {
            "description": "Organization's internal endpoint ID that will be used as the internal endpoint for the conversation.",
            "example": "organizationCode_2ER39ETHBQ800",
            "type": "string"
          },
          "message": {
            "properties": {
              "attachments": {
                "items": {
                  "properties": {
                    "attachmentId": {
                      "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                      "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the attachment",
                      "example": "My Image",
                      "type": "string"
                    }
                  },
                  "required": [
                    "attachmentId",
                    "title"
                  ],
                  "type": "object"
                },
                "maxItems": 5,
                "type": "array"
              },
              "author": {
                "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                "example": "entity_0D4QABCC06000",
                "type": "string"
              },
              "body": {
                "items": {
                  "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                  "properties": {
                    "type": {
                      "enum": [
                        "text",
                        "page"
                      ],
                      "example": "text",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the message body element",
                      "example": "Hello, how are you?",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "value"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "internal": {
                "description": "Whether the message is internal or not",
                "example": false,
                "type": "boolean"
              },
              "stayArchived": {
                "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
                "example": false,
                "type": "boolean"
              }
            },
            "required": [
              "body"
            ],
            "type": "object"
          },
          "subject": {
            "description": "The conversation's subject.",
            "example": "Annual Physical Exam",
            "type": "string"
          }
        },
        "required": [
          "destinationContactIds",
          "internalEndpointId"
        ],
        "type": "object"
      },
      "create_conversation_type": {
        "description": "The type of conversation to create.",
        "enum": [
          "secure"
        ],
        "example": "secure",
        "type": "string"
      },
      "createContact": {
        "properties": {
          "category": {
            "enum": [
              "patient",
              "professional"
            ],
            "example": "patient",
            "type": "string"
          },
          "companyName": {
            "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
            "example": "Walgreens",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The contact's date of birth in the format YYYY-MM-DD.",
            "example": "2000-01-30",
            "format": "date",
            "type": "string"
          },
          "emailAddresses": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the email address such as 'Work', 'Home', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "example": "contact@example.com",
                  "format": "email",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "familyName": {
            "description": "The contact's family name (typically last name in US)",
            "example": "Smith",
            "type": "string"
          },
          "faxNumbers": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "gender": {
            "enum": [
              "unknown",
              "male",
              "female",
              "other"
            ],
            "example": "unknown",
            "type": "string"
          },
          "genderDetail": {
            "description": "Optional free-text details for gender",
            "example": "Non-binary",
            "type": "string"
          },
          "givenName": {
            "description": "The contact's given name (typically first name in US)",
            "example": "Joe",
            "type": "string"
          },
          "internalMemberIds": {
            "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "middleName": {
            "description": "The contact's middle name",
            "example": "William",
            "type": "string"
          },
          "organizationContactFields": {
            "description": "Fields on a contact that are custom to your organization",
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's contact organization contact custom field ID",
                  "example": "managedCustomField_0E5QDGJC03000",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the field",
                  "example": "CVS",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "phoneNumbers": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "pronouns": {
            "description": "The contact's pronouns",
            "example": "he/him",
            "type": "string"
          },
          "tagIds": {
            "description": "An array of Spruce contact tag ids",
            "items": {
              "description": "Spruce's contact tag ID",
              "example": "tag_0E5QDGJC03000",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "createConversation": {
        "properties": {
          "secure": {
            "properties": {
              "destinationContactIds": {
                "description": "The ids of the destination contacts.",
                "example": [
                  "entity_0D4QABCC06000"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "internalEndpointId": {
                "description": "Organization's internal endpoint ID that will be used as the internal endpoint for the conversation.",
                "example": "organizationCode_2ER39ETHBQ800",
                "type": "string"
              },
              "message": {
                "properties": {
                  "attachments": {
                    "items": {
                      "properties": {
                        "attachmentId": {
                          "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                          "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                          "type": "string"
                        },
                        "title": {
                          "description": "The title of the attachment",
                          "example": "My Image",
                          "type": "string"
                        }
                      },
                      "required": [
                        "attachmentId",
                        "title"
                      ],
                      "type": "object"
                    },
                    "maxItems": 5,
                    "type": "array"
                  },
                  "author": {
                    "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                    "example": "entity_0D4QABCC06000",
                    "type": "string"
                  },
                  "body": {
                    "items": {
                      "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                      "properties": {
                        "type": {
                          "enum": [
                            "text",
                            "page"
                          ],
                          "example": "text",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the message body element",
                          "example": "Hello, how are you?",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "internal": {
                    "description": "Whether the message is internal or not",
                    "example": false,
                    "type": "boolean"
                  },
                  "stayArchived": {
                    "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "required": [
                  "body"
                ],
                "type": "object"
              },
              "subject": {
                "description": "The conversation's subject.",
                "example": "Annual Physical Exam",
                "type": "string"
              }
            },
            "required": [
              "destinationContactIds",
              "internalEndpointId"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of conversation to create.",
            "enum": [
              "secure"
            ],
            "example": "secure",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "deviceInformation": {
        "properties": {
          "accessID": {
            "description": "The access ID of API credentials used to make the request.",
            "type": "string"
          },
          "appVersion": {
            "description": "The version of the app.",
            "type": "string"
          },
          "device": {
            "description": "The type of the device.",
            "type": "string"
          },
          "deviceId": {
            "description": "The id of the device.",
            "type": "string"
          },
          "deviceModel": {
            "description": "The model of the device.",
            "type": "string"
          },
          "platform": {
            "description": "The platform of the device.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "emailAddress": {
        "properties": {
          "id": {
            "description": "Spruce's phone number ID",
            "example": "entityContact_26RRC7PQ6JG00",
            "format": "string",
            "type": "string"
          },
          "label": {
            "description": "A label for the email address such as 'Work', 'Home', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "example": "contact@example.com",
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value"
        ],
        "type": "object"
      },
      "emailAddressInput": {
        "properties": {
          "label": {
            "description": "A label for the email address such as 'Work', 'Home', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "example": "contact@example.com",
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "emailAddressValue": {
        "example": "contact@example.com",
        "format": "email",
        "type": "string"
      },
      "endpoint": {
        "properties": {
          "channel": {
            "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
            "enum": [
              "email",
              "phone",
              "fax",
              "secure"
            ],
            "type": "string"
          },
          "displayValue": {
            "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
            "example": {
              "email": {
                "value": "patient@example.com"
              },
              "phone": {
                "value": "(555) 555-5555"
              },
              "secure": {
                "value": "spruce.care/123456"
              }
            },
            "type": "string"
          },
          "id": {
            "description": "The id of the endpoint",
            "example": 15555555555,
            "type": "string"
          },
          "isInternal": {
            "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
            "example": false,
            "type": "boolean"
          },
          "label": {
            "description": "The optional label of the endpoint",
            "example": [
              "Home",
              "Work"
            ],
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "rawValue": {
            "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
            "example": {
              "email": {
                "value": "patient@example.com"
              },
              "phone": {
                "value": 15555555555
              },
              "secure": {
                "value": "https://spruce.care/123456"
              }
            },
            "type": "string"
          }
        },
        "required": [
          "id",
          "channel",
          "displayValue",
          "rawValue",
          "isInternal",
          "object"
        ],
        "type": "object"
      },
      "endpoint_id": {
        "description": "The id of the endpoint",
        "example": 15555555555,
        "type": "string"
      },
      "entityContactID": {
        "description": "Spruce's phone number ID",
        "example": "entityContact_26RRC7PQ6JG00",
        "format": "string",
        "type": "string"
      },
      "error": {
        "properties": {
          "message": {
            "example": "Invalid Contact ID",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "integer"
          },
          "type": {
            "example": "BAD_PARAMETER",
            "type": "string"
          }
        },
        "required": [
          "message",
          "statusCode",
          "type"
        ],
        "type": "object"
      },
      "faxNumber": {
        "properties": {
          "displayValue": {
            "description": "The contact phone number in an easily readable format.",
            "example": "(222) 555-0000",
            "type": "string"
          },
          "id": {
            "description": "Spruce's phone number ID",
            "example": "entityContact_26RRC7PQ6JG00",
            "format": "string",
            "type": "string"
          },
          "label": {
            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
            "example": 12225550000,
            "format": "string",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "displayValue"
        ],
        "type": "object"
      },
      "faxNumberInput": {
        "properties": {
          "label": {
            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
            "example": 12225550000,
            "format": "string",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "hasMore": {
        "type": "boolean"
      },
      "initiatedBy": {
        "properties": {
          "lineId": {
            "description": "the ID of the phone line on the Spruce system this call was initiated by",
            "type": "string"
          },
          "teammateID": {
            "description": "The id of the teammate",
            "example": "entity_0E5QDGJC03000",
            "type": "string"
          }
        },
        "type": "object"
      },
      "internalEndpoint": {
        "properties": {
          "additionalMembers": {
            "items": {
              "anyOf": [
                {
                  "properties": {
                    "displayName": {
                      "description": "The full name of the teammate, including any title provided",
                      "example": "John Doe, MD",
                      "type": "string"
                    },
                    "email": {
                      "description": "The email address of the teammate",
                      "example": "provider@example.com",
                      "format": "email",
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the teammate",
                      "example": "entity_0E5QDGJC03000",
                      "type": "string"
                    },
                    "isAdmin": {
                      "description": "Whether or not the teammate is an admin on Spruce",
                      "example": false,
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "type": {
                      "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                      "example": "teammate",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "displayName",
                    "isAdmin",
                    "type",
                    "object"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "id": {
                      "description": "The id of the team",
                      "example": "entity_0D4QABCC06000",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the team",
                      "example": "Billing Team",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "type": {
                      "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                      "example": "team",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "object"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "id": {
                      "description": "The id of the organization",
                      "example": "entity_0D4QABCC06000",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the organization",
                      "example": "Spruce Health",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "type": {
                      "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                      "example": "organization",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "object"
                  ],
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "endpoint": {
            "properties": {
              "channel": {
                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                "enum": [
                  "email",
                  "phone",
                  "fax",
                  "secure"
                ],
                "type": "string"
              },
              "displayValue": {
                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                "example": {
                  "email": {
                    "value": "patient@example.com"
                  },
                  "phone": {
                    "value": "(555) 555-5555"
                  },
                  "secure": {
                    "value": "spruce.care/123456"
                  }
                },
                "type": "string"
              },
              "id": {
                "description": "The id of the endpoint",
                "example": 15555555555,
                "type": "string"
              },
              "isInternal": {
                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                "example": false,
                "type": "boolean"
              },
              "label": {
                "description": "The optional label of the endpoint",
                "example": [
                  "Home",
                  "Work"
                ],
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type",
                "type": "string"
              },
              "rawValue": {
                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                "example": {
                  "email": {
                    "value": "patient@example.com"
                  },
                  "phone": {
                    "value": 15555555555
                  },
                  "secure": {
                    "value": "https://spruce.care/123456"
                  }
                },
                "type": "string"
              }
            },
            "required": [
              "id",
              "channel",
              "displayValue",
              "rawValue",
              "isInternal",
              "object"
            ],
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "owner": {
            "oneOf": [
              {
                "properties": {
                  "displayName": {
                    "description": "The full name of the teammate, including any title provided",
                    "example": "John Doe, MD",
                    "type": "string"
                  },
                  "email": {
                    "description": "The email address of the teammate",
                    "example": "provider@example.com",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "The id of the teammate",
                    "example": "entity_0E5QDGJC03000",
                    "type": "string"
                  },
                  "isAdmin": {
                    "description": "Whether or not the teammate is an admin on Spruce",
                    "example": false,
                    "type": "boolean"
                  },
                  "object": {
                    "description": "String representing the object's type",
                    "type": "string"
                  },
                  "type": {
                    "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                    "example": "teammate",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "displayName",
                  "isAdmin",
                  "type",
                  "object"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "id": {
                    "description": "The id of the team",
                    "example": "entity_0D4QABCC06000",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the team",
                    "example": "Billing Team",
                    "type": "string"
                  },
                  "object": {
                    "description": "String representing the object's type",
                    "type": "string"
                  },
                  "type": {
                    "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                    "example": "team",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "object"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "id": {
                    "description": "The id of the organization",
                    "example": "entity_0D4QABCC06000",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the organization",
                    "example": "Spruce Health",
                    "type": "string"
                  },
                  "object": {
                    "description": "String representing the object's type",
                    "type": "string"
                  },
                  "type": {
                    "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                    "example": "organization",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "object"
                ],
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "endpoint",
          "owner",
          "object"
        ],
        "type": "object"
      },
      "internalMember_id": {
        "description": "The id of a team or teammate in the organization",
        "example": "entity_0D4QABCC06000",
        "type": "string"
      },
      "media": {
        "properties": {
          "id": {
            "description": "Spruce's media message ID",
            "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          }
        },
        "required": [
          "id",
          "object"
        ],
        "type": "object"
      },
      "media_id": {
        "description": "Spruce's media message ID",
        "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
        "type": "string"
      },
      "objectType": {
        "description": "String representing the object's type",
        "type": "string"
      },
      "organization": {
        "properties": {
          "id": {
            "description": "The id of the organization",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "name": {
            "description": "The name of the organization",
            "example": "Spruce Health",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "type": {
            "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
            "example": "organization",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "object"
        ],
        "type": "object"
      },
      "organizationMember": {
        "anyOf": [
          {
            "properties": {
              "displayName": {
                "description": "The full name of the teammate, including any title provided",
                "example": "John Doe, MD",
                "type": "string"
              },
              "email": {
                "description": "The email address of the teammate",
                "example": "provider@example.com",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "The id of the teammate",
                "example": "entity_0E5QDGJC03000",
                "type": "string"
              },
              "isAdmin": {
                "description": "Whether or not the teammate is an admin on Spruce",
                "example": false,
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type",
                "type": "string"
              },
              "type": {
                "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                "example": "teammate",
                "type": "string"
              }
            },
            "required": [
              "id",
              "displayName",
              "isAdmin",
              "type",
              "object"
            ],
            "type": "object"
          },
          {
            "properties": {
              "id": {
                "description": "The id of the team",
                "example": "entity_0D4QABCC06000",
                "type": "string"
              },
              "name": {
                "description": "The name of the team",
                "example": "Billing Team",
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type",
                "type": "string"
              },
              "type": {
                "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                "example": "team",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "type",
              "object"
            ],
            "type": "object"
          },
          {
            "properties": {
              "id": {
                "description": "The id of the organization",
                "example": "entity_0D4QABCC06000",
                "type": "string"
              },
              "name": {
                "description": "The name of the organization",
                "example": "Spruce Health",
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type",
                "type": "string"
              },
              "type": {
                "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                "example": "organization",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "type",
              "object"
            ],
            "type": "object"
          }
        ]
      },
      "paginationToken": {
        "description": "Token given in a previous response to allow requesting the next page",
        "example": "abcdefghijklmnop",
        "type": "string"
      },
      "phoneNumber": {
        "properties": {
          "displayValue": {
            "description": "The contact phone number in an easily readable format.",
            "example": "(222) 555-0000",
            "type": "string"
          },
          "id": {
            "description": "Spruce's phone number ID",
            "example": "entityContact_26RRC7PQ6JG00",
            "format": "string",
            "type": "string"
          },
          "label": {
            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
            "example": 12225550000,
            "format": "string",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "displayValue"
        ],
        "type": "object"
      },
      "phoneNumberDisplayValue": {
        "description": "The contact phone number in an easily readable format.",
        "example": "(222) 555-0000",
        "type": "string"
      },
      "phoneNumberInput": {
        "properties": {
          "label": {
            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
            "example": "Work",
            "type": "string"
          },
          "value": {
            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
            "example": 12225550000,
            "format": "string",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "phoneNumberLabel": {
        "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
        "example": "Work",
        "type": "string"
      },
      "phoneNumberValue": {
        "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
        "example": 12225550000,
        "format": "string",
        "type": "string"
      },
      "phoneline": {
        "description": "phone line",
        "properties": {
          "id": {
            "description": "Spruce's phone line ID",
            "example": "pd_26RRC7PQ6JG00",
            "type": "string"
          },
          "name": {
            "description": "The name of the phone line",
            "example": "Desk 101",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "id",
          "name"
        ],
        "type": "object"
      },
      "phoneline_id": {
        "description": "Spruce's phone line ID",
        "example": "pd_26RRC7PQ6JG00",
        "type": "string"
      },
      "scheduledMessage": {
        "properties": {
          "conversationId": {
            "description": "Spruce's conversation ID",
            "example": "t_0E5QDGJC03000",
            "type": "string"
          },
          "createdAt": {
            "description": "The date and time the scheduled message was created",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Spruce's scheduled message ID",
            "example": "scm_26RRC7PQ6JG00",
            "type": "string"
          },
          "isInternalNote": {
            "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
            "example": false,
            "type": "boolean"
          },
          "message": {
            "properties": {
              "attachments": {
                "description": "Attachments for the scheduled message",
                "items": {
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "properties": {
                            "mimetype": {
                              "description": "The mimetype of the audio attachment.",
                              "example": "audio/mpeg",
                              "type": "string"
                            },
                            "signedUrl": {
                              "description": "The URL used to fetch the audio attachment.",
                              "properties": {
                                "expiresAt": {
                                  "description": "The date the signed URL expires.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The signed URL.",
                                  "format": "url",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "expiresAt"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mimetype",
                            "signedUrl"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "mimetype": {
                              "description": "The mimetype of the document attachment.",
                              "example": "application/pdf",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name associated with the attached document.",
                              "type": "string"
                            },
                            "signedUrl": {
                              "description": "The URL used to fetch the document attachment.",
                              "properties": {
                                "expiresAt": {
                                  "description": "The date the signed URL expires.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The signed URL.",
                                  "format": "url",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "expiresAt"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "mimetype",
                            "signedUrl"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "title": {
                              "description": "The title associated with the attached entity profile.",
                              "example": "John Smith",
                              "type": "string"
                            },
                            "url": {
                              "description": "The URL of the entity profile.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "url"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "mimetype": {
                              "description": "The mimetype of the image attachment.",
                              "example": "image/png",
                              "type": "string"
                            },
                            "signedUrl": {
                              "description": "The URL used to fetch the image attachment.",
                              "properties": {
                                "expiresAt": {
                                  "description": "The date the signed URL expires.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The signed URL.",
                                  "format": "url",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "expiresAt"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mimetype",
                            "signedUrl"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "mimetype": {
                              "description": "The mimetype of the video attachment.",
                              "example": "video/mp4",
                              "type": "string"
                            },
                            "signedUrl": {
                              "description": "The URL used to fetch the video attachment.",
                              "properties": {
                                "expiresAt": {
                                  "description": "The date the signed URL expires.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The signed URL.",
                                  "format": "url",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "expiresAt"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mimetype",
                            "signedUrl"
                          ],
                          "type": "object"
                        }
                      ]
                    },
                    "title": {
                      "description": "The title of the attachment.",
                      "example": "example.pdf",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the attachment.",
                      "enum": [
                        "audio",
                        "carePlan",
                        "document",
                        "entityProfile",
                        "genericUrl",
                        "image",
                        "paymentRequest",
                        "video",
                        "visit"
                      ]
                    }
                  },
                  "required": [
                    "title",
                    "type"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "pagedInternalMemberIds": {
                "description": "The internal member ids that are paged in the scheduled message.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "text": {
                "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                "example": "Can you look at this @Dr. Smith?",
                "type": "string"
              }
            },
            "required": [
              "attachments",
              "pagedInternalMemberIds",
              "text"
            ],
            "type": "object"
          },
          "modifiedAt": {
            "description": "The date and time the scheduled message was modified",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "scheduledToSendAt": {
            "description": "The date and time the message is scheduled to be sent",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "sendAsInternalMemberId": {
            "description": "The id of a team or teammate in the organization",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          }
        },
        "required": [
          "id",
          "conversationId",
          "createdAt",
          "isInternalNote",
          "message",
          "modifiedAt",
          "sendAsInternalMemberId",
          "scheduledToSendAt",
          "object"
        ],
        "type": "object"
      },
      "scheduledMessage_id": {
        "description": "Spruce's scheduled message ID",
        "example": "scm_26RRC7PQ6JG00",
        "type": "string"
      },
      "scheduledMessage_message": {
        "properties": {
          "attachments": {
            "description": "Attachments for the scheduled message",
            "items": {
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the audio attachment.",
                          "example": "audio/mpeg",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the audio attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the document attachment.",
                          "example": "application/pdf",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name associated with the attached document.",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the document attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "name",
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "title": {
                          "description": "The title associated with the attached entity profile.",
                          "example": "John Smith",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL of the entity profile.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "url"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the image attachment.",
                          "example": "image/png",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the image attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "mimetype": {
                          "description": "The mimetype of the video attachment.",
                          "example": "video/mp4",
                          "type": "string"
                        },
                        "signedUrl": {
                          "description": "The URL used to fetch the video attachment.",
                          "properties": {
                            "expiresAt": {
                              "description": "The date the signed URL expires.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": {
                              "description": "The signed URL.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "expiresAt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "mimetype",
                        "signedUrl"
                      ],
                      "type": "object"
                    }
                  ]
                },
                "title": {
                  "description": "The title of the attachment.",
                  "example": "example.pdf",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the attachment.",
                  "enum": [
                    "audio",
                    "carePlan",
                    "document",
                    "entityProfile",
                    "genericUrl",
                    "image",
                    "paymentRequest",
                    "video",
                    "visit"
                  ]
                }
              },
              "required": [
                "title",
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "pagedInternalMemberIds": {
            "description": "The internal member ids that are paged in the scheduled message.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "text": {
            "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
            "example": "Can you look at this @Dr. Smith?",
            "type": "string"
          }
        },
        "required": [
          "attachments",
          "pagedInternalMemberIds",
          "text"
        ],
        "type": "object"
      },
      "scheduledMessage_messagePost": {
        "properties": {
          "author": {
            "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "body": {
            "items": {
              "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
              "properties": {
                "type": {
                  "enum": [
                    "text",
                    "page"
                  ],
                  "example": "text",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the message body element",
                  "example": "Hello, how are you?",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "internal": {
            "description": "Whether the message is internal or not",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "body"
        ],
        "type": "object"
      },
      "searchComparisonFilter": {
        "enum": [
          "equal",
          "less_than",
          "less_than_or_equal_to",
          "greater_than",
          "greater_than_or_equal_to"
        ],
        "example": "equal",
        "type": "string"
      },
      "searchListMatchFilter": {
        "enum": [
          "all",
          "any",
          "none"
        ],
        "example": "all",
        "type": "string"
      },
      "searchStringMatchFilter": {
        "enum": [
          "equals",
          "contains",
          "starts_with"
        ],
        "example": "equal",
        "type": "string"
      },
      "searchTotalCountRelation": {
        "description": "The relation to use when comparing the total number of available search to the value specified in the results count field.\nA value of `gte` means that the count is a lower bound of the total results that match the query and a value of `eq` indicates that the count is accurate.",
        "enum": [
          "eq",
          "gte"
        ],
        "example": "equal",
        "type": "string"
      },
      "send_invite_customMessage": {
        "description": "The message to send to the invitee.",
        "example": "You've been invited to securely message with our clinic.",
        "type": "string"
      },
      "send_invite_destinationId": {
        "description": "The id of the phone number or email to send the invite to.",
        "example": "entityContact_0D4QABCC06000",
        "type": "string"
      },
      "send_invite_internalEndpointId": {
        "description": "Organization's internal secure endpoint that will be used to send the invite.",
        "example": "organizationCode_2ER39ETHBQ800",
        "type": "string"
      },
      "sendInvite": {
        "properties": {
          "customMessage": {
            "description": "The message to send to the invitee.",
            "example": "You've been invited to securely message with our clinic.",
            "type": "string"
          },
          "destinationId": {
            "description": "The id of the phone number or email to send the invite to.",
            "example": "entityContact_0D4QABCC06000",
            "type": "string"
          },
          "internalEndpointId": {
            "description": "Organization's internal secure endpoint that will be used to send the invite.",
            "example": "organizationCode_2ER39ETHBQ800",
            "type": "string"
          }
        },
        "required": [
          "internalEndpointId",
          "destinationId"
        ],
        "type": "object"
      },
      "signedUrl": {
        "properties": {
          "expiresAt": {
            "description": "The date the signed URL expires.",
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "description": "The signed URL.",
            "format": "url",
            "type": "string"
          }
        },
        "required": [
          "url",
          "expiresAt"
        ],
        "type": "object"
      },
      "team": {
        "properties": {
          "id": {
            "description": "The id of the team",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "name": {
            "description": "The name of the team",
            "example": "Billing Team",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "type": {
            "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
            "example": "team",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "object"
        ],
        "type": "object"
      },
      "teammate": {
        "properties": {
          "displayName": {
            "description": "The full name of the teammate, including any title provided",
            "example": "John Doe, MD",
            "type": "string"
          },
          "email": {
            "description": "The email address of the teammate",
            "example": "provider@example.com",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "The id of the teammate",
            "example": "entity_0E5QDGJC03000",
            "type": "string"
          },
          "isAdmin": {
            "description": "Whether or not the teammate is an admin on Spruce",
            "example": false,
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "type": {
            "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
            "example": "teammate",
            "type": "string"
          }
        },
        "required": [
          "id",
          "displayName",
          "isAdmin",
          "type",
          "object"
        ],
        "type": "object"
      },
      "teammate_id": {
        "description": "The id of the teammate",
        "example": "entity_0E5QDGJC03000",
        "type": "string"
      },
      "totalCount": {
        "example": 750,
        "format": "int32",
        "type": "integer"
      },
      "updateContact": {
        "description": "Any omitted or null field will not be updated. To clear a field, pass an empty value such as \"\" or []",
        "properties": {
          "category": {
            "enum": [
              "patient",
              "professional"
            ],
            "example": "patient",
            "type": "string"
          },
          "companyName": {
            "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
            "example": "Walgreens",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The contact's date of birth in the format YYYY-MM-DD.",
            "example": "2000-01-30",
            "format": "date",
            "type": "string"
          },
          "emailAddresses": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the email address such as 'Work', 'Home', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "example": "contact@example.com",
                  "format": "email",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "familyName": {
            "description": "The contact's family name (typically last name in US)",
            "example": "Smith",
            "type": "string"
          },
          "faxNumbers": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "gender": {
            "enum": [
              "unknown",
              "male",
              "female",
              "other"
            ],
            "example": "unknown",
            "type": "string"
          },
          "genderDetail": {
            "description": "Optional free-text details for gender",
            "example": "Non-binary",
            "type": "string"
          },
          "givenName": {
            "description": "The contact's given name (typically first name in US)",
            "example": "Joe",
            "type": "string"
          },
          "internalMemberIds": {
            "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "middleName": {
            "description": "The contact's middle name",
            "example": "William",
            "type": "string"
          },
          "organizationContactFields": {
            "description": "Fields on a contact that are custom to your organization",
            "items": {
              "properties": {
                "id": {
                  "description": "Spruce's contact organization contact custom field ID",
                  "example": "managedCustomField_0E5QDGJC03000",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the field",
                  "example": "CVS",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "phoneNumbers": {
            "items": {
              "properties": {
                "label": {
                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                  "example": "Work",
                  "type": "string"
                },
                "value": {
                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                  "example": 12225550000,
                  "format": "string",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "pronouns": {
            "description": "The contact's pronouns",
            "example": "he/him",
            "type": "string"
          },
          "tagIds": {
            "description": "An array of Spruce contact tag ids",
            "items": {
              "description": "Spruce's contact tag ID",
              "example": "tag_0E5QDGJC03000",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "updateConversation": {
        "description": "Any omitted or null field will not be updated. To clear a field, pass an empty value such as \"\" or []",
        "properties": {
          "archived": {
            "description": "Whether the conversation should be archived (true) or unarchived (false)",
            "type": "boolean"
          },
          "assignToMemberId": {
            "description": "The id of a team or teammate to assign the conversation to. If the specified teammate or team is not a member of the conversation, they will be added as a member.",
            "example": "entity_0D4QABCC06000",
            "type": "string"
          },
          "tagIds": {
            "description": "An array of Spruce conversation tag ids",
            "items": {
              "description": "Spruce's conversation tag ID",
              "example": "tag_0E5QDGJC03000",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "webhookDestinationEndpoint": {
        "properties": {
          "createdAt": {
            "description": "The date the destination endpoint was created",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of a webhook destination endpoint",
            "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
            "type": "string"
          },
          "name": {
            "description": "The name of the webhook destination endpoint",
            "example": "My Webhook Endpoint",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          },
          "signingSecrets": {
            "items": {
              "description": "The signing secret for the webhook endpoint. This is used to verify the authenticity of the webhook payload. This value is only populated when the webhook endpoint is created.",
              "properties": {
                "id": {
                  "description": "The ID of the signing secret",
                  "example": "wss_01HWDG5ADNBGXXXXXY07DP8",
                  "type": "string"
                },
                "value": {
                  "description": "The signing secret",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "status": {
            "description": "The status of the webhook destination endpoint",
            "type": "string"
          },
          "url": {
            "description": "The URL of the webhook destination endpoint",
            "example": "https://example.com/webhook",
            "format": "url",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "id",
          "signingSecrets",
          "status",
          "url",
          "object"
        ],
        "type": "object"
      },
      "webhookDestinationEndpoint_id": {
        "description": "The id of a webhook destination endpoint",
        "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
        "type": "string"
      },
      "webhookDestinationEndpoint_name": {
        "description": "The name of the webhook destination endpoint",
        "example": "My Webhook Endpoint",
        "type": "string"
      },
      "webhookDestinationEndpoint_url": {
        "description": "The URL of the webhook destination endpoint",
        "example": "https://example.com/webhook",
        "format": "url",
        "type": "string"
      },
      "webhookDestinationEndpointEvent": {
        "description": "An event that has been attempted to be sent to a webhook destination endpoint",
        "properties": {
          "data": {
            "type": "string"
          },
          "delivery": {
            "description": "Delivery information for an event that has been attempted to be sent to a webhook destination endpoint",
            "properties": {
              "attemptLimit": {
                "description": "The maximum number of attempts that will be made to deliver an event",
                "type": "integer"
              },
              "attempts": {
                "description": "The number of attempts so far to deliver the event",
                "type": "integer"
              },
              "deliveryTime": {
                "description": "The date the event was successfully delivered.",
                "example": "2020-04-01T00:00:00Z",
                "format": "date-time",
                "type": "string"
              },
              "nextAttemptTime": {
                "description": "The date the event will attempt delivery again.",
                "example": "2020-04-01T00:00:00Z",
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "attempts",
              "attemptLimit",
              "status"
            ],
            "type": "object"
          },
          "eventTime": {
            "description": "The date the event was created",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of an event",
            "example": "wev_01HWDG5ADNBGJ3XXXXXFP8P1GH",
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type",
            "type": "string"
          }
        },
        "required": [
          "id",
          "eventTime",
          "data",
          "object"
        ],
        "type": "object"
      },
      "webhookDestinationEndpointEvent_id": {
        "description": "The id of an event",
        "example": "wev_01HWDG5ADNBGJ3XXXXXFP8P1GH",
        "type": "string"
      },
      "webhookDestinationEndpointEventDelivery": {
        "description": "Delivery information for an event that has been attempted to be sent to a webhook destination endpoint",
        "properties": {
          "attemptLimit": {
            "description": "The maximum number of attempts that will be made to deliver an event",
            "type": "integer"
          },
          "attempts": {
            "description": "The number of attempts so far to deliver the event",
            "type": "integer"
          },
          "deliveryTime": {
            "description": "The date the event was successfully delivered.",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "nextAttemptTime": {
            "description": "The date the event will attempt delivery again.",
            "example": "2020-04-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "attempts",
          "attemptLimit",
          "status"
        ],
        "type": "object"
      },
      "webhookDestinationEndpointInput": {
        "properties": {
          "name": {
            "description": "The name of the webhook destination endpoint",
            "example": "My Webhook Endpoint",
            "type": "string"
          },
          "url": {
            "description": "The URL of the webhook destination endpoint",
            "example": "https://example.com/webhook",
            "format": "url",
            "type": "string"
          }
        },
        "required": [
          "name",
          "url"
        ],
        "type": "object"
      },
      "webhookSigningSecret": {
        "description": "The signing secret for the webhook endpoint. This is used to verify the authenticity of the webhook payload. This value is only populated when the webhook endpoint is created.",
        "properties": {
          "id": {
            "description": "The ID of the signing secret",
            "example": "wss_01HWDG5ADNBGXXXXXY07DP8",
            "type": "string"
          },
          "value": {
            "description": "The signing secret",
            "type": "string"
          }
        },
        "required": [
          "id",
          "value"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "spruceAPIToken": {
        "description": "API token provided by Spruce should be passed in an \"Authorization\" header with the value \"Bearer <token>\"",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Spruce Health API",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/contacts": {
      "get": {
        "description": "This operation lists all contacts available to a given organization.\n\nThe `hasMore` field can be used to determine if there are remaining results to list. The `paginationToken` field can be provided on subsequents calls to retrieve the next page of results.\n",
        "operationId": "ListContacts",
        "parameters": [
          {
            "description": "How many contacts to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contacts": {
                      "items": {
                        "properties": {
                          "apiURL": {
                            "description": "An absolute URL for fetching this contact from the API",
                            "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "appURL": {
                            "description": "An absolute URL to view the contact in the Spruce app",
                            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "canDelete": {
                            "description": "Whether the contact may be deleted.",
                            "example": true,
                            "type": "boolean"
                          },
                          "canEdit": {
                            "description": "Whether the contact may be edited.",
                            "example": true,
                            "type": "boolean"
                          },
                          "category": {
                            "enum": [
                              "patient",
                              "professional",
                              "clinic",
                              "unknown"
                            ],
                            "example": "patient",
                            "type": "string"
                          },
                          "companyName": {
                            "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                            "example": "Walgreens",
                            "type": "string"
                          },
                          "created": {
                            "description": "The date this contact was added to Spruce",
                            "example": "2021-01-30T08:30:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "customContactFields": {
                            "description": "Fields on a contact that are custom",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact contact custom field ID",
                                  "example": "entityCustomField_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A name for the field",
                                  "example": "Preferred Pharmacy",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the field",
                                  "example": "CVS",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "dateOfBirth": {
                            "description": "The contact's date of birth in the format YYYY-MM-DD.",
                            "example": "2000-01-30",
                            "format": "date",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                            "example": "Joe William Smith",
                            "type": "string"
                          },
                          "emailAddresses": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the email address such as 'Work', 'Home', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "example": "contact@example.com",
                                  "format": "email",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "familyName": {
                            "description": "The contact's family name (typically last name in US)",
                            "example": "Smith",
                            "type": "string"
                          },
                          "faxNumbers": {
                            "items": {
                              "properties": {
                                "displayValue": {
                                  "description": "The contact phone number in an easily readable format.",
                                  "example": "(222) 555-0000",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                  "example": 12225550000,
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "displayValue"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "gender": {
                            "enum": [
                              "unknown",
                              "male",
                              "female",
                              "other"
                            ],
                            "example": "unknown",
                            "type": "string"
                          },
                          "genderDetail": {
                            "description": "Optional free-text details for gender",
                            "example": "Non-binary",
                            "type": "string"
                          },
                          "givenName": {
                            "description": "The contact's given name (typically first name in US)",
                            "example": "Joe",
                            "type": "string"
                          },
                          "hasAccount": {
                            "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                            "example": true,
                            "type": "boolean"
                          },
                          "hasPendingInvite": {
                            "description": "Whether the contact has a pending Spruce account invitation",
                            "example": true,
                            "type": "boolean"
                          },
                          "id": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "integrationLinks": {
                            "description": "Links between a contact and an integrated external system.",
                            "items": {
                              "properties": {
                                "contactId": {
                                  "description": "Spruce's contact ID",
                                  "example": "entity_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "externalId": {
                                  "description": "The id of a contact in an external system.",
                                  "example": "elation_140797386655555",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "elation",
                                    "hint",
                                    "athena",
                                    "custom"
                                  ],
                                  "example": "elation",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The url of a contact in an integrated external system.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "externalId",
                                "contactId"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "internalMemberIds": {
                            "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "middleName": {
                            "description": "The contact's middle name",
                            "example": "William",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "organizationContactFields": {
                            "description": "Fields on a contact that are custom",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact organization contact custom field ID",
                                  "example": "managedCustomField_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A name for the field",
                                  "example": "Preferred Pharmacy",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the field",
                                  "example": "CVS",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "phoneNumbers": {
                            "items": {
                              "properties": {
                                "displayValue": {
                                  "description": "The contact phone number in an easily readable format.",
                                  "example": "(222) 555-0000",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                  "example": 12225550000,
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "displayValue"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "pronouns": {
                            "description": "The contact's pronouns",
                            "example": "he/him",
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact tag ID",
                                  "example": "tag_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "String representing the object's type",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The text value of a contact tag",
                                  "example": "Smith",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "object"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "id",
                          "displayName",
                          "tags",
                          "gender",
                          "category",
                          "created",
                          "phoneNumbers",
                          "emailAddresses",
                          "customFields",
                          "appURL",
                          "apiURL",
                          "hasAccount",
                          "hasPendingInvite",
                          "customContactFields",
                          "organizationContactFields",
                          "canDelete",
                          "canEdit",
                          "integrationLinks",
                          "object",
                          "internalMemberIds"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "totalCount",
                    "contacts",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A paged array of contacts",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List contacts",
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "description": "This operation creates a contact within an organization.\n\nCreating a new contact requires at least of the following fields to be populated (`givenName`, `familyName`, `phoneNumbers`, `faxNumbers`, `emailAddresses`).\n",
        "operationId": "CreateContact",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Contact json object. At least one name or piece of contact information is required",
                "properties": {
                  "category": {
                    "enum": [
                      "patient",
                      "professional"
                    ],
                    "example": "patient",
                    "type": "string"
                  },
                  "companyName": {
                    "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                    "example": "Walgreens",
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "description": "The contact's date of birth in the format YYYY-MM-DD.",
                    "example": "2000-01-30",
                    "format": "date",
                    "type": "string"
                  },
                  "emailAddresses": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the email address such as 'Work', 'Home', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "example": "contact@example.com",
                          "format": "email",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "familyName": {
                    "description": "The contact's family name (typically last name in US)",
                    "example": "Smith",
                    "type": "string"
                  },
                  "faxNumbers": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                          "example": 12225550000,
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "gender": {
                    "enum": [
                      "unknown",
                      "male",
                      "female",
                      "other"
                    ],
                    "example": "unknown",
                    "type": "string"
                  },
                  "genderDetail": {
                    "description": "Optional free-text details for gender",
                    "example": "Non-binary",
                    "type": "string"
                  },
                  "givenName": {
                    "description": "The contact's given name (typically first name in US)",
                    "example": "Joe",
                    "type": "string"
                  },
                  "internalMemberIds": {
                    "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "middleName": {
                    "description": "The contact's middle name",
                    "example": "William",
                    "type": "string"
                  },
                  "organizationContactFields": {
                    "description": "Fields on a contact that are custom to your organization",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Spruce's contact organization contact custom field ID",
                          "example": "managedCustomField_0E5QDGJC03000",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the field",
                          "example": "CVS",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "phoneNumbers": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                          "example": 12225550000,
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "pronouns": {
                    "description": "The contact's pronouns",
                    "example": "he/him",
                    "type": "string"
                  },
                  "tagIds": {
                    "description": "An array of Spruce contact tag ids",
                    "items": {
                      "description": "Spruce's contact tag ID",
                      "example": "tag_0E5QDGJC03000",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "apiURL": {
                      "description": "An absolute URL for fetching this contact from the API",
                      "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "appURL": {
                      "description": "An absolute URL to view the contact in the Spruce app",
                      "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "canDelete": {
                      "description": "Whether the contact may be deleted.",
                      "example": true,
                      "type": "boolean"
                    },
                    "canEdit": {
                      "description": "Whether the contact may be edited.",
                      "example": true,
                      "type": "boolean"
                    },
                    "category": {
                      "enum": [
                        "patient",
                        "professional",
                        "clinic",
                        "unknown"
                      ],
                      "example": "patient",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                      "example": "Walgreens",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date this contact was added to Spruce",
                      "example": "2021-01-30T08:30:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "customContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact contact custom field ID",
                            "example": "entityCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dateOfBirth": {
                      "description": "The contact's date of birth in the format YYYY-MM-DD.",
                      "example": "2000-01-30",
                      "format": "date",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                      "example": "Joe William Smith",
                      "type": "string"
                    },
                    "emailAddresses": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the email address such as 'Work', 'Home', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "example": "contact@example.com",
                            "format": "email",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "familyName": {
                      "description": "The contact's family name (typically last name in US)",
                      "example": "Smith",
                      "type": "string"
                    },
                    "faxNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "gender": {
                      "enum": [
                        "unknown",
                        "male",
                        "female",
                        "other"
                      ],
                      "example": "unknown",
                      "type": "string"
                    },
                    "genderDetail": {
                      "description": "Optional free-text details for gender",
                      "example": "Non-binary",
                      "type": "string"
                    },
                    "givenName": {
                      "description": "The contact's given name (typically first name in US)",
                      "example": "Joe",
                      "type": "string"
                    },
                    "hasAccount": {
                      "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                      "example": true,
                      "type": "boolean"
                    },
                    "hasPendingInvite": {
                      "description": "Whether the contact has a pending Spruce account invitation",
                      "example": true,
                      "type": "boolean"
                    },
                    "id": {
                      "description": "Spruce's contact ID",
                      "example": "entity_0E5QDGJC03000",
                      "type": "string"
                    },
                    "integrationLinks": {
                      "description": "Links between a contact and an integrated external system.",
                      "items": {
                        "properties": {
                          "contactId": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "The id of a contact in an external system.",
                            "example": "elation_140797386655555",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          },
                          "url": {
                            "description": "The url of a contact in an integrated external system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "externalId",
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "internalMemberIds": {
                      "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "middleName": {
                      "description": "The contact's middle name",
                      "example": "William",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "organizationContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact organization contact custom field ID",
                            "example": "managedCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "phoneNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "pronouns": {
                      "description": "The contact's pronouns",
                      "example": "he/him",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a contact tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id",
                    "displayName",
                    "tags",
                    "gender",
                    "category",
                    "created",
                    "phoneNumbers",
                    "emailAddresses",
                    "customFields",
                    "appURL",
                    "apiURL",
                    "hasAccount",
                    "hasPendingInvite",
                    "customContactFields",
                    "organizationContactFields",
                    "canDelete",
                    "canEdit",
                    "integrationLinks",
                    "object",
                    "internalMemberIds"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a contact",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{contactId}": {
      "delete": {
        "description": "This operation deletes a specific contact by id.\n\nSee the `canDelete` field on a given contact to determine if deletion is allowed.\n",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "description": "The id of the contact to delete",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok response",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a contact",
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "description": "This operation retrieves a specific contact by id.",
        "operationId": "Contact",
        "parameters": [
          {
            "description": "The id of the contact to retrieve",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "apiURL": {
                      "description": "An absolute URL for fetching this contact from the API",
                      "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "appURL": {
                      "description": "An absolute URL to view the contact in the Spruce app",
                      "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "canDelete": {
                      "description": "Whether the contact may be deleted.",
                      "example": true,
                      "type": "boolean"
                    },
                    "canEdit": {
                      "description": "Whether the contact may be edited.",
                      "example": true,
                      "type": "boolean"
                    },
                    "category": {
                      "enum": [
                        "patient",
                        "professional",
                        "clinic",
                        "unknown"
                      ],
                      "example": "patient",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                      "example": "Walgreens",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date this contact was added to Spruce",
                      "example": "2021-01-30T08:30:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "customContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact contact custom field ID",
                            "example": "entityCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dateOfBirth": {
                      "description": "The contact's date of birth in the format YYYY-MM-DD.",
                      "example": "2000-01-30",
                      "format": "date",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                      "example": "Joe William Smith",
                      "type": "string"
                    },
                    "emailAddresses": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the email address such as 'Work', 'Home', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "example": "contact@example.com",
                            "format": "email",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "familyName": {
                      "description": "The contact's family name (typically last name in US)",
                      "example": "Smith",
                      "type": "string"
                    },
                    "faxNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "gender": {
                      "enum": [
                        "unknown",
                        "male",
                        "female",
                        "other"
                      ],
                      "example": "unknown",
                      "type": "string"
                    },
                    "genderDetail": {
                      "description": "Optional free-text details for gender",
                      "example": "Non-binary",
                      "type": "string"
                    },
                    "givenName": {
                      "description": "The contact's given name (typically first name in US)",
                      "example": "Joe",
                      "type": "string"
                    },
                    "hasAccount": {
                      "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                      "example": true,
                      "type": "boolean"
                    },
                    "hasPendingInvite": {
                      "description": "Whether the contact has a pending Spruce account invitation",
                      "example": true,
                      "type": "boolean"
                    },
                    "id": {
                      "description": "Spruce's contact ID",
                      "example": "entity_0E5QDGJC03000",
                      "type": "string"
                    },
                    "integrationLinks": {
                      "description": "Links between a contact and an integrated external system.",
                      "items": {
                        "properties": {
                          "contactId": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "The id of a contact in an external system.",
                            "example": "elation_140797386655555",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          },
                          "url": {
                            "description": "The url of a contact in an integrated external system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "externalId",
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "internalMemberIds": {
                      "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "middleName": {
                      "description": "The contact's middle name",
                      "example": "William",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "organizationContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact organization contact custom field ID",
                            "example": "managedCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "phoneNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "pronouns": {
                      "description": "The contact's pronouns",
                      "example": "he/him",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a contact tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id",
                    "displayName",
                    "tags",
                    "gender",
                    "category",
                    "created",
                    "phoneNumbers",
                    "emailAddresses",
                    "customFields",
                    "appURL",
                    "apiURL",
                    "hasAccount",
                    "hasPendingInvite",
                    "customContactFields",
                    "organizationContactFields",
                    "canDelete",
                    "canEdit",
                    "integrationLinks",
                    "object",
                    "internalMemberIds"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a contact by Spruce Contact ID",
        "tags": [
          "Contacts"
        ]
      },
      "patch": {
        "description": "This operation updates a specific contact by id.\n\nFields provided in the input object will be updated, omitted fields *(null)* will be unchanged.\n",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the contact to update",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Contact json object. Omitted fields are not updated.",
                "properties": {
                  "category": {
                    "enum": [
                      "patient",
                      "professional"
                    ],
                    "example": "patient",
                    "type": "string"
                  },
                  "companyName": {
                    "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                    "example": "Walgreens",
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "description": "The contact's date of birth in the format YYYY-MM-DD.",
                    "example": "2000-01-30",
                    "format": "date",
                    "type": "string"
                  },
                  "emailAddresses": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the email address such as 'Work', 'Home', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "example": "contact@example.com",
                          "format": "email",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "familyName": {
                    "description": "The contact's family name (typically last name in US)",
                    "example": "Smith",
                    "type": "string"
                  },
                  "faxNumbers": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                          "example": 12225550000,
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "gender": {
                    "enum": [
                      "unknown",
                      "male",
                      "female",
                      "other"
                    ],
                    "example": "unknown",
                    "type": "string"
                  },
                  "genderDetail": {
                    "description": "Optional free-text details for gender",
                    "example": "Non-binary",
                    "type": "string"
                  },
                  "givenName": {
                    "description": "The contact's given name (typically first name in US)",
                    "example": "Joe",
                    "type": "string"
                  },
                  "internalMemberIds": {
                    "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "middleName": {
                    "description": "The contact's middle name",
                    "example": "William",
                    "type": "string"
                  },
                  "organizationContactFields": {
                    "description": "Fields on a contact that are custom to your organization",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Spruce's contact organization contact custom field ID",
                          "example": "managedCustomField_0E5QDGJC03000",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the field",
                          "example": "CVS",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "phoneNumbers": {
                    "items": {
                      "properties": {
                        "label": {
                          "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                          "example": "Work",
                          "type": "string"
                        },
                        "value": {
                          "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                          "example": 12225550000,
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "pronouns": {
                    "description": "The contact's pronouns",
                    "example": "he/him",
                    "type": "string"
                  },
                  "tagIds": {
                    "description": "An array of Spruce contact tag ids",
                    "items": {
                      "description": "Spruce's contact tag ID",
                      "example": "tag_0E5QDGJC03000",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "apiURL": {
                      "description": "An absolute URL for fetching this contact from the API",
                      "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "appURL": {
                      "description": "An absolute URL to view the contact in the Spruce app",
                      "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "canDelete": {
                      "description": "Whether the contact may be deleted.",
                      "example": true,
                      "type": "boolean"
                    },
                    "canEdit": {
                      "description": "Whether the contact may be edited.",
                      "example": true,
                      "type": "boolean"
                    },
                    "category": {
                      "enum": [
                        "patient",
                        "professional",
                        "clinic",
                        "unknown"
                      ],
                      "example": "patient",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                      "example": "Walgreens",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date this contact was added to Spruce",
                      "example": "2021-01-30T08:30:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "customContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact contact custom field ID",
                            "example": "entityCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dateOfBirth": {
                      "description": "The contact's date of birth in the format YYYY-MM-DD.",
                      "example": "2000-01-30",
                      "format": "date",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                      "example": "Joe William Smith",
                      "type": "string"
                    },
                    "emailAddresses": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the email address such as 'Work', 'Home', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "example": "contact@example.com",
                            "format": "email",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "familyName": {
                      "description": "The contact's family name (typically last name in US)",
                      "example": "Smith",
                      "type": "string"
                    },
                    "faxNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "gender": {
                      "enum": [
                        "unknown",
                        "male",
                        "female",
                        "other"
                      ],
                      "example": "unknown",
                      "type": "string"
                    },
                    "genderDetail": {
                      "description": "Optional free-text details for gender",
                      "example": "Non-binary",
                      "type": "string"
                    },
                    "givenName": {
                      "description": "The contact's given name (typically first name in US)",
                      "example": "Joe",
                      "type": "string"
                    },
                    "hasAccount": {
                      "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                      "example": true,
                      "type": "boolean"
                    },
                    "hasPendingInvite": {
                      "description": "Whether the contact has a pending Spruce account invitation",
                      "example": true,
                      "type": "boolean"
                    },
                    "id": {
                      "description": "Spruce's contact ID",
                      "example": "entity_0E5QDGJC03000",
                      "type": "string"
                    },
                    "integrationLinks": {
                      "description": "Links between a contact and an integrated external system.",
                      "items": {
                        "properties": {
                          "contactId": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "The id of a contact in an external system.",
                            "example": "elation_140797386655555",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          },
                          "url": {
                            "description": "The url of a contact in an integrated external system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "externalId",
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "internalMemberIds": {
                      "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "middleName": {
                      "description": "The contact's middle name",
                      "example": "William",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "organizationContactFields": {
                      "description": "Fields on a contact that are custom",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact organization contact custom field ID",
                            "example": "managedCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field",
                            "example": "CVS",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "phoneNumbers": {
                      "items": {
                        "properties": {
                          "displayValue": {
                            "description": "The contact phone number in an easily readable format.",
                            "example": "(222) 555-0000",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's phone number ID",
                            "example": "entityContact_26RRC7PQ6JG00",
                            "format": "string",
                            "type": "string"
                          },
                          "label": {
                            "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                            "example": "Work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                            "example": 12225550000,
                            "format": "string",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "displayValue"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "pronouns": {
                      "description": "The contact's pronouns",
                      "example": "he/him",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a contact tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id",
                    "displayName",
                    "tags",
                    "gender",
                    "category",
                    "created",
                    "phoneNumbers",
                    "emailAddresses",
                    "customFields",
                    "appURL",
                    "apiURL",
                    "hasAccount",
                    "hasPendingInvite",
                    "customContactFields",
                    "organizationContactFields",
                    "canDelete",
                    "canEdit",
                    "integrationLinks",
                    "object",
                    "internalMemberIds"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok response",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update a contact",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{contactId}/conversations": {
      "get": {
        "description": "This operation retrieves the conversations associated with a contact",
        "operationId": "ContactConversations",
        "parameters": [
          {
            "description": "The id of the contact to fetch conversations for",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversations": {
                      "items": {
                        "properties": {
                          "apiURL": {
                            "description": "An absolute URL for fetching this conversation from the API",
                            "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "appURL": {
                            "description": "An absolute URL to view the conversation in the Spruce app",
                            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "archived": {
                            "description": "Whether or not the conversation is archived",
                            "example": false,
                            "type": "boolean"
                          },
                          "assignedToMemberId": {
                            "description": "The id of the teammate the conversation is assigned to",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          },
                          "associatedContactIds": {
                            "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                            "example": [
                              "entity_0D4QABCC06000"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "createdAt": {
                            "description": "The date the conversation was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "externalParticipants": {
                            "description": "The external participants in the conversation.",
                            "items": {
                              "properties": {
                                "contact": {
                                  "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                                  "example": "entity_0D4QABCC06000",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "The display name of the participant",
                                  "example": [
                                    "555-555-5555",
                                    "John Doe",
                                    "patient@example.com"
                                  ],
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                                  "properties": {
                                    "channel": {
                                      "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                      "enum": [
                                        "email",
                                        "phone",
                                        "fax",
                                        "secure"
                                      ],
                                      "type": "string"
                                    },
                                    "displayValue": {
                                      "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                      "example": {
                                        "email": {
                                          "value": "patient@example.com"
                                        },
                                        "phone": {
                                          "value": "(555) 555-5555"
                                        },
                                        "secure": {
                                          "value": "spruce.care/123456"
                                        }
                                      },
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The id of the endpoint",
                                      "example": 15555555555,
                                      "type": "string"
                                    },
                                    "isInternal": {
                                      "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "label": {
                                      "description": "The optional label of the endpoint",
                                      "example": [
                                        "Home",
                                        "Work"
                                      ],
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "String representing the object's type",
                                      "type": "string"
                                    },
                                    "rawValue": {
                                      "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                      "example": {
                                        "email": {
                                          "value": "patient@example.com"
                                        },
                                        "phone": {
                                          "value": 15555555555
                                        },
                                        "secure": {
                                          "value": "https://spruce.care/123456"
                                        }
                                      },
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "channel",
                                    "displayValue",
                                    "rawValue",
                                    "isInternal",
                                    "object"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "displayName"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "Spruce's conversation ID",
                            "example": "t_0E5QDGJC03000",
                            "type": "string"
                          },
                          "internalEndpoint": {
                            "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                            "properties": {
                              "channel": {
                                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                "enum": [
                                  "email",
                                  "phone",
                                  "fax",
                                  "secure"
                                ],
                                "type": "string"
                              },
                              "displayValue": {
                                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": "(555) 555-5555"
                                  },
                                  "secure": {
                                    "value": "spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the endpoint",
                                "example": 15555555555,
                                "type": "string"
                              },
                              "isInternal": {
                                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                "example": false,
                                "type": "boolean"
                              },
                              "label": {
                                "description": "The optional label of the endpoint",
                                "example": [
                                  "Home",
                                  "Work"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "rawValue": {
                                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": 15555555555
                                  },
                                  "secure": {
                                    "value": "https://spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "displayValue",
                              "rawValue",
                              "isInternal",
                              "object"
                            ],
                            "type": "object"
                          },
                          "internalMemberIds": {
                            "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                            "example": [
                              "entity_0D4QABCC06000"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "isReadOnly": {
                            "description": "If the conversation is read-only, messages cannot be sent to it.",
                            "example": false,
                            "type": "boolean"
                          },
                          "lastMessageAt": {
                            "description": "The time of the conversations latest message",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "subtitle": {
                            "description": "The subtitle of the conversation",
                            "example": "Billing",
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's conversation tag ID",
                                  "example": "tag_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "String representing the object's type",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The text value of a conversation tag",
                                  "example": "Smith",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "object"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "title": {
                            "description": "The title of the conversation",
                            "example": "John Doe",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                            "enum": [
                              "email",
                              "phone",
                              "secure",
                              "fax",
                              "team",
                              "note",
                              "other"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "appURL",
                          "apiURL",
                          "archived",
                          "createdAt",
                          "id",
                          "isReadOnly",
                          "tags",
                          "type",
                          "title",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "conversations"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List the conversations associated with a contact",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{contactId}/integrationlinks": {
      "delete": {
        "description": "This operation deletes a specific integration link associated with a contact.",
        "operationId": "DeleteContactIntegrationLink",
        "parameters": [
          {
            "description": "The id of the contact to delete the integration link for.",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of the integration type the existing integration link is for.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "elation",
                "hint",
                "athena",
                "custom"
              ],
              "example": "elation",
              "type": "string"
            }
          },
          {
            "description": "The id of the contact in the external integrated system.",
            "in": "query",
            "name": "externalId",
            "required": false,
            "schema": {
              "description": "The id of a contact in an external system.",
              "example": "elation_140797386655555",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "externalId": {
                    "description": "The id of the contact in the external integrated system.",
                    "example": "elation_140797386655555",
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "elation",
                      "hint",
                      "athena",
                      "custom"
                    ],
                    "example": "elation",
                    "type": "string",
                    "description": "The identifier of the integration type the existing integration link is for."
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ok response",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete an integration link",
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "description": "This operation retrieves the integration links associated with a contact",
        "operationId": "ContactIntegrationLinks",
        "parameters": [
          {
            "description": "The unique identifier of the contact",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "integrationLinks": {
                      "description": "Links between a contact and an integrated external system.",
                      "items": {
                        "properties": {
                          "contactId": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "The id of a contact in an external system.",
                            "example": "elation_140797386655555",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          },
                          "url": {
                            "description": "The url of a contact in an integrated external system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "externalId",
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "integrationLinks"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List the integration links associated with a contact",
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "description": "This operation creates a link between a contact and an external system with which the Spruce account is integrated.",
        "operationId": "CreateContactIntegrationLink",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the contact for which the integration link should be created.",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration type of the existing integration link.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "elation",
                "hint",
                "athena",
                "custom"
              ],
              "example": "elation",
              "type": "string"
            }
          },
          {
            "description": "The id of the contact in the external integrated system.",
            "in": "query",
            "name": "externalId",
            "required": false,
            "schema": {
              "description": "The id of a contact in an external system.",
              "example": "elation_140797386655555",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "externalId": {
                    "description": "The id of the contact in the external integrated system.",
                    "example": "elation_140797386655555",
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "elation",
                      "hint",
                      "athena",
                      "custom"
                    ],
                    "example": "elation",
                    "type": "string",
                    "description": "The integration type of the integration link."
                  },
                  "url": {
                    "description": "The URL to the contact in the external system (only for custom integration links).",
                    "example": "https://example.com/contacts/123",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "integrationLinks": {
                      "description": "Links between a contact and an integrated external system.",
                      "items": {
                        "properties": {
                          "contactId": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "The id of a contact in an external system.",
                            "example": "elation_140797386655555",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "elation",
                              "hint",
                              "athena",
                              "custom"
                            ],
                            "example": "elation",
                            "type": "string"
                          },
                          "url": {
                            "description": "The url of a contact in an integrated external system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "externalId",
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "integrationLinks"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create an integration link",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{contactId}/invite": {
      "post": {
        "description": "This operation sends an invite to a patient contact:\n- If the contact is invited for the first time, a new secure conversation will be created,\n- If the contact is already invited, the invite will be re-sent to the same secure conversation,\n- If the contact is already on Spruce, an error will be returned.\n",
        "operationId": "SendInvite",
        "parameters": [
          {
            "description": "The id of the contact to invite.",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customMessage": {
                    "description": "The message to send to the invitee.",
                    "example": "You've been invited to securely message with our clinic.",
                    "type": "string"
                  },
                  "destinationId": {
                    "description": "The id of the phone number or email to send the invite to.",
                    "example": "entityContact_0D4QABCC06000",
                    "type": "string"
                  },
                  "internalEndpointId": {
                    "description": "Organization's internal secure endpoint that will be used to send the invite.",
                    "example": "organizationCode_2ER39ETHBQ800",
                    "type": "string"
                  }
                },
                "required": [
                  "internalEndpointId",
                  "destinationId"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contact": {
                      "properties": {
                        "apiURL": {
                          "description": "An absolute URL for fetching this contact from the API",
                          "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "appURL": {
                          "description": "An absolute URL to view the contact in the Spruce app",
                          "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "canDelete": {
                          "description": "Whether the contact may be deleted.",
                          "example": true,
                          "type": "boolean"
                        },
                        "canEdit": {
                          "description": "Whether the contact may be edited.",
                          "example": true,
                          "type": "boolean"
                        },
                        "category": {
                          "enum": [
                            "patient",
                            "professional",
                            "clinic",
                            "unknown"
                          ],
                          "example": "patient",
                          "type": "string"
                        },
                        "companyName": {
                          "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                          "example": "Walgreens",
                          "type": "string"
                        },
                        "created": {
                          "description": "The date this contact was added to Spruce",
                          "example": "2021-01-30T08:30:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "customContactFields": {
                          "description": "Fields on a contact that are custom",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's contact contact custom field ID",
                                "example": "entityCustomField_0E5QDGJC03000",
                                "type": "string"
                              },
                              "name": {
                                "description": "A name for the field",
                                "example": "Preferred Pharmacy",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the field",
                                "example": "CVS",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "dateOfBirth": {
                          "description": "The contact's date of birth in the format YYYY-MM-DD.",
                          "example": "2000-01-30",
                          "format": "date",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                          "example": "Joe William Smith",
                          "type": "string"
                        },
                        "emailAddresses": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's phone number ID",
                                "example": "entityContact_26RRC7PQ6JG00",
                                "format": "string",
                                "type": "string"
                              },
                              "label": {
                                "description": "A label for the email address such as 'Work', 'Home', etc.",
                                "example": "Work",
                                "type": "string"
                              },
                              "value": {
                                "example": "contact@example.com",
                                "format": "email",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "familyName": {
                          "description": "The contact's family name (typically last name in US)",
                          "example": "Smith",
                          "type": "string"
                        },
                        "faxNumbers": {
                          "items": {
                            "properties": {
                              "displayValue": {
                                "description": "The contact phone number in an easily readable format.",
                                "example": "(222) 555-0000",
                                "type": "string"
                              },
                              "id": {
                                "description": "Spruce's phone number ID",
                                "example": "entityContact_26RRC7PQ6JG00",
                                "format": "string",
                                "type": "string"
                              },
                              "label": {
                                "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                "example": "Work",
                                "type": "string"
                              },
                              "value": {
                                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                "example": 12225550000,
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "displayValue"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "gender": {
                          "enum": [
                            "unknown",
                            "male",
                            "female",
                            "other"
                          ],
                          "example": "unknown",
                          "type": "string"
                        },
                        "genderDetail": {
                          "description": "Optional free-text details for gender",
                          "example": "Non-binary",
                          "type": "string"
                        },
                        "givenName": {
                          "description": "The contact's given name (typically first name in US)",
                          "example": "Joe",
                          "type": "string"
                        },
                        "hasAccount": {
                          "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                          "example": true,
                          "type": "boolean"
                        },
                        "hasPendingInvite": {
                          "description": "Whether the contact has a pending Spruce account invitation",
                          "example": true,
                          "type": "boolean"
                        },
                        "id": {
                          "description": "Spruce's contact ID",
                          "example": "entity_0E5QDGJC03000",
                          "type": "string"
                        },
                        "integrationLinks": {
                          "description": "Links between a contact and an integrated external system.",
                          "items": {
                            "properties": {
                              "contactId": {
                                "description": "Spruce's contact ID",
                                "example": "entity_0E5QDGJC03000",
                                "type": "string"
                              },
                              "externalId": {
                                "description": "The id of a contact in an external system.",
                                "example": "elation_140797386655555",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "elation",
                                  "hint",
                                  "athena",
                                  "custom"
                                ],
                                "example": "elation",
                                "type": "string"
                              },
                              "url": {
                                "description": "The url of a contact in an integrated external system.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "externalId",
                              "contactId"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "internalMemberIds": {
                          "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "middleName": {
                          "description": "The contact's middle name",
                          "example": "William",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "organizationContactFields": {
                          "description": "Fields on a contact that are custom",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's contact organization contact custom field ID",
                                "example": "managedCustomField_0E5QDGJC03000",
                                "type": "string"
                              },
                              "name": {
                                "description": "A name for the field",
                                "example": "Preferred Pharmacy",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the field",
                                "example": "CVS",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "phoneNumbers": {
                          "items": {
                            "properties": {
                              "displayValue": {
                                "description": "The contact phone number in an easily readable format.",
                                "example": "(222) 555-0000",
                                "type": "string"
                              },
                              "id": {
                                "description": "Spruce's phone number ID",
                                "example": "entityContact_26RRC7PQ6JG00",
                                "format": "string",
                                "type": "string"
                              },
                              "label": {
                                "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                "example": "Work",
                                "type": "string"
                              },
                              "value": {
                                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                "example": 12225550000,
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "displayValue"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "pronouns": {
                          "description": "The contact's pronouns",
                          "example": "he/him",
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's contact tag ID",
                                "example": "tag_0E5QDGJC03000",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "value": {
                                "description": "The text value of a contact tag",
                                "example": "Smith",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "object"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "displayName",
                        "tags",
                        "gender",
                        "category",
                        "created",
                        "phoneNumbers",
                        "emailAddresses",
                        "customFields",
                        "appURL",
                        "apiURL",
                        "hasAccount",
                        "hasPendingInvite",
                        "customContactFields",
                        "organizationContactFields",
                        "canDelete",
                        "canEdit",
                        "integrationLinks",
                        "object",
                        "internalMemberIds"
                      ],
                      "type": "object"
                    },
                    "conversation": {
                      "properties": {
                        "apiURL": {
                          "description": "An absolute URL for fetching this conversation from the API",
                          "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "appURL": {
                          "description": "An absolute URL to view the conversation in the Spruce app",
                          "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "archived": {
                          "description": "Whether or not the conversation is archived",
                          "example": false,
                          "type": "boolean"
                        },
                        "assignedToMemberId": {
                          "description": "The id of the teammate the conversation is assigned to",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "associatedContactIds": {
                          "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "createdAt": {
                          "description": "The date the conversation was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "externalParticipants": {
                          "description": "The external participants in the conversation.",
                          "items": {
                            "properties": {
                              "contact": {
                                "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the participant",
                                "example": [
                                  "555-555-5555",
                                  "John Doe",
                                  "patient@example.com"
                                ],
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                                "properties": {
                                  "channel": {
                                    "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                    "enum": [
                                      "email",
                                      "phone",
                                      "fax",
                                      "secure"
                                    ],
                                    "type": "string"
                                  },
                                  "displayValue": {
                                    "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": "(555) 555-5555"
                                      },
                                      "secure": {
                                        "value": "spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the endpoint",
                                    "example": 15555555555,
                                    "type": "string"
                                  },
                                  "isInternal": {
                                    "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "The optional label of the endpoint",
                                    "example": [
                                      "Home",
                                      "Work"
                                    ],
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "rawValue": {
                                    "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": 15555555555
                                      },
                                      "secure": {
                                        "value": "https://spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "channel",
                                  "displayValue",
                                  "rawValue",
                                  "isInternal",
                                  "object"
                                ],
                                "type": "object"
                              }
                            },
                            "required": [
                              "displayName"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Spruce's conversation ID",
                          "example": "t_0E5QDGJC03000",
                          "type": "string"
                        },
                        "internalEndpoint": {
                          "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                          "properties": {
                            "channel": {
                              "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                              "enum": [
                                "email",
                                "phone",
                                "fax",
                                "secure"
                              ],
                              "type": "string"
                            },
                            "displayValue": {
                              "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": "(555) 555-5555"
                                },
                                "secure": {
                                  "value": "spruce.care/123456"
                                }
                              },
                              "type": "string"
                            },
                            "id": {
                              "description": "The id of the endpoint",
                              "example": 15555555555,
                              "type": "string"
                            },
                            "isInternal": {
                              "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                              "example": false,
                              "type": "boolean"
                            },
                            "label": {
                              "description": "The optional label of the endpoint",
                              "example": [
                                "Home",
                                "Work"
                              ],
                              "type": "string"
                            },
                            "object": {
                              "description": "String representing the object's type",
                              "type": "string"
                            },
                            "rawValue": {
                              "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": 15555555555
                                },
                                "secure": {
                                  "value": "https://spruce.care/123456"
                                }
                              },
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "displayValue",
                            "rawValue",
                            "isInternal",
                            "object"
                          ],
                          "type": "object"
                        },
                        "internalMemberIds": {
                          "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "isReadOnly": {
                          "description": "If the conversation is read-only, messages cannot be sent to it.",
                          "example": false,
                          "type": "boolean"
                        },
                        "lastMessageAt": {
                          "description": "The time of the conversations latest message",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "subtitle": {
                          "description": "The subtitle of the conversation",
                          "example": "Billing",
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's conversation tag ID",
                                "example": "tag_0E5QDGJC03000",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "value": {
                                "description": "The text value of a conversation tag",
                                "example": "Smith",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "object"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "description": "The title of the conversation",
                          "example": "John Doe",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                          "enum": [
                            "email",
                            "phone",
                            "secure",
                            "fax",
                            "team",
                            "note",
                            "other"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "appURL",
                        "apiURL",
                        "archived",
                        "createdAt",
                        "id",
                        "isReadOnly",
                        "tags",
                        "type",
                        "title",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "contact",
                    "conversation"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Invite patient to Spruce",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/fields": {
      "get": {
        "description": "This operation lists all organization contact fields. These fields appear on all contacts in the interface.",
        "operationId": "ContactFields",
        "parameters": [
          {
            "description": "How many tags to return at one time (max 500)",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "fields": {
                      "description": "Field names declared by the organization that can be applied to a contact",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact organization contact custom field ID",
                            "example": "managedCustomField_0E5QDGJC03000",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name for the field",
                            "example": "Preferred Pharmacy",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "totalCount",
                    "fields",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all organization contact fields available to the organization",
        "tags": [
          "Contact Fields"
        ]
      },
      "post": {
        "description": "This operation creates an organization contact field for the given organization. This field will appear on all contacts in the interface. Requesting creation of an already existing field will result in a `201` response and the response will contain the existing field.",
        "operationId": "CreateContactField",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "A name for the field",
                    "example": "Preferred Pharmacy",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Spruce's contact organization contact custom field ID",
                      "example": "managedCustomField_0E5QDGJC03000",
                      "type": "string"
                    },
                    "name": {
                      "description": "A name for the field",
                      "example": "Preferred Pharmacy",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create an organization contact field",
        "tags": [
          "Contact Fields"
        ]
      }
    },
    "/contacts/search": {
      "post": {
        "description": "This operation searches all contacts available to a given organization and returns a resulting set of results.\n\n\nThe `hasMore` field can be used to determine if there are remaining results to list. The `paginationToken` field can be provided on subsequents calls to retrieve the next page of results.\n\n\n## Sort Order\n\nResults are sorted by **entity ID in ascending order** when doing a structured search and by **relevance** for free text search.\n\nWhy is this a `POST`? `GET` requests with a body are not supported by all HTTP libraries. To support complex nested search filters and other tooling, the `POST` body is leveraged.\n",
        "operationId": "SearchContacts",
        "parameters": [
          {
            "description": "How many contacts to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Contact Search json object.",
                "properties": {
                  "freeText": {
                    "type": "string"
                  },
                  "structured": {
                    "properties": {
                      "ageFilter": {
                        "items": {
                          "properties": {
                            "ages": {
                              "items": {
                                "properties": {
                                  "age": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "comparison": {
                                    "enum": [
                                      "equal",
                                      "less_than",
                                      "less_than_or_equal_to",
                                      "greater_than",
                                      "greater_than_or_equal_to"
                                    ],
                                    "example": "equal",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "age",
                                  "comparison"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "ages",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "categoryFilter": {
                        "items": {
                          "properties": {
                            "categories": {
                              "items": {
                                "enum": [
                                  "patient",
                                  "professional",
                                  "clinic",
                                  "unknown"
                                ],
                                "example": "patient",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "categories",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "createdTimeFilter": {
                        "items": {
                          "properties": {
                            "createdTimes": {
                              "items": {
                                "properties": {
                                  "comparison": {
                                    "enum": [
                                      "equal",
                                      "less_than",
                                      "less_than_or_equal_to",
                                      "greater_than",
                                      "greater_than_or_equal_to"
                                    ],
                                    "example": "equal",
                                    "type": "string"
                                  },
                                  "time": {
                                    "description": "The date this contact was added to Spruce",
                                    "example": "2021-01-30T08:30:00Z",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "time",
                                  "comparison"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "createdTimes",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "emailAddressFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "values": {
                              "items": {
                                "example": "contact@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "values",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "faxNumberFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "values": {
                              "items": {
                                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                "example": 12225550000,
                                "format": "string",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "values",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "genderFilter": {
                        "items": {
                          "properties": {
                            "genders": {
                              "items": {
                                "enum": [
                                  "unknown",
                                  "male",
                                  "female",
                                  "other"
                                ],
                                "example": "unknown",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "genders",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "integrationIDFilter": {
                        "items": {
                          "properties": {
                            "integrationIDs": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "integrationLinkType": {
                                    "enum": [
                                      "elation",
                                      "hint",
                                      "athena",
                                      "custom"
                                    ],
                                    "example": "elation",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "integrationLinkType",
                                  "id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "integrationIDs",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "inviteFilter": {
                        "items": {
                          "properties": {
                            "inviteStates": {
                              "items": {
                                "enum": [
                                  "has_account",
                                  "invited",
                                  "not_invited"
                                ],
                                "example": "has_account",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            }
                          },
                          "required": [
                            "inviteStates",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "nameFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "names": {
                              "items": {
                                "properties": {
                                  "familyName": {
                                    "type": "string"
                                  },
                                  "givenName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "names",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "organizationContactFieldFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "organizationContactFields": {
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "organizationContactFields",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "phoneNumberFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "values": {
                              "items": {
                                "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                "example": 12225550000,
                                "format": "string",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "values",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tagFilter": {
                        "items": {
                          "properties": {
                            "match": {
                              "enum": [
                                "all",
                                "any",
                                "none"
                              ],
                              "example": "all",
                              "type": "string"
                            },
                            "tags": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "tags",
                            "match"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contacts": {
                      "items": {
                        "properties": {
                          "apiURL": {
                            "description": "An absolute URL for fetching this contact from the API",
                            "example": "https://api.sprucehealth.com/contact/entity_0E5QDGJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "appURL": {
                            "description": "An absolute URL to view the contact in the Spruce app",
                            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/contact/entity_0E5QDGJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "canDelete": {
                            "description": "Whether the contact may be deleted.",
                            "example": true,
                            "type": "boolean"
                          },
                          "canEdit": {
                            "description": "Whether the contact may be edited.",
                            "example": true,
                            "type": "boolean"
                          },
                          "category": {
                            "enum": [
                              "patient",
                              "professional",
                              "clinic",
                              "unknown"
                            ],
                            "example": "patient",
                            "type": "string"
                          },
                          "companyName": {
                            "description": "The contact's company. This field can also be used to specify the name of a non-patient contact, such as another healthcare facility.",
                            "example": "Walgreens",
                            "type": "string"
                          },
                          "created": {
                            "description": "The date this contact was added to Spruce",
                            "example": "2021-01-30T08:30:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "customContactFields": {
                            "description": "Fields on a contact that are custom",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact contact custom field ID",
                                  "example": "entityCustomField_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A name for the field",
                                  "example": "Preferred Pharmacy",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the field",
                                  "example": "CVS",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "dateOfBirth": {
                            "description": "The contact's date of birth in the format YYYY-MM-DD.",
                            "example": "2000-01-30",
                            "format": "date",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The contact's full name for easy display to a user. This is determined by combining the givenName, middleName, and familyName, or if those are all empty, falling back to companyName, phone number or email address.",
                            "example": "Joe William Smith",
                            "type": "string"
                          },
                          "emailAddresses": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the email address such as 'Work', 'Home', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "example": "contact@example.com",
                                  "format": "email",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "familyName": {
                            "description": "The contact's family name (typically last name in US)",
                            "example": "Smith",
                            "type": "string"
                          },
                          "faxNumbers": {
                            "items": {
                              "properties": {
                                "displayValue": {
                                  "description": "The contact phone number in an easily readable format.",
                                  "example": "(222) 555-0000",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                  "example": 12225550000,
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "displayValue"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "gender": {
                            "enum": [
                              "unknown",
                              "male",
                              "female",
                              "other"
                            ],
                            "example": "unknown",
                            "type": "string"
                          },
                          "genderDetail": {
                            "description": "Optional free-text details for gender",
                            "example": "Non-binary",
                            "type": "string"
                          },
                          "givenName": {
                            "description": "The contact's given name (typically first name in US)",
                            "example": "Joe",
                            "type": "string"
                          },
                          "hasAccount": {
                            "description": "Whether the contact has created a Spruce account for secure messaging, video calling, etc.",
                            "example": true,
                            "type": "boolean"
                          },
                          "hasPendingInvite": {
                            "description": "Whether the contact has a pending Spruce account invitation",
                            "example": true,
                            "type": "boolean"
                          },
                          "id": {
                            "description": "Spruce's contact ID",
                            "example": "entity_0E5QDGJC03000",
                            "type": "string"
                          },
                          "integrationLinks": {
                            "description": "Links between a contact and an integrated external system.",
                            "items": {
                              "properties": {
                                "contactId": {
                                  "description": "Spruce's contact ID",
                                  "example": "entity_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "externalId": {
                                  "description": "The id of a contact in an external system.",
                                  "example": "elation_140797386655555",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "elation",
                                    "hint",
                                    "athena",
                                    "custom"
                                  ],
                                  "example": "elation",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The url of a contact in an integrated external system.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "externalId",
                                "contactId"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "internalMemberIds": {
                            "description": "The ids of the teammates, teams and/or your organization that are members of the contact. Contact Membership must be enabled for the organization for this field to be interacted with.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "middleName": {
                            "description": "The contact's middle name",
                            "example": "William",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "organizationContactFields": {
                            "description": "Fields on a contact that are custom",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact organization contact custom field ID",
                                  "example": "managedCustomField_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A name for the field",
                                  "example": "Preferred Pharmacy",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the field",
                                  "example": "CVS",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "phoneNumbers": {
                            "items": {
                              "properties": {
                                "displayValue": {
                                  "description": "The contact phone number in an easily readable format.",
                                  "example": "(222) 555-0000",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Spruce's phone number ID",
                                  "example": "entityContact_26RRC7PQ6JG00",
                                  "format": "string",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "A label for the phone number such as 'Work', 'Home', 'Cell', etc.",
                                  "example": "Work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The contact phone number. An acceptable phone number is in the format 2065551234, +12065551234, (206) 555-1234, or 206-555-1234.",
                                  "example": 12225550000,
                                  "format": "string",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "displayValue"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "pronouns": {
                            "description": "The contact's pronouns",
                            "example": "he/him",
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's contact tag ID",
                                  "example": "tag_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "String representing the object's type",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The text value of a contact tag",
                                  "example": "Smith",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "object"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "id",
                          "displayName",
                          "tags",
                          "gender",
                          "category",
                          "created",
                          "phoneNumbers",
                          "emailAddresses",
                          "customFields",
                          "appURL",
                          "apiURL",
                          "hasAccount",
                          "hasPendingInvite",
                          "customContactFields",
                          "organizationContactFields",
                          "canDelete",
                          "canEdit",
                          "integrationLinks",
                          "object",
                          "internalMemberIds"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    },
                    "totalCountRelation": {
                      "description": "The relation to use when comparing the total number of available search to the value specified in the results count field.\nA value of `gte` means that the count is a lower bound of the total results that match the query and a value of `eq` indicates that the count is accurate.",
                      "enum": [
                        "eq",
                        "gte"
                      ],
                      "example": "equal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "totalCount",
                    "totalCountRelation",
                    "contacts",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A paged array of contacts",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Search contacts",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/tags": {
      "get": {
        "description": "This operation lists all contact tags available to a given organization.\n\nThe `hasMore` field can be used to determine if there are remaining results to list. The `paginationToken` field can be provided on subsequents calls to retrieve the next page of results.\n",
        "operationId": "ContactTags",
        "parameters": [
          {
            "description": "How many tags to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's contact tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a contact tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "totalCount",
                    "tags",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all contact tags available to the organization",
        "tags": [
          "Contact Tags"
        ]
      },
      "post": {
        "description": "This operation creates a contact tag for the given organization. This tag can then be applied to contacts in subsequent operations. Requesting creation of an already existing tag will result in a `201` response and the response will contain the existing tag.",
        "operationId": "CreateContactTag",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "description": "The text value of a contact tag",
                    "example": "Smith",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Spruce's contact tag ID",
                      "example": "tag_0E5QDGJC03000",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "value": {
                      "description": "The text value of a contact tag",
                      "example": "Smith",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "object"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a contact tag",
        "tags": [
          "Contact Tags"
        ]
      }
    },
    "/conversationItems/{conversationItemId}": {
      "delete": {
        "description": "Deletes a specific conversation item by ID. This operation follows the same business rules as the in-app delete mechanism, including permission checks and content restrictions.\n\n**Soft Delete Behavior**: The API performs a soft delete, creating a placeholder that can be restored by users with appropriate access. The conversation item will be marked as deleted but not permanently removed from the system.\n\n**Permission Requirements**: You can only delete conversation items in conversations owned by your organization. The deletion must comply with the same restrictions as the Spruce app (e.g., certain system messages cannot be deleted).\n\n**Asynchronous Processing**: The deletion is processed asynchronously. The API immediately returns a `requestId` that can be used to correlate this deletion request with webhook events when the deletion is actually completed.\n",
        "operationId": "DeleteConversationItem",
        "parameters": [
          {
            "description": "The id of the conversation item to delete",
            "in": "path",
            "name": "conversationItemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "description": "The id of an asynchronous request",
                      "example": "asyncRequest_0D4QABCC06000",
                      "type": "string"
                    }
                  },
                  "required": [
                    "requestId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "forbidden - user does not have permission to delete this conversation item"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a conversation item",
        "tags": [
          "Conversation Item"
        ]
      },
      "get": {
        "description": "This operation fetches a specific conversation item for the provided id.",
        "operationId": "ConversationItem",
        "parameters": [
          {
            "description": "The id of the conversation to post to",
            "in": "path",
            "name": "conversationItemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversationItem": {
                      "properties": {
                        "apiURL": {
                          "description": "An absolute URL for fetching this conversation item from the API",
                          "example": "https://api.sprucehealth.com/conversationItems/ti_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "appURL": {
                          "description": "An absolute URL to view the conversation item in the Spruce app.",
                          "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000/message/ti_23170B3D36G00",
                          "format": "url",
                          "type": "string"
                        },
                        "attachments": {
                          "description": "Attachments for the conversation item.",
                          "items": {
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "mimetype": {
                                        "description": "The mimetype of the audio attachment.",
                                        "example": "audio/mpeg",
                                        "type": "string"
                                      },
                                      "signedUrl": {
                                        "description": "The URL used to fetch the audio attachment.",
                                        "properties": {
                                          "expiresAt": {
                                            "description": "The date the signed URL expires.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The signed URL.",
                                            "format": "url",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url",
                                          "expiresAt"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "mimetype",
                                      "signedUrl"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "mimetype": {
                                        "description": "The mimetype of the document attachment.",
                                        "example": "application/pdf",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name associated with the attached document.",
                                        "type": "string"
                                      },
                                      "signedUrl": {
                                        "description": "The URL used to fetch the document attachment.",
                                        "properties": {
                                          "expiresAt": {
                                            "description": "The date the signed URL expires.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The signed URL.",
                                            "format": "url",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url",
                                          "expiresAt"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "mimetype",
                                      "signedUrl"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "title": {
                                        "description": "The title associated with the attached entity profile.",
                                        "example": "John Smith",
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "The URL of the entity profile.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "url"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "mimetype": {
                                        "description": "The mimetype of the image attachment.",
                                        "example": "image/png",
                                        "type": "string"
                                      },
                                      "signedUrl": {
                                        "description": "The URL used to fetch the image attachment.",
                                        "properties": {
                                          "expiresAt": {
                                            "description": "The date the signed URL expires.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The signed URL.",
                                            "format": "url",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url",
                                          "expiresAt"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "mimetype",
                                      "signedUrl"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "mimetype": {
                                        "description": "The mimetype of the video attachment.",
                                        "example": "video/mp4",
                                        "type": "string"
                                      },
                                      "signedUrl": {
                                        "description": "The URL used to fetch the video attachment.",
                                        "properties": {
                                          "expiresAt": {
                                            "description": "The date the signed URL expires.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The signed URL.",
                                            "format": "url",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url",
                                          "expiresAt"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "mimetype",
                                      "signedUrl"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              },
                              "title": {
                                "description": "The title of the attachment.",
                                "example": "example.pdf",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the attachment.",
                                "enum": [
                                  "audio",
                                  "carePlan",
                                  "document",
                                  "entityProfile",
                                  "genericUrl",
                                  "image",
                                  "paymentRequest",
                                  "video",
                                  "visit"
                                ]
                              }
                            },
                            "required": [
                              "title",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "author": {
                          "description": "The author of the conversation item.",
                          "properties": {
                            "deviceInformation": {
                              "properties": {
                                "accessID": {
                                  "description": "The access ID of API credentials used to make the request.",
                                  "type": "string"
                                },
                                "appVersion": {
                                  "description": "The version of the app.",
                                  "type": "string"
                                },
                                "device": {
                                  "description": "The type of the device.",
                                  "type": "string"
                                },
                                "deviceId": {
                                  "description": "The id of the device.",
                                  "type": "string"
                                },
                                "deviceModel": {
                                  "description": "The model of the device.",
                                  "type": "string"
                                },
                                "platform": {
                                  "description": "The platform of the device.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "displayName"
                          ],
                          "type": "object"
                        },
                        "buttons": {
                          "description": "The buttons associated with the conversation item.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The id of the button.",
                                "type": "string"
                              },
                              "state": {
                                "description": "The state of the button.",
                                "enum": [
                                  "disabled",
                                  "normal",
                                  "selected"
                                ],
                                "type": "string"
                              },
                              "text": {
                                "description": "The text of the button.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "text",
                              "state"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "canDelete": {
                          "description": "If the conversation item can be deleted.",
                          "example": true,
                          "type": "boolean"
                        },
                        "conversationId": {
                          "description": "Spruce's conversation ID",
                          "example": "t_0E5QDGJC03000",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "The date time the conversation item was created.",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "direction": {
                          "description": "The direction of the item relative to this organization. Possible values are `inbound`, `outbound` and `none`. `inbound` indicates a message received by the organization, `outbound` indicates a message sent to an external contact by a teammate in the organization. `none` indicates a message that is likely internal to the organization or one for which the direction cannot be determined.",
                          "enum": [
                            "inbound",
                            "outbound",
                            "none"
                          ]
                        },
                        "event": {
                          "description": "Any event data associate with the conversation item.",
                          "properties": {
                            "data": {
                              "anyOf": [
                                {
                                  "properties": {
                                    "answered": {
                                      "description": "If the call was answered.",
                                      "type": "boolean"
                                    },
                                    "answeredBy": {
                                      "description": "If an inbound call was answered, which desk phone or external phone number answered it.",
                                      "properties": {
                                        "externalNumber": {
                                          "description": "the telephone number external to Spruce this call was answered by",
                                          "type": "string"
                                        },
                                        "lineId": {
                                          "description": "the ID of the phone line on the Spruce system this call was answered by",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "duration": {
                                      "description": "The duration of the call in seconds.",
                                      "type": "integer"
                                    },
                                    "failed": {
                                      "description": "If the call failed.",
                                      "type": "boolean"
                                    },
                                    "initiatedBy": {
                                      "description": "For outbound calls, which desk phone or teammate initiated it.",
                                      "properties": {
                                        "lineId": {
                                          "description": "the ID of the phone line on the Spruce system this call was initiated by",
                                          "type": "string"
                                        },
                                        "teammateID": {
                                          "description": "The id of the teammate",
                                          "example": "entity_0E5QDGJC03000",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "recordings": {
                                      "description": "The recordings of the call if any exist.",
                                      "items": {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the audio attachment.",
                                            "example": "audio/mpeg",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the audio attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "spam": {
                                      "description": "If the call was marked as spam.",
                                      "type": "boolean"
                                    },
                                    "voicemail": {
                                      "properties": {
                                        "mimetype": {
                                          "description": "The mimetype of the audio attachment.",
                                          "example": "audio/mpeg",
                                          "type": "string"
                                        },
                                        "signedUrl": {
                                          "description": "The URL used to fetch the audio attachment.",
                                          "properties": {
                                            "expiresAt": {
                                              "description": "The date the signed URL expires.",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The signed URL.",
                                              "format": "url",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url",
                                            "expiresAt"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "mimetype",
                                        "signedUrl"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "answered",
                                    "duration",
                                    "failed",
                                    "inbound",
                                    "spam"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "answered": {
                                      "description": "If the call was answered.",
                                      "type": "boolean"
                                    },
                                    "duration": {
                                      "description": "The duration of the call in seconds.",
                                      "type": "integer"
                                    },
                                    "initiatedBy": {
                                      "description": "The Spruce is of the teammate that initiated it..",
                                      "example": "entity_0E5QDGJC03000",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "answered",
                                    "duration",
                                    "initiatedBy"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "type": {
                              "description": "The type of the event. Additional events will be added in the future, so any parsing of this field should gracefully handle unexpected values.",
                              "enum": [
                                "inboundCall",
                                "inboundVideoCall",
                                "outboundCall",
                                "outboundVideoCall"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "description": "The id of a conversation item.",
                          "example": "ti_0D4QABCC06000",
                          "type": "string"
                        },
                        "isInternalNote": {
                          "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
                          "example": false,
                          "type": "boolean"
                        },
                        "modifiedAt": {
                          "description": "The date time the conversation item was last modified.",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "pages": {
                          "description": "The pages associated with the conversation item.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The id of the page.",
                                "type": "string"
                              },
                              "memberId": {
                                "description": "The id of the teammate being paged.",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "resolved": {
                                "description": "If the page has been resolved.",
                                "type": "boolean"
                              },
                              "resolvedAt": {
                                "description": "The date time the page was resolved at.",
                                "example": "2020-04-01T00:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "resolvedByMemberId": {
                                "description": "The id of the teammate that resolved the page.",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "memberId",
                              "resolved"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "requestId": {
                          "description": "The id of an asynchronous request",
                          "example": "asyncRequest_0D4QABCC06000",
                          "type": "string"
                        },
                        "text": {
                          "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                          "example": "Can you look at this @Dr. Smith?",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "conversationId",
                        "attachments",
                        "author",
                        "direction",
                        "isInternalNote",
                        "appURL",
                        "apiURL",
                        "text",
                        "pages",
                        "buttons",
                        "modifiedAt",
                        "createdAt",
                        "object",
                        "requestId",
                        "canDelete"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "conversationItem"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a conversation item for a given id",
        "tags": [
          "Conversation Item"
        ]
      }
    },
    "/conversations": {
      "get": {
        "description": "This operation lists all conversations available to the organization. This is an eventually consistent view and may take a short time before new conversations appear in results.\n\n\nTo iterate through all conversations in the organization, list the first page of conversations (without specifying `paginationToken` or `startFrom`). If `hasMore=true`, the provide the `paginationToken` to the API to list subsequent pages of conversations until `hasMore=false`.\n\n\n## Detecting conversations with new messages\n\nNote that the conversations are ordered by created date by default. You can also order them by the time of last activity in the conversation by specifying `orderBy=last_message`. This is particularly helpful when trying to determine conversations with new activity in them. In this particular case, you can query the list of conversations with `orderBy=last_message` and capture the `lastMessageAt` time for the last conversation in the list. On the next query, you can then `startFrom=<lastMessageAt time you saved>` and `orderBy=last_message` to return any conversations with new activity since your last query.\n\n\nWhile you can determine the conversations with new activity, it is also important to know if the latest messages in each conversation were from your teammates or from an external contact (like a patient). To determine this, you can use the [listing of conversation items API](/reference/conversationitems) to query for the latest items since a particular time with the `startFrom` field. If any message in the list returned has `direction=inbound` then it indicates a message received since the last query for message items.\n",
        "operationId": "ListConversations",
        "parameters": [
          {
            "description": "How many conversations to return at one time (max 200)",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "After fetching a set of conversations, use the returned `paginationToken` to fetch the next page of conversations. Only one of `startFrom` or `paginationToken` can be provided.\n",
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          },
          {
            "description": "Determines the order of the results. When optionally combined with `startFrom`, you can get conversationswhere the time that you're ordering by is greater than or equal to the specified start from date. For example, `\"orderBy\": \"last_message\"` and `\"startFrom\": \"2025-01-01T00:00:00.000Z\"` will return conversations with a last message time greater than or equal to January 1, 2025 midnight UTC (useful for fetching delta updates from the last time you fetched).\n",
            "in": "query",
            "name": "orderBy",
            "required": true,
            "schema": {
              "description": "The order of the conversations returned",
              "enum": [
                "created",
                "last_message"
              ],
              "example": "created",
              "type": "string"
            }
          },
          {
            "description": "Only return conversations whose ordering field value is greater than or equal to this timestamp.\n**Format** — RFC 3339 “date-time” (`YYYY-MM-DDTHH:mm:ss.SSS±hh:mm`). Use **Z** for UTC or an explicit offset such as **-07:00**.\n- When `orderBy=created`, you will receive conversations created greater than or equal to the provided startFrom time.\n- When `orderBy=last_message`, you will receive conversations with a last message time greater than or equal to the provided startFrom time.\n- Only one of `startFrom` or `paginationToken` can be provided.\n",
            "examples": {
              "laPDT": {
                "summary": "Same instant in Los Angeles (PDT)",
                "value": "2020-03-31T17:00:00-07:00"
              },
              "utcMidnight": {
                "summary": "UTC start of 1 Apr 2020",
                "value": "2020-04-01T00:00:00Z"
              }
            },
            "in": "query",
            "name": "startFrom",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversations": {
                      "items": {
                        "properties": {
                          "apiURL": {
                            "description": "An absolute URL for fetching this conversation from the API",
                            "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "appURL": {
                            "description": "An absolute URL to view the conversation in the Spruce app",
                            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "archived": {
                            "description": "Whether or not the conversation is archived",
                            "example": false,
                            "type": "boolean"
                          },
                          "assignedToMemberId": {
                            "description": "The id of the teammate the conversation is assigned to",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          },
                          "associatedContactIds": {
                            "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                            "example": [
                              "entity_0D4QABCC06000"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "createdAt": {
                            "description": "The date the conversation was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "externalParticipants": {
                            "description": "The external participants in the conversation.",
                            "items": {
                              "properties": {
                                "contact": {
                                  "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                                  "example": "entity_0D4QABCC06000",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "The display name of the participant",
                                  "example": [
                                    "555-555-5555",
                                    "John Doe",
                                    "patient@example.com"
                                  ],
                                  "type": "string"
                                },
                                "endpoint": {
                                  "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                                  "properties": {
                                    "channel": {
                                      "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                      "enum": [
                                        "email",
                                        "phone",
                                        "fax",
                                        "secure"
                                      ],
                                      "type": "string"
                                    },
                                    "displayValue": {
                                      "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                      "example": {
                                        "email": {
                                          "value": "patient@example.com"
                                        },
                                        "phone": {
                                          "value": "(555) 555-5555"
                                        },
                                        "secure": {
                                          "value": "spruce.care/123456"
                                        }
                                      },
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The id of the endpoint",
                                      "example": 15555555555,
                                      "type": "string"
                                    },
                                    "isInternal": {
                                      "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "label": {
                                      "description": "The optional label of the endpoint",
                                      "example": [
                                        "Home",
                                        "Work"
                                      ],
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "String representing the object's type",
                                      "type": "string"
                                    },
                                    "rawValue": {
                                      "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                      "example": {
                                        "email": {
                                          "value": "patient@example.com"
                                        },
                                        "phone": {
                                          "value": 15555555555
                                        },
                                        "secure": {
                                          "value": "https://spruce.care/123456"
                                        }
                                      },
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "channel",
                                    "displayValue",
                                    "rawValue",
                                    "isInternal",
                                    "object"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "displayName"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "Spruce's conversation ID",
                            "example": "t_0E5QDGJC03000",
                            "type": "string"
                          },
                          "internalEndpoint": {
                            "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                            "properties": {
                              "channel": {
                                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                "enum": [
                                  "email",
                                  "phone",
                                  "fax",
                                  "secure"
                                ],
                                "type": "string"
                              },
                              "displayValue": {
                                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": "(555) 555-5555"
                                  },
                                  "secure": {
                                    "value": "spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the endpoint",
                                "example": 15555555555,
                                "type": "string"
                              },
                              "isInternal": {
                                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                "example": false,
                                "type": "boolean"
                              },
                              "label": {
                                "description": "The optional label of the endpoint",
                                "example": [
                                  "Home",
                                  "Work"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "rawValue": {
                                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": 15555555555
                                  },
                                  "secure": {
                                    "value": "https://spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "displayValue",
                              "rawValue",
                              "isInternal",
                              "object"
                            ],
                            "type": "object"
                          },
                          "internalMemberIds": {
                            "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                            "example": [
                              "entity_0D4QABCC06000"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "isReadOnly": {
                            "description": "If the conversation is read-only, messages cannot be sent to it.",
                            "example": false,
                            "type": "boolean"
                          },
                          "lastMessageAt": {
                            "description": "The time of the conversations latest message",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "subtitle": {
                            "description": "The subtitle of the conversation",
                            "example": "Billing",
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Spruce's conversation tag ID",
                                  "example": "tag_0E5QDGJC03000",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "String representing the object's type",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The text value of a conversation tag",
                                  "example": "Smith",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value",
                                "object"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "title": {
                            "description": "The title of the conversation",
                            "example": "John Doe",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                            "enum": [
                              "email",
                              "phone",
                              "secure",
                              "fax",
                              "team",
                              "note",
                              "other"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "appURL",
                          "apiURL",
                          "archived",
                          "createdAt",
                          "id",
                          "isReadOnly",
                          "tags",
                          "type",
                          "title",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer",
                      "description": "Total count represents the total number of conversations available. This is a best effort calculation at the time of the initial query. This count will not be recalculated more than once every 60 seconds while iterating a set of results."
                    }
                  },
                  "required": [
                    "totalCount",
                    "conversations",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List and filter all conversations available to the organization",
        "tags": [
          "Conversations"
        ]
      },
      "post": {
        "description": "This operation creates a new conversation within an organization.\n\n**Note:** Only secure conversation types can be created through this API endpoint.\n\nA new conversation can be started with a single contact or a group of contacts. All contacts must be patients and either have a Spruce account or a pending secure invite.\n\n### Asynchronous Message Processing\n\nIf a message is included in the conversation creation request, the message will be posted asynchronously after the conversation is created. The API will immediately return the conversation details along with a `postMessageRequestId` that can be used to track when the message is actually sent.\n\nThe `postMessageRequestId` returned in the response can be matched against the `requestID` field of the `conversationItem.created` webhook event to identify when the message has been successfully posted to the conversation.\n",
        "operationId": "CreateConversation",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Conversation json object. The internal secure endpoint and destinations are required.",
                "properties": {
                  "secure": {
                    "properties": {
                      "destinationContactIds": {
                        "description": "The ids of the destination contacts.",
                        "example": [
                          "entity_0D4QABCC06000"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "internalEndpointId": {
                        "description": "Organization's internal endpoint ID that will be used as the internal endpoint for the conversation.",
                        "example": "organizationCode_2ER39ETHBQ800",
                        "type": "string"
                      },
                      "message": {
                        "properties": {
                          "attachments": {
                            "items": {
                              "properties": {
                                "attachmentId": {
                                  "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                                  "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The title of the attachment",
                                  "example": "My Image",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "attachmentId",
                                "title"
                              ],
                              "type": "object"
                            },
                            "maxItems": 5,
                            "type": "array"
                          },
                          "author": {
                            "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          },
                          "body": {
                            "items": {
                              "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                              "properties": {
                                "type": {
                                  "enum": [
                                    "text",
                                    "page"
                                  ],
                                  "example": "text",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the message body element",
                                  "example": "Hello, how are you?",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "internal": {
                            "description": "Whether the message is internal or not",
                            "example": false,
                            "type": "boolean"
                          },
                          "stayArchived": {
                            "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
                            "example": false,
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "body"
                        ],
                        "type": "object"
                      },
                      "subject": {
                        "description": "The conversation's subject.",
                        "example": "Annual Physical Exam",
                        "type": "string"
                      }
                    },
                    "required": [
                      "destinationContactIds",
                      "internalEndpointId"
                    ],
                    "type": "object"
                  },
                  "type": {
                    "description": "The type of conversation to create.",
                    "enum": [
                      "secure"
                    ],
                    "example": "secure",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversation": {
                      "properties": {
                        "apiURL": {
                          "description": "An absolute URL for fetching this conversation from the API",
                          "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "appURL": {
                          "description": "An absolute URL to view the conversation in the Spruce app",
                          "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "archived": {
                          "description": "Whether or not the conversation is archived",
                          "example": false,
                          "type": "boolean"
                        },
                        "assignedToMemberId": {
                          "description": "The id of the teammate the conversation is assigned to",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "associatedContactIds": {
                          "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "createdAt": {
                          "description": "The date the conversation was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "externalParticipants": {
                          "description": "The external participants in the conversation.",
                          "items": {
                            "properties": {
                              "contact": {
                                "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the participant",
                                "example": [
                                  "555-555-5555",
                                  "John Doe",
                                  "patient@example.com"
                                ],
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                                "properties": {
                                  "channel": {
                                    "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                    "enum": [
                                      "email",
                                      "phone",
                                      "fax",
                                      "secure"
                                    ],
                                    "type": "string"
                                  },
                                  "displayValue": {
                                    "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": "(555) 555-5555"
                                      },
                                      "secure": {
                                        "value": "spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the endpoint",
                                    "example": 15555555555,
                                    "type": "string"
                                  },
                                  "isInternal": {
                                    "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "The optional label of the endpoint",
                                    "example": [
                                      "Home",
                                      "Work"
                                    ],
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "rawValue": {
                                    "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": 15555555555
                                      },
                                      "secure": {
                                        "value": "https://spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "channel",
                                  "displayValue",
                                  "rawValue",
                                  "isInternal",
                                  "object"
                                ],
                                "type": "object"
                              }
                            },
                            "required": [
                              "displayName"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Spruce's conversation ID",
                          "example": "t_0E5QDGJC03000",
                          "type": "string"
                        },
                        "internalEndpoint": {
                          "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                          "properties": {
                            "channel": {
                              "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                              "enum": [
                                "email",
                                "phone",
                                "fax",
                                "secure"
                              ],
                              "type": "string"
                            },
                            "displayValue": {
                              "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": "(555) 555-5555"
                                },
                                "secure": {
                                  "value": "spruce.care/123456"
                                }
                              },
                              "type": "string"
                            },
                            "id": {
                              "description": "The id of the endpoint",
                              "example": 15555555555,
                              "type": "string"
                            },
                            "isInternal": {
                              "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                              "example": false,
                              "type": "boolean"
                            },
                            "label": {
                              "description": "The optional label of the endpoint",
                              "example": [
                                "Home",
                                "Work"
                              ],
                              "type": "string"
                            },
                            "object": {
                              "description": "String representing the object's type",
                              "type": "string"
                            },
                            "rawValue": {
                              "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": 15555555555
                                },
                                "secure": {
                                  "value": "https://spruce.care/123456"
                                }
                              },
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "displayValue",
                            "rawValue",
                            "isInternal",
                            "object"
                          ],
                          "type": "object"
                        },
                        "internalMemberIds": {
                          "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "isReadOnly": {
                          "description": "If the conversation is read-only, messages cannot be sent to it.",
                          "example": false,
                          "type": "boolean"
                        },
                        "lastMessageAt": {
                          "description": "The time of the conversations latest message",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "subtitle": {
                          "description": "The subtitle of the conversation",
                          "example": "Billing",
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's conversation tag ID",
                                "example": "tag_0E5QDGJC03000",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "value": {
                                "description": "The text value of a conversation tag",
                                "example": "Smith",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "object"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "description": "The title of the conversation",
                          "example": "John Doe",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                          "enum": [
                            "email",
                            "phone",
                            "secure",
                            "fax",
                            "team",
                            "note",
                            "other"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "appURL",
                        "apiURL",
                        "archived",
                        "createdAt",
                        "id",
                        "isReadOnly",
                        "tags",
                        "type",
                        "title",
                        "object"
                      ],
                      "type": "object"
                    },
                    "postMessageRequestId": {
                      "description": "The id of an asynchronous request",
                      "example": "asyncRequest_0D4QABCC06000",
                      "type": "string"
                    }
                  },
                  "required": [
                    "conversation"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a new conversation",
        "tags": [
          "Conversations"
        ]
      }
    },
    "/conversations/{conversationId}": {
      "get": {
        "description": "This operation fetches a specific conversation for the provided id.",
        "operationId": "Conversation",
        "parameters": [
          {
            "description": "The id of the conversation to post to",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversation": {
                      "properties": {
                        "apiURL": {
                          "description": "An absolute URL for fetching this conversation from the API",
                          "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "appURL": {
                          "description": "An absolute URL to view the conversation in the Spruce app",
                          "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                          "format": "url",
                          "type": "string"
                        },
                        "archived": {
                          "description": "Whether or not the conversation is archived",
                          "example": false,
                          "type": "boolean"
                        },
                        "assignedToMemberId": {
                          "description": "The id of the teammate the conversation is assigned to",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "associatedContactIds": {
                          "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "createdAt": {
                          "description": "The date the conversation was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "externalParticipants": {
                          "description": "The external participants in the conversation.",
                          "items": {
                            "properties": {
                              "contact": {
                                "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the participant",
                                "example": [
                                  "555-555-5555",
                                  "John Doe",
                                  "patient@example.com"
                                ],
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                                "properties": {
                                  "channel": {
                                    "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                    "enum": [
                                      "email",
                                      "phone",
                                      "fax",
                                      "secure"
                                    ],
                                    "type": "string"
                                  },
                                  "displayValue": {
                                    "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": "(555) 555-5555"
                                      },
                                      "secure": {
                                        "value": "spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the endpoint",
                                    "example": 15555555555,
                                    "type": "string"
                                  },
                                  "isInternal": {
                                    "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "The optional label of the endpoint",
                                    "example": [
                                      "Home",
                                      "Work"
                                    ],
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "rawValue": {
                                    "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                    "example": {
                                      "email": {
                                        "value": "patient@example.com"
                                      },
                                      "phone": {
                                        "value": 15555555555
                                      },
                                      "secure": {
                                        "value": "https://spruce.care/123456"
                                      }
                                    },
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "channel",
                                  "displayValue",
                                  "rawValue",
                                  "isInternal",
                                  "object"
                                ],
                                "type": "object"
                              }
                            },
                            "required": [
                              "displayName"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Spruce's conversation ID",
                          "example": "t_0E5QDGJC03000",
                          "type": "string"
                        },
                        "internalEndpoint": {
                          "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                          "properties": {
                            "channel": {
                              "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                              "enum": [
                                "email",
                                "phone",
                                "fax",
                                "secure"
                              ],
                              "type": "string"
                            },
                            "displayValue": {
                              "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": "(555) 555-5555"
                                },
                                "secure": {
                                  "value": "spruce.care/123456"
                                }
                              },
                              "type": "string"
                            },
                            "id": {
                              "description": "The id of the endpoint",
                              "example": 15555555555,
                              "type": "string"
                            },
                            "isInternal": {
                              "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                              "example": false,
                              "type": "boolean"
                            },
                            "label": {
                              "description": "The optional label of the endpoint",
                              "example": [
                                "Home",
                                "Work"
                              ],
                              "type": "string"
                            },
                            "object": {
                              "description": "String representing the object's type",
                              "type": "string"
                            },
                            "rawValue": {
                              "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                              "example": {
                                "email": {
                                  "value": "patient@example.com"
                                },
                                "phone": {
                                  "value": 15555555555
                                },
                                "secure": {
                                  "value": "https://spruce.care/123456"
                                }
                              },
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "displayValue",
                            "rawValue",
                            "isInternal",
                            "object"
                          ],
                          "type": "object"
                        },
                        "internalMemberIds": {
                          "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                          "example": [
                            "entity_0D4QABCC06000"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "isReadOnly": {
                          "description": "If the conversation is read-only, messages cannot be sent to it.",
                          "example": false,
                          "type": "boolean"
                        },
                        "lastMessageAt": {
                          "description": "The time of the conversations latest message",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "subtitle": {
                          "description": "The subtitle of the conversation",
                          "example": "Billing",
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Spruce's conversation tag ID",
                                "example": "tag_0E5QDGJC03000",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "value": {
                                "description": "The text value of a conversation tag",
                                "example": "Smith",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "object"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "description": "The title of the conversation",
                          "example": "John Doe",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                          "enum": [
                            "email",
                            "phone",
                            "secure",
                            "fax",
                            "team",
                            "note",
                            "other"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "appURL",
                        "apiURL",
                        "archived",
                        "createdAt",
                        "id",
                        "isReadOnly",
                        "tags",
                        "type",
                        "title",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "conversation"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a conversation for a given id",
        "tags": [
          "Conversations"
        ]
      },
      "patch": {
        "description": "This operation updates a specific conversation by id.\n\nFields provided in the input object will be updated, omitted fields *(null)* will be unchanged.",
        "operationId": "UpdateConversation",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the conversation to update",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Conversation json object. Omitted fields are not updated.",
                "properties": {
                  "archived": {
                    "description": "Whether the conversation should be archived (true) or unarchived (false)",
                    "type": "boolean"
                  },
                  "assignToMemberId": {
                    "description": "The id of a team or teammate to assign the conversation to. If the specified teammate or team is not a member of the conversation, they will be added as a member.",
                    "example": "entity_0D4QABCC06000",
                    "type": "string"
                  },
                  "tagIds": {
                    "description": "An array of Spruce conversation tag ids",
                    "items": {
                      "description": "Spruce's conversation tag ID",
                      "example": "tag_0E5QDGJC03000",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "apiURL": {
                      "description": "An absolute URL for fetching this conversation from the API",
                      "example": "https://api.sprucehealth.com/conversations/t_0E5QDJJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "appURL": {
                      "description": "An absolute URL to view the conversation in the Spruce app",
                      "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000",
                      "format": "url",
                      "type": "string"
                    },
                    "archived": {
                      "description": "Whether or not the conversation is archived",
                      "example": false,
                      "type": "boolean"
                    },
                    "assignedToMemberId": {
                      "description": "The id of the teammate the conversation is assigned to",
                      "example": "entity_0D4QABCC06000",
                      "type": "string"
                    },
                    "associatedContactIds": {
                      "description": "The ids of the contacts associated with the conversation. This may include contacts that are not a part of the conversation. For example, the conversation may be with parents, but associated with a contact representing their child.",
                      "example": [
                        "entity_0D4QABCC06000"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "description": "The date the conversation was created",
                      "example": "2020-04-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "externalParticipants": {
                      "description": "The external participants in the conversation.",
                      "items": {
                        "properties": {
                          "contact": {
                            "description": "The id of the contact associated with the participant. This will be omitted if the participant is not a saved contact.",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the participant",
                            "example": [
                              "555-555-5555",
                              "John Doe",
                              "patient@example.com"
                            ],
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "The endpoint of the participant, such as their phone number or email address. For secure conversations, there will not be an endpoint.",
                            "properties": {
                              "channel": {
                                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                "enum": [
                                  "email",
                                  "phone",
                                  "fax",
                                  "secure"
                                ],
                                "type": "string"
                              },
                              "displayValue": {
                                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": "(555) 555-5555"
                                  },
                                  "secure": {
                                    "value": "spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the endpoint",
                                "example": 15555555555,
                                "type": "string"
                              },
                              "isInternal": {
                                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                "example": false,
                                "type": "boolean"
                              },
                              "label": {
                                "description": "The optional label of the endpoint",
                                "example": [
                                  "Home",
                                  "Work"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "rawValue": {
                                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": 15555555555
                                  },
                                  "secure": {
                                    "value": "https://spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "displayValue",
                              "rawValue",
                              "isInternal",
                              "object"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "displayName"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "description": "Spruce's conversation ID",
                      "example": "t_0E5QDGJC03000",
                      "type": "string"
                    },
                    "internalEndpoint": {
                      "description": "The internal endpoint of the conversation. For secure conversations, this will be a Spruce Link.",
                      "properties": {
                        "channel": {
                          "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                          "enum": [
                            "email",
                            "phone",
                            "fax",
                            "secure"
                          ],
                          "type": "string"
                        },
                        "displayValue": {
                          "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                          "example": {
                            "email": {
                              "value": "patient@example.com"
                            },
                            "phone": {
                              "value": "(555) 555-5555"
                            },
                            "secure": {
                              "value": "spruce.care/123456"
                            }
                          },
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of the endpoint",
                          "example": 15555555555,
                          "type": "string"
                        },
                        "isInternal": {
                          "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                          "example": false,
                          "type": "boolean"
                        },
                        "label": {
                          "description": "The optional label of the endpoint",
                          "example": [
                            "Home",
                            "Work"
                          ],
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "rawValue": {
                          "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                          "example": {
                            "email": {
                              "value": "patient@example.com"
                            },
                            "phone": {
                              "value": 15555555555
                            },
                            "secure": {
                              "value": "https://spruce.care/123456"
                            }
                          },
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "channel",
                        "displayValue",
                        "rawValue",
                        "isInternal",
                        "object"
                      ],
                      "type": "object"
                    },
                    "internalMemberIds": {
                      "description": "The ids of the teammates, teams and/or your organization that are members of the conversation.",
                      "example": [
                        "entity_0D4QABCC06000"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "isReadOnly": {
                      "description": "If the conversation is read-only, messages cannot be sent to it.",
                      "example": false,
                      "type": "boolean"
                    },
                    "lastMessageAt": {
                      "description": "The time of the conversations latest message",
                      "example": "2020-04-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "subtitle": {
                      "description": "The subtitle of the conversation",
                      "example": "Billing",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's conversation tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a conversation tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "title": {
                      "description": "The title of the conversation",
                      "example": "John Doe",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the conversation (e.g. 'email', 'phone', 'secure', etc.). Note that SMS will be in a 'phone' conversation, and video calls will be in a 'secure' conversation. More conversation types may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                      "enum": [
                        "email",
                        "phone",
                        "secure",
                        "fax",
                        "team",
                        "note",
                        "other"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "appURL",
                    "apiURL",
                    "archived",
                    "createdAt",
                    "id",
                    "isReadOnly",
                    "tags",
                    "type",
                    "title",
                    "object"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok response",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update a conversation",
        "tags": [
          "Conversations"
        ]
      }
    },
    "/conversations/{conversationId}/items": {
      "get": {
        "description": "This operation lists all conversations items available in a conversation. This is an eventually consistent view and may take a short time before new conversation items appear in results.",
        "operationId": "ConversationItems",
        "parameters": [
          {
            "description": "The id of the conversation to post to",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "How many conversation items to return at one time (max 200)",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The order in which conversation items are returned.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "The order of the conversation items returned",
              "enum": [
                "newest_first",
                "oldest_first"
              ],
              "example": "newest_first",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          },
          {
            "description": "The created time after which to query for new items in a conversation.",
            "in": "query",
            "name": "startFrom",
            "required": false,
            "schema": {
              "example": "2020-04-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversationItems": {
                      "items": {
                        "properties": {
                          "apiURL": {
                            "description": "An absolute URL for fetching this conversation item from the API",
                            "example": "https://api.sprucehealth.com/conversationItems/ti_0E5QDJJC03000",
                            "format": "url",
                            "type": "string"
                          },
                          "appURL": {
                            "description": "An absolute URL to view the conversation item in the Spruce app.",
                            "example": "https://app.sprucehealth.com/org/entity_0D4QABCC06000/thread/t_0E5QDJJC03000/message/ti_23170B3D36G00",
                            "format": "url",
                            "type": "string"
                          },
                          "attachments": {
                            "description": "Attachments for the conversation item.",
                            "items": {
                              "properties": {
                                "data": {
                                  "anyOf": [
                                    {
                                      "properties": {
                                        "mimetype": {
                                          "description": "The mimetype of the audio attachment.",
                                          "example": "audio/mpeg",
                                          "type": "string"
                                        },
                                        "signedUrl": {
                                          "description": "The URL used to fetch the audio attachment.",
                                          "properties": {
                                            "expiresAt": {
                                              "description": "The date the signed URL expires.",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The signed URL.",
                                              "format": "url",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url",
                                            "expiresAt"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "mimetype",
                                        "signedUrl"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "mimetype": {
                                          "description": "The mimetype of the document attachment.",
                                          "example": "application/pdf",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name associated with the attached document.",
                                          "type": "string"
                                        },
                                        "signedUrl": {
                                          "description": "The URL used to fetch the document attachment.",
                                          "properties": {
                                            "expiresAt": {
                                              "description": "The date the signed URL expires.",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The signed URL.",
                                              "format": "url",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url",
                                            "expiresAt"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "mimetype",
                                        "signedUrl"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "title": {
                                          "description": "The title associated with the attached entity profile.",
                                          "example": "John Smith",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The URL of the entity profile.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "url"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "mimetype": {
                                          "description": "The mimetype of the image attachment.",
                                          "example": "image/png",
                                          "type": "string"
                                        },
                                        "signedUrl": {
                                          "description": "The URL used to fetch the image attachment.",
                                          "properties": {
                                            "expiresAt": {
                                              "description": "The date the signed URL expires.",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The signed URL.",
                                              "format": "url",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url",
                                            "expiresAt"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "mimetype",
                                        "signedUrl"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "mimetype": {
                                          "description": "The mimetype of the video attachment.",
                                          "example": "video/mp4",
                                          "type": "string"
                                        },
                                        "signedUrl": {
                                          "description": "The URL used to fetch the video attachment.",
                                          "properties": {
                                            "expiresAt": {
                                              "description": "The date the signed URL expires.",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The signed URL.",
                                              "format": "url",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url",
                                            "expiresAt"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "mimetype",
                                        "signedUrl"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "title": {
                                  "description": "The title of the attachment.",
                                  "example": "example.pdf",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the attachment.",
                                  "enum": [
                                    "audio",
                                    "carePlan",
                                    "document",
                                    "entityProfile",
                                    "genericUrl",
                                    "image",
                                    "paymentRequest",
                                    "video",
                                    "visit"
                                  ]
                                }
                              },
                              "required": [
                                "title",
                                "type"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "author": {
                            "description": "The author of the conversation item.",
                            "properties": {
                              "deviceInformation": {
                                "properties": {
                                  "accessID": {
                                    "description": "The access ID of API credentials used to make the request.",
                                    "type": "string"
                                  },
                                  "appVersion": {
                                    "description": "The version of the app.",
                                    "type": "string"
                                  },
                                  "device": {
                                    "description": "The type of the device.",
                                    "type": "string"
                                  },
                                  "deviceId": {
                                    "description": "The id of the device.",
                                    "type": "string"
                                  },
                                  "deviceModel": {
                                    "description": "The model of the device.",
                                    "type": "string"
                                  },
                                  "platform": {
                                    "description": "The platform of the device.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "displayName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "displayName"
                            ],
                            "type": "object"
                          },
                          "buttons": {
                            "description": "The buttons associated with the conversation item.",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "The id of the button.",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The state of the button.",
                                  "enum": [
                                    "disabled",
                                    "normal",
                                    "selected"
                                  ],
                                  "type": "string"
                                },
                                "text": {
                                  "description": "The text of the button.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "text",
                                "state"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "canDelete": {
                            "description": "If the conversation item can be deleted.",
                            "example": true,
                            "type": "boolean"
                          },
                          "conversationId": {
                            "description": "Spruce's conversation ID",
                            "example": "t_0E5QDGJC03000",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The date time the conversation item was created.",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "direction": {
                            "description": "The direction of the item relative to this organization. Possible values are `inbound`, `outbound` and `none`. `inbound` indicates a message received by the organization, `outbound` indicates a message sent to an external contact by a teammate in the organization. `none` indicates a message that is likely internal to the organization or one for which the direction cannot be determined.",
                            "enum": [
                              "inbound",
                              "outbound",
                              "none"
                            ]
                          },
                          "event": {
                            "description": "Any event data associate with the conversation item.",
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "answered": {
                                        "description": "If the call was answered.",
                                        "type": "boolean"
                                      },
                                      "answeredBy": {
                                        "description": "If an inbound call was answered, which desk phone or external phone number answered it.",
                                        "properties": {
                                          "externalNumber": {
                                            "description": "the telephone number external to Spruce this call was answered by",
                                            "type": "string"
                                          },
                                          "lineId": {
                                            "description": "the ID of the phone line on the Spruce system this call was answered by",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "duration": {
                                        "description": "The duration of the call in seconds.",
                                        "type": "integer"
                                      },
                                      "failed": {
                                        "description": "If the call failed.",
                                        "type": "boolean"
                                      },
                                      "initiatedBy": {
                                        "description": "For outbound calls, which desk phone or teammate initiated it.",
                                        "properties": {
                                          "lineId": {
                                            "description": "the ID of the phone line on the Spruce system this call was initiated by",
                                            "type": "string"
                                          },
                                          "teammateID": {
                                            "description": "The id of the teammate",
                                            "example": "entity_0E5QDGJC03000",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "recordings": {
                                        "description": "The recordings of the call if any exist.",
                                        "items": {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the audio attachment.",
                                              "example": "audio/mpeg",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the audio attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "spam": {
                                        "description": "If the call was marked as spam.",
                                        "type": "boolean"
                                      },
                                      "voicemail": {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the audio attachment.",
                                            "example": "audio/mpeg",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the audio attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "answered",
                                      "duration",
                                      "failed",
                                      "inbound",
                                      "spam"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "answered": {
                                        "description": "If the call was answered.",
                                        "type": "boolean"
                                      },
                                      "duration": {
                                        "description": "The duration of the call in seconds.",
                                        "type": "integer"
                                      },
                                      "initiatedBy": {
                                        "description": "The Spruce is of the teammate that initiated it..",
                                        "example": "entity_0E5QDGJC03000",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "answered",
                                      "duration",
                                      "initiatedBy"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              },
                              "type": {
                                "description": "The type of the event. Additional events will be added in the future, so any parsing of this field should gracefully handle unexpected values.",
                                "enum": [
                                  "inboundCall",
                                  "inboundVideoCall",
                                  "outboundCall",
                                  "outboundVideoCall"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          "id": {
                            "description": "The id of a conversation item.",
                            "example": "ti_0D4QABCC06000",
                            "type": "string"
                          },
                          "isInternalNote": {
                            "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
                            "example": false,
                            "type": "boolean"
                          },
                          "modifiedAt": {
                            "description": "The date time the conversation item was last modified.",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "pages": {
                            "description": "The pages associated with the conversation item.",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "The id of the page.",
                                  "type": "string"
                                },
                                "memberId": {
                                  "description": "The id of the teammate being paged.",
                                  "example": "entity_0D4QABCC06000",
                                  "type": "string"
                                },
                                "resolved": {
                                  "description": "If the page has been resolved.",
                                  "type": "boolean"
                                },
                                "resolvedAt": {
                                  "description": "The date time the page was resolved at.",
                                  "example": "2020-04-01T00:00:00Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "resolvedByMemberId": {
                                  "description": "The id of the teammate that resolved the page.",
                                  "example": "entity_0D4QABCC06000",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "memberId",
                                "resolved"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "requestId": {
                            "description": "The id of an asynchronous request",
                            "example": "asyncRequest_0D4QABCC06000",
                            "type": "string"
                          },
                          "text": {
                            "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                            "example": "Can you look at this @Dr. Smith?",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "conversationId",
                          "attachments",
                          "author",
                          "direction",
                          "isInternalNote",
                          "appURL",
                          "apiURL",
                          "text",
                          "pages",
                          "buttons",
                          "modifiedAt",
                          "createdAt",
                          "object",
                          "requestId",
                          "canDelete"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer",
                      "description": "Total count represents the total number of conversation items available. This is a best effort calculation at the time of the initial query. This count will not be recalculated more than once every 60 seconds while iterating a set of results."
                    }
                  },
                  "required": [
                    "totalCount",
                    "conversationItems",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List and filter all conversation items in a conversation",
        "tags": [
          "Conversations"
        ]
      }
    },
    "/conversations/{conversationId}/messages": {
      "post": {
        "description": "This operation posts a message in a conversation as specified by the conversationId. You can retrieve the conversationId by [listing the conversations for a contact](/reference/contactconversations) or by [listing all conversations in the organization](/reference/conversations). You can also [send messages to a phone number, an email address, fax number, or securely message a contact](/reference/postmessagefromendpoint) using a [specific internal endpoint](/reference/internalendpoints). The `requestID` returned by this API may be used to match against the `requestID` field of the `conversationItem.created` webhook event to identify when the message is posted.\n## Posting an internal message containing a page for an organization member\nTo post a message with a page for an organization member, you'll first need to know the member's id. You can find the id of the organization member by [listing all organization members](/reference/organizationmembers). Once the member id is known, you can post a message to the conversation with `internal=true` and an element of `type=page` and `value=<member-id>` in the list of `body` elements being posted.\nThe `body` parameter is a list of message elements. Each element can be of type `text` or `page`. The request can contain combinations of `text` and `page` elements to create internal messages with useful content while also notifying a set of members.\n## Posting to a Team or Note conversation\nYou can also use this API to post messages into a Team or Note conversations. For Note conversations, you will have to specify `internal=true` since only internal messages can be posted in Note conversations.",
        "operationId": "PostConversationMessage",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the conversation to post to",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attachments": {
                    "items": {
                      "properties": {
                        "attachmentId": {
                          "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                          "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                          "type": "string"
                        },
                        "title": {
                          "description": "The title of the attachment",
                          "example": "My Image",
                          "type": "string"
                        }
                      },
                      "required": [
                        "attachmentId",
                        "title"
                      ],
                      "type": "object"
                    },
                    "maxItems": 5,
                    "type": "array"
                  },
                  "author": {
                    "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                    "example": "entity_0D4QABCC06000",
                    "type": "string"
                  },
                  "body": {
                    "items": {
                      "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                      "properties": {
                        "type": {
                          "enum": [
                            "text",
                            "page"
                          ],
                          "example": "text",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the message body element",
                          "example": "Hello, how are you?",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "internal": {
                    "description": "Whether the message is internal or not",
                    "example": false,
                    "type": "boolean"
                  },
                  "stayArchived": {
                    "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "required": [
                  "body"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "description": "The id of an asynchronous request",
                      "example": "asyncRequest_0D4QABCC06000",
                      "type": "string"
                    }
                  },
                  "required": [
                    "requestId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Post a message to a specific conversation",
        "tags": [
          "Conversations"
        ]
      }
    },
    "/conversations/{conversationId}/scheduledmessages": {
      "get": {
        "description": "This operation lists the messages that are scheduled in a conversation.",
        "operationId": "ListConversationScheduledMessages",
        "parameters": [
          {
            "description": "The id of the conversation to get the scheduled messages for",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "scheduledMessages": {
                      "items": {
                        "properties": {
                          "conversationId": {
                            "description": "Spruce's conversation ID",
                            "example": "t_0E5QDGJC03000",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The date and time the scheduled message was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's scheduled message ID",
                            "example": "scm_26RRC7PQ6JG00",
                            "type": "string"
                          },
                          "isInternalNote": {
                            "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
                            "example": false,
                            "type": "boolean"
                          },
                          "message": {
                            "properties": {
                              "attachments": {
                                "description": "Attachments for the scheduled message",
                                "items": {
                                  "properties": {
                                    "data": {
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the audio attachment.",
                                              "example": "audio/mpeg",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the audio attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the document attachment.",
                                              "example": "application/pdf",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "The name associated with the attached document.",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the document attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "title": {
                                              "description": "The title associated with the attached entity profile.",
                                              "example": "John Smith",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The URL of the entity profile.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "title",
                                            "url"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the image attachment.",
                                              "example": "image/png",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the image attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the video attachment.",
                                              "example": "video/mp4",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the video attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "title": {
                                      "description": "The title of the attachment.",
                                      "example": "example.pdf",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the attachment.",
                                      "enum": [
                                        "audio",
                                        "carePlan",
                                        "document",
                                        "entityProfile",
                                        "genericUrl",
                                        "image",
                                        "paymentRequest",
                                        "video",
                                        "visit"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "title",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "pagedInternalMemberIds": {
                                "description": "The internal member ids that are paged in the scheduled message.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "text": {
                                "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                                "example": "Can you look at this @Dr. Smith?",
                                "type": "string"
                              }
                            },
                            "required": [
                              "attachments",
                              "pagedInternalMemberIds",
                              "text"
                            ],
                            "type": "object"
                          },
                          "modifiedAt": {
                            "description": "The date and time the scheduled message was modified",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "scheduledToSendAt": {
                            "description": "The date and time the message is scheduled to be sent",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "sendAsInternalMemberId": {
                            "description": "The id of a team or teammate in the organization",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "conversationId",
                          "createdAt",
                          "isInternalNote",
                          "message",
                          "modifiedAt",
                          "sendAsInternalMemberId",
                          "scheduledToSendAt",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "scheduledMessages"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "An array of messages that are scheduled in a conversation",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List any messages scheduled in a conversation",
        "tags": [
          "Scheduled Messages"
        ]
      },
      "post": {
        "description": "This operation creates a scheduled message to be sent in a conversation at the designated time. If no author is specified, the message will be sent as the organization.",
        "operationId": "ScheduleConversationMessage",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the conversation to schedule the message for",
            "in": "path",
            "name": "conversationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "properties": {
                      "author": {
                        "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                        "example": "entity_0D4QABCC06000",
                        "type": "string"
                      },
                      "body": {
                        "items": {
                          "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                          "properties": {
                            "type": {
                              "enum": [
                                "text",
                                "page"
                              ],
                              "example": "text",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the message body element",
                              "example": "Hello, how are you?",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "internal": {
                        "description": "Whether the message is internal or not",
                        "example": false,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "body"
                    ],
                    "type": "object"
                  },
                  "sendAt": {
                    "description": "The date and time the message is scheduled to be sent",
                    "example": "2020-04-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "sendAt"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "scheduledMessage": {
                      "properties": {
                        "conversationId": {
                          "description": "Spruce's conversation ID",
                          "example": "t_0E5QDGJC03000",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "The date and time the scheduled message was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "Spruce's scheduled message ID",
                          "example": "scm_26RRC7PQ6JG00",
                          "type": "string"
                        },
                        "isInternalNote": {
                          "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
                          "example": false,
                          "type": "boolean"
                        },
                        "message": {
                          "properties": {
                            "attachments": {
                              "description": "Attachments for the scheduled message",
                              "items": {
                                "properties": {
                                  "data": {
                                    "anyOf": [
                                      {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the audio attachment.",
                                            "example": "audio/mpeg",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the audio attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the document attachment.",
                                            "example": "application/pdf",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name associated with the attached document.",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the document attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "properties": {
                                          "title": {
                                            "description": "The title associated with the attached entity profile.",
                                            "example": "John Smith",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The URL of the entity profile.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "url"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the image attachment.",
                                            "example": "image/png",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the image attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "properties": {
                                          "mimetype": {
                                            "description": "The mimetype of the video attachment.",
                                            "example": "video/mp4",
                                            "type": "string"
                                          },
                                          "signedUrl": {
                                            "description": "The URL used to fetch the video attachment.",
                                            "properties": {
                                              "expiresAt": {
                                                "description": "The date the signed URL expires.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "url": {
                                                "description": "The signed URL.",
                                                "format": "url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "url",
                                              "expiresAt"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "mimetype",
                                          "signedUrl"
                                        ],
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "description": "The title of the attachment.",
                                    "example": "example.pdf",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the attachment.",
                                    "enum": [
                                      "audio",
                                      "carePlan",
                                      "document",
                                      "entityProfile",
                                      "genericUrl",
                                      "image",
                                      "paymentRequest",
                                      "video",
                                      "visit"
                                    ]
                                  }
                                },
                                "required": [
                                  "title",
                                  "type"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "pagedInternalMemberIds": {
                              "description": "The internal member ids that are paged in the scheduled message.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "text": {
                              "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                              "example": "Can you look at this @Dr. Smith?",
                              "type": "string"
                            }
                          },
                          "required": [
                            "attachments",
                            "pagedInternalMemberIds",
                            "text"
                          ],
                          "type": "object"
                        },
                        "modifiedAt": {
                          "description": "The date and time the scheduled message was modified",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "scheduledToSendAt": {
                          "description": "The date and time the message is scheduled to be sent",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "sendAsInternalMemberId": {
                          "description": "The id of a team or teammate in the organization",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "conversationId",
                        "createdAt",
                        "isInternalNote",
                        "message",
                        "modifiedAt",
                        "sendAsInternalMemberId",
                        "scheduledToSendAt",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "scheduledMessage"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Schedule a message to be sent in a conversation",
        "tags": [
          "Scheduled Messages"
        ]
      }
    },
    "/conversations/tags": {
      "get": {
        "description": "This operation lists all conversation tags available to a given organization.\n\nThe `hasMore` field can be used to determine if there are remaining results to list. The `paginationToken` field can be provided on subsequents calls to retrieve the next page of results.",
        "operationId": "ConversationTags",
        "parameters": [
          {
            "description": "How many tags to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Spruce's conversation tag ID",
                            "example": "tag_0E5QDGJC03000",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "value": {
                            "description": "The text value of a conversation tag",
                            "example": "Smith",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "totalCount",
                    "tags",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all conversation tags available to the organization",
        "tags": [
          "Conversation Tags"
        ]
      },
      "post": {
        "description": "This operation creates a conversation tag for the given organization. This tag can then be applied to conversations in subsequent operations. Requesting creation of an already existing tag will result in a `201` response and the response will contain the existing tag.",
        "operationId": "CreateConversationTag",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "description": "The text value of a conversation tag",
                    "example": "Smith",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Spruce's conversation tag ID",
                      "example": "tag_0E5QDGJC03000",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    },
                    "value": {
                      "description": "The text value of a conversation tag",
                      "example": "Smith",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "object"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "created",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a conversation tag",
        "tags": [
          "Conversation Tags"
        ]
      }
    },
    "/internalendpoints": {
      "get": {
        "description": "This operation lists all internal endpoints which organizations can use to communicate with. This includes all Spruce phone numbers, fax numbers, email addresses and Spruce Links. You can then [use an internal endpoint to send a message](/reference/postmessagefromendpoint).",
        "operationId": "InternalEndpoints",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "internalEndpoints": {
                      "items": {
                        "properties": {
                          "additionalMembers": {
                            "items": {
                              "anyOf": [
                                {
                                  "properties": {
                                    "displayName": {
                                      "description": "The full name of the teammate, including any title provided",
                                      "example": "John Doe, MD",
                                      "type": "string"
                                    },
                                    "email": {
                                      "description": "The email address of the teammate",
                                      "example": "provider@example.com",
                                      "format": "email",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The id of the teammate",
                                      "example": "entity_0E5QDGJC03000",
                                      "type": "string"
                                    },
                                    "isAdmin": {
                                      "description": "Whether or not the teammate is an admin on Spruce",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "object": {
                                      "description": "String representing the object's type",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                                      "example": "teammate",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "displayName",
                                    "isAdmin",
                                    "type",
                                    "object"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "id": {
                                      "description": "The id of the team",
                                      "example": "entity_0D4QABCC06000",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name of the team",
                                      "example": "Billing Team",
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "String representing the object's type",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                                      "example": "team",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "type",
                                    "object"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "id": {
                                      "description": "The id of the organization",
                                      "example": "entity_0D4QABCC06000",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name of the organization",
                                      "example": "Spruce Health",
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "String representing the object's type",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                                      "example": "organization",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "type",
                                    "object"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          },
                          "endpoint": {
                            "properties": {
                              "channel": {
                                "description": "The channel of the endpoint (e.g. 'email', 'phone', 'fax', etc.). More endpoint channels may be added in the future, so ensure while parsing this that you gracefully handle any new/unexpected values.",
                                "enum": [
                                  "email",
                                  "phone",
                                  "fax",
                                  "secure"
                                ],
                                "type": "string"
                              },
                              "displayValue": {
                                "description": "The display value of the endpoint. This is the value that should be displayed to the user when showing the endpoint, along with the label if it's populated.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": "(555) 555-5555"
                                  },
                                  "secure": {
                                    "value": "spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the endpoint",
                                "example": 15555555555,
                                "type": "string"
                              },
                              "isInternal": {
                                "description": "Internal endpoints are endpoints that are owned by your organization, such as your organization's Spruce Phone Numbers or Spruce Links.",
                                "example": false,
                                "type": "boolean"
                              },
                              "label": {
                                "description": "The optional label of the endpoint",
                                "example": [
                                  "Home",
                                  "Work"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "rawValue": {
                                "description": "The raw value of the endpoint. This can be used for programmatically comparing contact values. The raw value for a phone/fax number will be in E164 format.",
                                "example": {
                                  "email": {
                                    "value": "patient@example.com"
                                  },
                                  "phone": {
                                    "value": 15555555555
                                  },
                                  "secure": {
                                    "value": "https://spruce.care/123456"
                                  }
                                },
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "displayValue",
                              "rawValue",
                              "isInternal",
                              "object"
                            ],
                            "type": "object"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "owner": {
                            "oneOf": [
                              {
                                "properties": {
                                  "displayName": {
                                    "description": "The full name of the teammate, including any title provided",
                                    "example": "John Doe, MD",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "The email address of the teammate",
                                    "example": "provider@example.com",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the teammate",
                                    "example": "entity_0E5QDGJC03000",
                                    "type": "string"
                                  },
                                  "isAdmin": {
                                    "description": "Whether or not the teammate is an admin on Spruce",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                                    "example": "teammate",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "displayName",
                                  "isAdmin",
                                  "type",
                                  "object"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": {
                                    "description": "The id of the team",
                                    "example": "entity_0D4QABCC06000",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the team",
                                    "example": "Billing Team",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                                    "example": "team",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "object"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": {
                                    "description": "The id of the organization",
                                    "example": "entity_0D4QABCC06000",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the organization",
                                    "example": "Spruce Health",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "String representing the object's type",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                                    "example": "organization",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "object"
                                ],
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "required": [
                          "endpoint",
                          "owner",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "internalEndpoints"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all internal endpoints",
        "tags": [
          "Internal Endpoints"
        ]
      }
    },
    "/internalendpoints/{internalEndpointId}/conversations": {
      "post": {
        "description": "This operation sends a message to an external endpoint (phone number or email address) or a contact (secure messaging). Only one of secureEndpoint or smsOrEmailEndpoint should be specified. You will need to also specify the appropriate internal endpoint from the [list of available internal endpoints for an organization](/reference/internalendpoints). The RequestID returned by this API may be used to match against the `RequestID` field of the `conversationItem.created` webhook event to identify when the message is posted.\n\n## Send a secure message\n* Get the appropriate Spruce phone number from the [list of internal endpoints for an organization](/reference/internalendpoints) (of channel type `secure`)\n* Specify the internal endpoint's `endpoint.Id` in the `internalEndpointId` path parameter\n* Get the Id of the appropriate contact to send the secure message to. You can [list all contacts in the organization](/reference/listcontacts) or [search for the appropriate contact](/reference/searchcontacts) to determine the contact Id if you do not have it already.\n* Populate the `destination.secureEndpoint` object with the `contactId`, the appropriate `deliveryMethod` and `subject` for the conversation.\n\nThe `deliveryMethod` can be one of the following:\n* (Default) `any_available_secure_conversation`: The system will first try to deliver messages using conversations from the specified internal endpoint. Then it will try to deliver to any existing secure conversation with the recipient. Then, if no conversation exists, a new secure conversation will be created.\n* `only_conversations_matching_internal_endpoint`: The system will deliver messages in conversations from the specified internal endpoint. If such a conversation doesn't yet exist, a new one will be created.\n* `new_conversation`: This option will create a new conversation, separate from any existing conversation.\n## Send an SMS\n* Get the appropriate Spruce phone number from the [list of internal endpoints for an organization](/reference/internalendpoints) (of channel type `phone`)\n* Specify the internal endpoint's `endpoint.Id` in the `internalEndpointId` path parameter\n* Specify the phone number to send the the message to in the `destination.smsOrEmailEndpoint` body parameter\n## Send an email\n* Get the appropriate Spruce phone number from the [list of internal endpoints for an organization](/reference/internalendpoints) (of channel type `email`)\n* Specify the internal endpoint's `endpoint.Id` in the `internalEndpointId` path parameter\n* Specify the email address to send the the message to in the `destination.smsOrEmailEndpoint` body parameter\n## Send a fax\n* Get the appropriate Spruce fax number from the [list of internal endpoints for an organization](/reference/internalendpoints) (of channel type `fax`)\n* Specify the internal endpoint's `endpoint.Id` in the `internalEndpointId` path parameter\n* Specify the fax number to send the the message to in the `destination.faxEndpoint` body parameter\n* Note: Each outbound fax message sent from an internal endpoint will result in a new fax conversation being created\n",
        "operationId": "PostMessageFromEndpoint",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the endpoint to send the message from.",
            "in": "path",
            "name": "internalEndpointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "destination": {
                    "properties": {
                      "faxEndpoint": {
                        "description": "The fax number to send the message to.",
                        "type": "string"
                      },
                      "secureEndpoint": {
                        "properties": {
                          "contactId": {
                            "description": "The Spruce id of the contact to send the message to.",
                            "type": "string"
                          },
                          "deliveryMethod": {
                            "description": " `any_available_secure_conversation`: The system will first try to deliver messages using conversations from the specified internal endpoint. Then it will try to deliver to any existing secure conversation with the recipient. Then, if no conversation exists, a new secure conversation will be created.\n`only_conversations_matching_internal_endpoint`: The system will deliver messages in conversations from the specified internal endpoint. If such a conversation doesn't yet exist, a new one will be created.\n`new_conversation`: This option will create a new conversation, separate from any existing conversation. ",
                            "enum": [
                              "any_available_secure_conversation",
                              "only_conversations_matching_internal_endpoint",
                              "new_conversation"
                            ],
                            "example": "only_conversations_matching_internal_endpoint",
                            "type": "string"
                          },
                          "subject": {
                            "description": "The subject of the message.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "contactId"
                        ],
                        "type": "object"
                      },
                      "smsOrEmailEndpoint": {
                        "description": "The phone number or email address to send the message to.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "message": {
                    "properties": {
                      "attachments": {
                        "items": {
                          "properties": {
                            "attachmentId": {
                              "description": "The id of the attachment. In most cases, this will be a media id returned from posting a file to the [media endpoint](/reference/uploadmedia).",
                              "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                              "type": "string"
                            },
                            "title": {
                              "description": "The title of the attachment",
                              "example": "My Image",
                              "type": "string"
                            }
                          },
                          "required": [
                            "attachmentId",
                            "title"
                          ],
                          "type": "object"
                        },
                        "maxItems": 5,
                        "type": "array"
                      },
                      "author": {
                        "description": "The ID of the organization member (teammate, team, or organization) to send the message as. If not provided, defaults to the organization.",
                        "example": "entity_0D4QABCC06000",
                        "type": "string"
                      },
                      "body": {
                        "items": {
                          "description": "An element of a message body. This can be either a `text` or `page` type element. A `text` element is a string of text to be placed in the message. A `page` element is a reference to an organization member. For a `page` element, the value field should be the Spruce id of the organization member being referenced.",
                          "properties": {
                            "type": {
                              "enum": [
                                "text",
                                "page"
                              ],
                              "example": "text",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the message body element",
                              "example": "Hello, how are you?",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "internal": {
                        "description": "Whether the message is internal or not",
                        "example": false,
                        "type": "boolean"
                      },
                      "stayArchived": {
                        "description": "Whether the conversation should stay archived (if it is already archived) after the message is sent",
                        "example": false,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "body"
                    ],
                    "type": "object"
                  },
                  "sendAt": {
                    "description": "The date and time the message is scheduled to be sent",
                    "example": "2020-04-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "destination",
                  "message"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "description": "The id of an asynchronous request",
                      "example": "asyncRequest_0D4QABCC06000",
                      "type": "string"
                    }
                  },
                  "required": [
                    "requestId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok response",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Send a message from an internal endpoint",
        "tags": [
          "Internal Endpoints"
        ]
      }
    },
    "/media": {
      "post": {
        "description": "This operation uploads media such a images, videos, and files to Spruce for use in messaging. Uploading a file will return a media ID that can be used to reference the file in other operations. Callers of this API should record the resulting media ID for future use. A media ID can be used in the `attachmentID` field of the [conversation message post attachment](/reference/postmessage). Media IDs can be used multiple times.\nThe `Content-Type` and `Content-Disposition` headers on the multipart `media` field can use used to provide additional metadata about the media. This metadata can impact how the media is displayed and downloaded from the application.\n\n**Example Headers**\n* `Content-Disposition: form-data; name=\"media\"; filename=\"image.png\"`\n* `Content-Type: image/png` ",
        "operationId": "UploadMedia",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "media": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "media"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Spruce's media message ID",
                      "example": "d7b25969-86ec-7e37-3776-3577-c0637a0c",
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "An array of messages that are scheduled for the organization",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Upload media",
        "tags": [
          "Media"
        ]
      }
    },
    "/organization": {
      "get": {
        "description": "This returns your organization's information. Most importantly, it returns your organization's `id` which will often be used as the owner or a member of other objects.",
        "operationId": "Organization",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organization": {
                      "properties": {
                        "id": {
                          "description": "The id of the organization",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the organization",
                          "example": "Spruce Health",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "type": {
                          "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                          "example": "organization",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "organization"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List information about the organization",
        "tags": [
          "Organization"
        ]
      }
    },
    "/organization/members": {
      "get": {
        "description": "This returns a list of all members of the organization. This includes all teammates and all teams, as well as a reference to the organization itself.",
        "operationId": "OrganizationMembers",
        "parameters": [
          {
            "description": "How many member to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 2,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasMore": {
                      "type": "boolean"
                    },
                    "members": {
                      "items": {
                        "anyOf": [
                          {
                            "properties": {
                              "displayName": {
                                "description": "The full name of the teammate, including any title provided",
                                "example": "John Doe, MD",
                                "type": "string"
                              },
                              "email": {
                                "description": "The email address of the teammate",
                                "example": "provider@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the teammate",
                                "example": "entity_0E5QDGJC03000",
                                "type": "string"
                              },
                              "isAdmin": {
                                "description": "Whether or not the teammate is an admin on Spruce",
                                "example": false,
                                "type": "boolean"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                                "example": "teammate",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "displayName",
                              "isAdmin",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The id of the team",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the team",
                                "example": "Billing Team",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                                "example": "team",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The id of the organization",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the organization",
                                "example": "Spruce Health",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                                "example": "organization",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "members",
                    "totalCount",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all members of the organization",
        "tags": [
          "Organization"
        ]
      }
    },
    "/organization/members/{memberId}": {
      "get": {
        "description": "This operation retrieves a specific organization member (organization, team, or teammate), by id.",
        "operationId": "OrganizationMember",
        "parameters": [
          {
            "description": "The unique identifier of the member",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "properties": {
                        "displayName": {
                          "description": "The full name of the teammate, including any title provided",
                          "example": "John Doe, MD",
                          "type": "string"
                        },
                        "email": {
                          "description": "The email address of the teammate",
                          "example": "provider@example.com",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of the teammate",
                          "example": "entity_0E5QDGJC03000",
                          "type": "string"
                        },
                        "isAdmin": {
                          "description": "Whether or not the teammate is an admin on Spruce",
                          "example": false,
                          "type": "boolean"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "type": {
                          "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                          "example": "teammate",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "displayName",
                        "isAdmin",
                        "type",
                        "object"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "id": {
                          "description": "The id of the team",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the team",
                          "example": "Billing Team",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "type": {
                          "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                          "example": "team",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type",
                        "object"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "id": {
                          "description": "The id of the organization",
                          "example": "entity_0D4QABCC06000",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the organization",
                          "example": "Spruce Health",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "type": {
                          "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                          "example": "organization",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type",
                        "object"
                      ],
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a member of the organization by id",
        "tags": [
          "Organization"
        ]
      }
    },
    "/phonelines": {
      "get": {
        "description": "This returns a list of all phone lines of the organization.",
        "operationId": "PhoneLines",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "phonelines": {
                      "items": {
                        "description": "phone line",
                        "properties": {
                          "id": {
                            "description": "Spruce's phone line ID",
                            "example": "pd_26RRC7PQ6JG00",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the phone line",
                            "example": "Desk 101",
                            "type": "string"
                          }
                        },
                        "required": [
                          "createdAt",
                          "id",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "phonelines",
                    "totalCount"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all phone lines of the organization",
        "tags": [
          "Phone Lines"
        ]
      }
    },
    "/phonelines/{phonelineId}": {
      "get": {
        "description": "This operation retrieves a specific phone line by id.",
        "operationId": "PhoneLine",
        "parameters": [
          {
            "description": "The unique identifier of the phone line",
            "in": "path",
            "name": "phonelineId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "phone line",
                  "properties": {
                    "id": {
                      "description": "Spruce's phone line ID",
                      "example": "pd_26RRC7PQ6JG00",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the phone line",
                      "example": "Desk 101",
                      "type": "string"
                    }
                  },
                  "required": [
                    "createdAt",
                    "id",
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a phone line of the organization by id",
        "tags": [
          "Phone Lines"
        ]
      }
    },
    "/scheduledmessages": {
      "get": {
        "description": "This operation lists the messages that are scheduled to be sent from the organization.",
        "operationId": "ListScheduledMessages",
        "parameters": [
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "scheduledMessages": {
                      "items": {
                        "properties": {
                          "conversationId": {
                            "description": "Spruce's conversation ID",
                            "example": "t_0E5QDGJC03000",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The date and time the scheduled message was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "Spruce's scheduled message ID",
                            "example": "scm_26RRC7PQ6JG00",
                            "type": "string"
                          },
                          "isInternalNote": {
                            "description": "If the conversation item is an internal note - which is visible only to the posting side of the conversation.",
                            "example": false,
                            "type": "boolean"
                          },
                          "message": {
                            "properties": {
                              "attachments": {
                                "description": "Attachments for the scheduled message",
                                "items": {
                                  "properties": {
                                    "data": {
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the audio attachment.",
                                              "example": "audio/mpeg",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the audio attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the document attachment.",
                                              "example": "application/pdf",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "The name associated with the attached document.",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the document attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "title": {
                                              "description": "The title associated with the attached entity profile.",
                                              "example": "John Smith",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The URL of the entity profile.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "title",
                                            "url"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the image attachment.",
                                              "example": "image/png",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the image attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "mimetype": {
                                              "description": "The mimetype of the video attachment.",
                                              "example": "video/mp4",
                                              "type": "string"
                                            },
                                            "signedUrl": {
                                              "description": "The URL used to fetch the video attachment.",
                                              "properties": {
                                                "expiresAt": {
                                                  "description": "The date the signed URL expires.",
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "The signed URL.",
                                                  "format": "url",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "url",
                                                "expiresAt"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "mimetype",
                                            "signedUrl"
                                          ],
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "title": {
                                      "description": "The title of the attachment.",
                                      "example": "example.pdf",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the attachment.",
                                      "enum": [
                                        "audio",
                                        "carePlan",
                                        "document",
                                        "entityProfile",
                                        "genericUrl",
                                        "image",
                                        "paymentRequest",
                                        "video",
                                        "visit"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "title",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "pagedInternalMemberIds": {
                                "description": "The internal member ids that are paged in the scheduled message.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "text": {
                                "description": "The text of the conversation item. If the conversation item contains pages, they will be listed in the pages property.",
                                "example": "Can you look at this @Dr. Smith?",
                                "type": "string"
                              }
                            },
                            "required": [
                              "attachments",
                              "pagedInternalMemberIds",
                              "text"
                            ],
                            "type": "object"
                          },
                          "modifiedAt": {
                            "description": "The date and time the scheduled message was modified",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "scheduledToSendAt": {
                            "description": "The date and time the message is scheduled to be sent",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "sendAsInternalMemberId": {
                            "description": "The id of a team or teammate in the organization",
                            "example": "entity_0D4QABCC06000",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "conversationId",
                          "createdAt",
                          "isInternalNote",
                          "message",
                          "modifiedAt",
                          "sendAsInternalMemberId",
                          "scheduledToSendAt",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "totalCount",
                    "scheduledMessages",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "An array of messages that are scheduled for the organization",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List any messages scheduled for the organization",
        "tags": [
          "Scheduled Messages"
        ]
      }
    },
    "/scheduledmessages/{scheduledMessageId}": {
      "delete": {
        "description": "This operation deletes a scheduled message specified by id.",
        "operationId": "DeleteScheduledMessage",
        "parameters": [
          {
            "description": "The id of the scheduled message to delete",
            "in": "path",
            "name": "scheduledMessageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a scheduled message",
        "tags": [
          "Scheduled Messages"
        ]
      }
    },
    "/teams/{teamId}/members": {
      "get": {
        "description": "This operation lists the members of a team identified by id.",
        "operationId": "TeamMembers",
        "parameters": [
          {
            "description": "The unique identifier of the team",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "How many member to return at one time",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasMore": {
                      "type": "boolean"
                    },
                    "members": {
                      "items": {
                        "anyOf": [
                          {
                            "properties": {
                              "displayName": {
                                "description": "The full name of the teammate, including any title provided",
                                "example": "John Doe, MD",
                                "type": "string"
                              },
                              "email": {
                                "description": "The email address of the teammate",
                                "example": "provider@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the teammate",
                                "example": "entity_0E5QDGJC03000",
                                "type": "string"
                              },
                              "isAdmin": {
                                "description": "Whether or not the teammate is an admin on Spruce",
                                "example": false,
                                "type": "boolean"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'teammate'. This is provided for cases where a teammate may be in a mixed list with teams and/or your organization.",
                                "example": "teammate",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "displayName",
                              "isAdmin",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The id of the team",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the team",
                                "example": "Billing Team",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'team'. This is provided for cases where a team may be in a mixed list with teammtes and/or your organization.",
                                "example": "team",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The id of the organization",
                                "example": "entity_0D4QABCC06000",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the organization",
                                "example": "Spruce Health",
                                "type": "string"
                              },
                              "object": {
                                "description": "String representing the object's type",
                                "type": "string"
                              },
                              "type": {
                                "description": "This will always be 'organization'. This is provided for cases where a organization may be in a mixed list with teammtes and/or teams.",
                                "example": "organization",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "type",
                              "object"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    },
                    "totalCount": {
                      "example": 750,
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "members",
                    "totalCount",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Expected response to a valid request",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List the members of a team",
        "tags": [
          "Teams"
        ]
      }
    },
    "/webhooks/endpoints": {
      "get": {
        "description": "This operation lists the endpoints that an organization has registered for webhooks.",
        "operationId": "ListWebhookEndpoints",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoints": {
                      "items": {
                        "properties": {
                          "createdAt": {
                            "description": "The date the destination endpoint was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of a webhook destination endpoint",
                            "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the webhook destination endpoint",
                            "example": "My Webhook Endpoint",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          },
                          "signingSecrets": {
                            "items": {
                              "description": "The signing secret for the webhook endpoint. This is used to verify the authenticity of the webhook payload. This value is only populated when the webhook endpoint is created.",
                              "properties": {
                                "id": {
                                  "description": "The ID of the signing secret",
                                  "example": "wss_01HWDG5ADNBGXXXXXY07DP8",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The signing secret",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "The status of the webhook destination endpoint",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the webhook destination endpoint",
                            "example": "https://example.com/webhook",
                            "format": "url",
                            "type": "string"
                          }
                        },
                        "required": [
                          "createdAt",
                          "id",
                          "signingSecrets",
                          "status",
                          "url",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "endpoints"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "An array of webhook destination endpoints",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List webhook destination endpoints",
        "tags": [
          "Webhooks"
        ]
      },
      "post": {
        "description": "This operation creates a destination endpoint for webhooks events.",
        "operationId": "CreateWebhookEndpoint",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "The name of the webhook destination endpoint",
                    "example": "My Webhook Endpoint",
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL of the webhook destination endpoint",
                    "example": "https://example.com/webhook",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoint": {
                      "properties": {
                        "createdAt": {
                          "description": "The date the destination endpoint was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of a webhook destination endpoint",
                          "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the webhook destination endpoint",
                          "example": "My Webhook Endpoint",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "signingSecrets": {
                          "items": {
                            "description": "The signing secret for the webhook endpoint. This is used to verify the authenticity of the webhook payload. This value is only populated when the webhook endpoint is created.",
                            "properties": {
                              "id": {
                                "description": "The ID of the signing secret",
                                "example": "wss_01HWDG5ADNBGXXXXXY07DP8",
                                "type": "string"
                              },
                              "value": {
                                "description": "The signing secret",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status": {
                          "description": "The status of the webhook destination endpoint",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL of the webhook destination endpoint",
                          "example": "https://example.com/webhook",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "required": [
                        "createdAt",
                        "id",
                        "signingSecrets",
                        "status",
                        "url",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "endpoint"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The newly created webhook destination endpoint",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a webhook destination endpoint",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/endpoints/{endpointId}": {
      "delete": {
        "description": "This operation deleted a destination endpoint for webhook events by id.",
        "operationId": "DeleteWebhookEndpoint",
        "parameters": [
          {
            "description": "The id of the webhook destination endpoint to delete.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "description": "The id of a webhook destination endpoint",
              "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a webhook destination endpoint by id",
        "tags": [
          "Webhooks"
        ]
      },
      "get": {
        "description": "This operation retrieves a specific destination endpoint for webhooks events by id.",
        "operationId": "WebhookEndpoint",
        "parameters": [
          {
            "description": "The id of the webhook destination endpoint.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "description": "The id of a webhook destination endpoint",
              "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "endpoint": {
                      "properties": {
                        "createdAt": {
                          "description": "The date the destination endpoint was created",
                          "example": "2020-04-01T00:00:00Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of a webhook destination endpoint",
                          "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the webhook destination endpoint",
                          "example": "My Webhook Endpoint",
                          "type": "string"
                        },
                        "object": {
                          "description": "String representing the object's type",
                          "type": "string"
                        },
                        "signingSecrets": {
                          "items": {
                            "description": "The signing secret for the webhook endpoint. This is used to verify the authenticity of the webhook payload. This value is only populated when the webhook endpoint is created.",
                            "properties": {
                              "id": {
                                "description": "The ID of the signing secret",
                                "example": "wss_01HWDG5ADNBGXXXXXY07DP8",
                                "type": "string"
                              },
                              "value": {
                                "description": "The signing secret",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status": {
                          "description": "The status of the webhook destination endpoint",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL of the webhook destination endpoint",
                          "example": "https://example.com/webhook",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "required": [
                        "createdAt",
                        "id",
                        "signingSecrets",
                        "status",
                        "url",
                        "object"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "endpoint"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a webhook destination endpoint by id",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/endpoints/{endpointId}/events": {
      "get": {
        "description": "This operation retrieves information about events that have been attempted to be published to a webhook destination endpoint. Events are queryable for a period of 30 days after creation and are returned in sets of 20 at a time. Use the pagination token to retrieve more events.",
        "operationId": "ListWebhookEndpointEvents",
        "parameters": [
          {
            "description": "The id of the webhook destination endpoint.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "description": "The id of a webhook destination endpoint",
              "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
              "type": "string"
            }
          },
          {
            "description": "The start time of the events to retrieve.",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "example": "2020-04-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The end time of the events to retrieve.",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "example": "2020-04-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "schema": {
              "description": "Token given in a previous response to allow requesting the next page",
              "example": "abcdefghijklmnop",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "events": {
                      "items": {
                        "description": "An event that has been attempted to be sent to a webhook destination endpoint",
                        "properties": {
                          "data": {
                            "type": "string"
                          },
                          "delivery": {
                            "description": "Delivery information for an event that has been attempted to be sent to a webhook destination endpoint",
                            "properties": {
                              "attemptLimit": {
                                "description": "The maximum number of attempts that will be made to deliver an event",
                                "type": "integer"
                              },
                              "attempts": {
                                "description": "The number of attempts so far to deliver the event",
                                "type": "integer"
                              },
                              "deliveryTime": {
                                "description": "The date the event was successfully delivered.",
                                "example": "2020-04-01T00:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "nextAttemptTime": {
                                "description": "The date the event will attempt delivery again.",
                                "example": "2020-04-01T00:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "attempts",
                              "attemptLimit",
                              "status"
                            ],
                            "type": "object"
                          },
                          "eventTime": {
                            "description": "The date the event was created",
                            "example": "2020-04-01T00:00:00Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of an event",
                            "example": "wev_01HWDG5ADNBGJ3XXXXXFP8P1GH",
                            "type": "string"
                          },
                          "object": {
                            "description": "String representing the object's type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "eventTime",
                          "data",
                          "object"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "hasMore": {
                      "type": "boolean"
                    },
                    "paginationToken": {
                      "description": "Token given in a previous response to allow requesting the next page",
                      "example": "abcdefghijklmnop",
                      "type": "string"
                    }
                  },
                  "required": [
                    "events",
                    "hasMore"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List events for an endpoint",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/endpoints/{endpointId}/paused": {
      "post": {
        "description": "This operation sets the 'paused' state of a webhook destination endpoint.",
        "operationId": "ModifyWebhookEndpointPaused",
        "parameters": [
          {
            "description": "A unique value generated by the client used to recognize subsequent retries of the same request. Idempotency keys can be up to 255 characters long.",
            "example": "S7uiKYMMRzAcuG8S",
            "in": "header",
            "name": "s-idempotency-key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the webhook destination endpoint.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "description": "The id of a webhook destination endpoint",
              "example": "wde_01HWDG5ADNBGJ3XXXXXFP8P1GH",
              "type": "string"
            }
          },
          {
            "description": "Whether to pause or resume the webhook destination endpoint.",
            "in": "query",
            "name": "paused",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paused": {
                      "description": "A value representing if the webhook destination endpoint is paused",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "paused"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ok",
            "headers": {
              "s-ratelimit-limit": {
                "description": "Request limit per minute",
                "example": 100,
                "schema": {
                  "type": "integer"
                }
              },
              "s-ratelimit-remaining": {
                "description": "Requests remaining this minute",
                "example": 94,
                "schema": {
                  "type": "integer"
                }
              },
              "s-request-id": {
                "description": "The ID of the request",
                "example": "0E5QDGJC030000E5QDGJC03000",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "duplicate request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Invalid Contact ID",
                      "type": "string"
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer"
                    },
                    "type": {
                      "example": "BAD_PARAMETER",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "type"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Pause or resume a webhook destination endpoint",
        "tags": [
          "Webhooks"
        ]
      }
    }
  },
  "security": [
    {
      "spruceAPIToken": []
    }
  ],
  "servers": [
    {
      "url": "https://api.sprucehealth.com/v1",
      "variables": {
        "domain": {
          "default": "api.sprucehealth.com"
        }
      }
    }
  ]
}